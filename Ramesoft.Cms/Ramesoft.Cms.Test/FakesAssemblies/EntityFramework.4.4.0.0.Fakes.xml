<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.4.4.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.EntityFrameworkDelegates">
            <summary>Contains custom delegates used for the stubs and shims of EntityFramework</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.MaxLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.#ctor(System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.Constructor">
            <summary>Sets the shim of MaxLengthAttribute.MaxLengthAttribute()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.ConstructorInt32">
            <summary>Sets the shim of MaxLengthAttribute.MaxLengthAttribute(Int32 length)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.DefaultErrorMessageStringGet">
            <summary>Sets the shim of MaxLengthAttribute.get_DefaultErrorMessageString()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.EnsureLegalLengths">
            <summary>Sets the shim of MaxLengthAttribute.EnsureLegalLengths()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.FormatErrorMessageString">
            <summary>Sets the shim of MaxLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.IsValidObject">
            <summary>Sets the shim of MaxLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.LengthGet">
            <summary>Sets the shim of MaxLengthAttribute.get_Length()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.LengthSetInt32">
            <summary>Sets the shim of MaxLengthAttribute.set_Length(Int32 value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute._ctorb__0">
            <summary>Sets the shim of MaxLengthAttribute.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute._ctorb__2">
            <summary>Sets the shim of MaxLengthAttribute.&lt;.ctor&gt;b__2()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances.EnsureLegalLengths">
            <summary>Sets the shim of MaxLengthAttribute.EnsureLegalLengths()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances.FormatErrorMessageString">
            <summary>Sets the shim of MaxLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances.IsValidObject">
            <summary>Sets the shim of MaxLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances.LengthGet">
            <summary>Sets the shim of MaxLengthAttribute.get_Length()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMaxLengthAttribute.AllInstances.LengthSetInt32">
            <summary>Sets the shim of MaxLengthAttribute.set_Length(Int32 value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.MinLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.#ctor(System.ComponentModel.DataAnnotations.MinLengthAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.ConstructorInt32">
            <summary>Sets the shim of MinLengthAttribute.MinLengthAttribute(Int32 length)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.EnsureLegalLengths">
            <summary>Sets the shim of MinLengthAttribute.EnsureLegalLengths()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.FormatErrorMessageString">
            <summary>Sets the shim of MinLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.IsValidObject">
            <summary>Sets the shim of MinLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.LengthGet">
            <summary>Sets the shim of MinLengthAttribute.get_Length()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.LengthSetInt32">
            <summary>Sets the shim of MinLengthAttribute.set_Length(Int32 value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute._ctorb__0">
            <summary>Sets the shim of MinLengthAttribute.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances.EnsureLegalLengths">
            <summary>Sets the shim of MinLengthAttribute.EnsureLegalLengths()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances.FormatErrorMessageString">
            <summary>Sets the shim of MinLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances.IsValidObject">
            <summary>Sets the shim of MinLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances.LengthGet">
            <summary>Sets the shim of MinLengthAttribute.get_Length()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.ShimMinLengthAttribute.AllInstances.LengthSetInt32">
            <summary>Sets the shim of MinLengthAttribute.set_Length(Int32 value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.MaxLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.FormatErrorMessage(System.String)">
            <summary>Sets the stub of MaxLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.FormatErrorMessageString">
            <summary>Sets the stub of MaxLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubMaxLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsValid(System.Object)">
            <summary>Sets the stub of MaxLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsValidObject">
            <summary>Sets the stub of MaxLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.IsValidObjectValidationContext">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMaxLengthAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.MinLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.FormatErrorMessage(System.String)">
            <summary>Sets the stub of MinLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.FormatErrorMessageString">
            <summary>Sets the stub of MinLengthAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubMinLengthAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsValid(System.Object)">
            <summary>Sets the stub of MinLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsValidObject">
            <summary>Sets the stub of MinLengthAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.IsValidObjectValidationContext">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Fakes.StubMinLengthAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.ColumnAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.ColumnAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.Constructor">
            <summary>Sets the shim of ColumnAttribute.ColumnAttribute()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.ConstructorString">
            <summary>Sets the shim of ColumnAttribute.ColumnAttribute(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.NameGet">
            <summary>Sets the shim of ColumnAttribute.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.OrderGet">
            <summary>Sets the shim of ColumnAttribute.get_Order()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.OrderSetInt32">
            <summary>Sets the shim of ColumnAttribute.set_Order(Int32 value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.TypeNameGet">
            <summary>Sets the shim of ColumnAttribute.get_TypeName()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.TypeNameSetString">
            <summary>Sets the shim of ColumnAttribute.set_TypeName(String value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ColumnAttribute.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances.OrderGet">
            <summary>Sets the shim of ColumnAttribute.get_Order()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances.OrderSetInt32">
            <summary>Sets the shim of ColumnAttribute.set_Order(Int32 value)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances.TypeNameGet">
            <summary>Sets the shim of ColumnAttribute.get_TypeName()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimColumnAttribute.AllInstances.TypeNameSetString">
            <summary>Sets the shim of ColumnAttribute.set_TypeName(String value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.Constructor">
            <summary>Sets the shim of ComplexTypeAttribute.ComplexTypeAttribute()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimComplexTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.ConstructorDatabaseGeneratedOption">
            <summary>Sets the shim of DatabaseGeneratedAttribute.DatabaseGeneratedAttribute(DatabaseGeneratedOption databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.DatabaseGeneratedOptionGet">
            <summary>Sets the shim of DatabaseGeneratedAttribute.get_DatabaseGeneratedOption()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.DatabaseGeneratedOptionSetDatabaseGeneratedOption">
            <summary>Sets the shim of DatabaseGeneratedAttribute.set_DatabaseGeneratedOption(DatabaseGeneratedOption value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.AllInstances.DatabaseGeneratedOptionGet">
            <summary>Sets the shim of DatabaseGeneratedAttribute.get_DatabaseGeneratedOption()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimDatabaseGeneratedAttribute.AllInstances.DatabaseGeneratedOptionSetDatabaseGeneratedOption">
            <summary>Sets the shim of DatabaseGeneratedAttribute.set_DatabaseGeneratedOption(DatabaseGeneratedOption value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.ConstructorString">
            <summary>Sets the shim of ForeignKeyAttribute.ForeignKeyAttribute(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.NameGet">
            <summary>Sets the shim of ForeignKeyAttribute.get_Name()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimForeignKeyAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ForeignKeyAttribute.get_Name()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.ConstructorString">
            <summary>Sets the shim of InversePropertyAttribute.InversePropertyAttribute(String property)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.PropertyGet">
            <summary>Sets the shim of InversePropertyAttribute.get_Property()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimInversePropertyAttribute.AllInstances.PropertyGet">
            <summary>Sets the shim of InversePropertyAttribute.get_Property()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.Constructor">
            <summary>Sets the shim of NotMappedAttribute.NotMappedAttribute()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimNotMappedAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute">
            <summary>Shim type of System.ComponentModel.DataAnnotations.Schema.TableAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.TableAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.ConstructorString">
            <summary>Sets the shim of TableAttribute.TableAttribute(String name)</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.NameGet">
            <summary>Sets the shim of TableAttribute.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.SchemaGet">
            <summary>Sets the shim of TableAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.SchemaSetString">
            <summary>Sets the shim of TableAttribute.set_Schema(String value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.AllInstances.NameGet">
            <summary>Sets the shim of TableAttribute.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.AllInstances.SchemaGet">
            <summary>Sets the shim of TableAttribute.get_Schema()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.ShimTableAttribute.AllInstances.SchemaSetString">
            <summary>Sets the shim of TableAttribute.set_Schema(String value)</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.ColumnAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubColumnAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubColumnAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubComplexTypeAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubComplexTypeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseGeneratedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubDatabaseGeneratedAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubForeignKeyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubInversePropertyAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubInversePropertyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubNotMappedAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubNotMappedAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute">
            <summary>Stub type of System.ComponentModel.DataAnnotations.Schema.TableAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTableAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Schema.Fakes.StubTableAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConvertToBindingOf1DbExpressionFuncOfDbExpressionM0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0},``0,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding})">
            <summary>Sets the shim of DbExpressionBuilder.ConvertToBinding(DbExpression source, Func`2&lt;DbExpression,!!0&gt; argument, !!0&amp; argumentResult)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.JoinOf1DbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0},System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.Join(DbExpression outer, DbExpression inner, Func`2&lt;DbExpression,DbExpression&gt; outerKey, Func`2&lt;DbExpression,DbExpression&gt; innerKey, Func`3&lt;DbExpression,DbExpression,!!0&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ResolveToExpressionOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>Sets the shim of DbExpressionBuilder.ResolveToExpression(!!0 argument)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectManyOf1DbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0},System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.SelectMany(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; apply, Func`3&lt;DbExpression,DbExpression,!!0&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectOf1DbExpressionFuncOfDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0},System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.Select(DbExpression source, Func`2&lt;DbExpression,!!0&gt; projection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TryGetAnonymousTypeValuesOf2ObjectListOfKeyValuePairOfStringM1Out``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Object,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,``1}},System.Boolean})">
            <summary>Sets the shim of DbExpressionBuilder.TryGetAnonymousTypeValues(Object instance, List`1&lt;KeyValuePair`2&lt;String,!!1&gt;&gt;&amp; values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AggregateDistinctEdmFunctionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.AggregateDistinct(EdmFunction function, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AggregateEdmFunctionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Aggregate(EdmFunction function, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AllDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.All(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AllDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.All(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AndDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.And(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpression source)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AsDbAggregateString">
            <summary>Sets the shim of DbExpressionBuilder.As(DbAggregate value, String alias)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AsDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.As(DbExpression value, String alias)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BindAsDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.BindAs(DbExpression input, String varName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BindDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Bind(DbExpression input)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CaseIEnumerableOfDbExpressionIEnumerableOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Case(IEnumerable`1&lt;DbExpression&gt; whenExpressions, IEnumerable`1&lt;DbExpression&gt; thenExpressions, DbExpression elseExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CastToDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.CastTo(DbExpression argument, TypeUsage toType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConstantObject">
            <summary>Sets the shim of DbExpressionBuilder.Constant(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConstantTypeUsageObject">
            <summary>Sets the shim of DbExpressionBuilder.Constant(TypeUsage constantType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConvertToBindingDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpressionDbExpressionOut">
            <summary>Sets the shim of DbExpressionBuilder.ConvertToBinding(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; argument, DbExpression&amp; argumentExp)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateApplyDbExpressionFuncOfDbExpressionKeyValuePairOfStringDbExpressionFuncOfDbExpressionBindingDbExpressionBindingDbApplyExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateApply(DbExpression source, Func`2&lt;DbExpression,KeyValuePair`2&lt;String,DbExpression&gt;&gt; apply, Func`3&lt;DbExpressionBinding,DbExpressionBinding,DbApplyExpression&gt; resultBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateApplyExpressionByKindDbExpressionKindDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CreateApplyExpressionByKind(DbExpressionKind applyKind, DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateApplyResultTypeDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CreateApplyResultType(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateArithmeticDbExpressionKindDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateArithmetic(DbExpressionKind kind, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateCollectionResultTypeEdmType">
            <summary>Sets the shim of DbExpressionBuilder.CreateCollectionResultType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateCollectionResultTypeTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.CreateCollectionResultType(TypeUsage elementType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateComparisonDbExpressionKindDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateComparison(DbExpressionKind kind, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateElementExpressionUnwrapSinglePropertyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateElementExpressionUnwrapSingleProperty(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateFunctionAggregateEdmFunctionDbExpressionBoolean">
            <summary>Sets the shim of DbExpressionBuilder.CreateFunctionAggregate(EdmFunction function, DbExpression argument, Boolean isDistinct)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateInExpressionDbExpressionIListOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateInExpression(DbExpression item, IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateIsNullExpressionAllowingRowTypeArgumentDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateIsNullExpressionAllowingRowTypeArgument(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateJoinExpressionByKindDbExpressionKindDbExpressionDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CreateJoinExpressionByKind(DbExpressionKind joinKind, DbExpression joinCondition, DbExpressionBinding input1, DbExpressionBinding input2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateLambdaDbExpressionIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateLambda(DbExpression body, IEnumerable`1&lt;DbVariableReferenceExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateNewCollectionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateNewCollection(IEnumerable`1&lt;DbExpression&gt; elements)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreatePrimitiveNullExpressionPrimitiveTypeKind">
            <summary>Sets the shim of DbExpressionBuilder.CreatePrimitiveNullExpression(PrimitiveTypeKind primitiveType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreatePropertyExpressionFromMemberDbExpressionEdmMember">
            <summary>Sets the shim of DbExpressionBuilder.CreatePropertyExpressionFromMember(DbExpression instance, EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, DbExpression[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetEntityTypeDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, EntityType entityType, DbExpression[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetEntityTypeIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, EntityType entityType, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefExpressionEntitySetEntityTypeIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRefExpression(EntitySet entitySet, EntityType entityType, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefExpressionEntitySetIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRefExpression(EntitySet entitySet, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateThenByDbSortExpressionFuncOfDbExpressionDbExpressionBooleanStringBoolean">
            <summary>Sets the shim of DbExpressionBuilder.CreateThenBy(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, Boolean ascending, String collation, Boolean useCollation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossApplyDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CrossApply(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossApplyDbExpressionFuncOfDbExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CrossApply(DbExpression source, Func`2&lt;DbExpression,KeyValuePair`2&lt;String,DbExpression&gt;&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossJoinIEnumerableOfDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CrossJoin(IEnumerable`1&lt;DbExpressionBinding&gt; inputs)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DerefDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Deref(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DistinctDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Distinct(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DivideDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Divide(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ElementDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Element(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.EqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Equal(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExceptDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Except(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExistsDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Exists(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExtractAliasMethodInfo">
            <summary>Sets the shim of DbExpressionBuilder.ExtractAlias(MethodInfo method)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExtractAliasesMethodInfo">
            <summary>Sets the shim of DbExpressionBuilder.ExtractAliases(MethodInfo method)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FalseGet">
            <summary>Sets the shim of DbExpressionBuilder.get_False()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FilterDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Filter(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FullOuterJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.FullOuterJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FullOuterJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.FullOuterJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GetEntityRefDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GetEntityRef(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GetRefKeyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GetRefKey(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GreaterThanDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GreaterThan(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GreaterThanOrEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GreaterThanOrEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupAggregateDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GroupAggregate(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupBindAsDbExpressionStringString">
            <summary>Sets the shim of DbExpressionBuilder.GroupBindAs(DbExpression input, String varName, String groupVarName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupBindDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GroupBind(DbExpression input)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupByDbGroupExpressionBindingIEnumerableOfKeyValuePairOfStringDbExpressionIEnumerableOfKeyValuePairOfStringDbAggregate">
            <summary>Sets the shim of DbExpressionBuilder.GroupBy(DbGroupExpressionBinding input, IEnumerable`1&lt;KeyValuePair`2&lt;String,DbExpression&gt;&gt; keys, IEnumerable`1&lt;KeyValuePair`2&lt;String,DbAggregate&gt;&gt; aggregates)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InDbExpressionIListOfDbConstantExpression">
            <summary>Sets the shim of DbExpressionBuilder.In(DbExpression expression, IList`1&lt;DbConstantExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InnerJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InnerJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InnerJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InnerJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IntersectDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Intersect(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeDbLambdaDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(DbLambda lambda, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeDbLambdaIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(DbLambda lambda, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeEdmFunctionDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(EdmFunction function, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeEdmFunctionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(EdmFunction function, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeFunctionEdmFunctionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InvokeFunction(EdmFunction function, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeLambdaDbLambdaIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InvokeLambda(DbLambda lambda, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsConstantNegativeIntegerDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.IsConstantNegativeInteger(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsEmptyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.IsEmpty(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsNullDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.IsNull(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsOfDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.IsOf(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsOfOnlyDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.IsOfOnly(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.JoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Join(DbExpression outer, DbExpression inner, Func`2&lt;DbExpression,DbExpression&gt; outerKey, Func`2&lt;DbExpression,DbExpression&gt; innerKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LambdaDbExpressionDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Lambda(DbExpression body, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LambdaDbExpressionIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DbExpressionBuilder.Lambda(DbExpression body, IEnumerable`1&lt;DbVariableReferenceExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LeftOuterJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LeftOuterJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LeftOuterJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LessThanDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LessThan(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LessThanOrEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LessThanOrEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LikeDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Like(DbExpression argument, DbExpression pattern)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LikeDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Like(DbExpression argument, DbExpression pattern, DbExpression escape)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LimitDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Limit(DbExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.MinusDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Minus(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ModuloDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Modulo(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.MultiplyDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Multiply(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateAllowingAllRelationshipsInSameTypeHierarchyDbExpressionRelationshipEndMemberRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.NavigateAllowingAllRelationshipsInSameTypeHierarchy(DbExpression navigateFrom, RelationshipEndMember fromEnd, RelationshipEndMember toEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateDbExpressionRelationshipEndMemberRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.Navigate(DbExpression navigateFrom, RelationshipEndMember fromEnd, RelationshipEndMember toEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateRelationshipTypeStringStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Navigate(RelationshipType type, String fromEndName, String toEndName, DbExpression navigateFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NegateDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Negate(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewCollectionDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.NewCollection(DbExpression[] elements)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewCollectionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NewCollection(IEnumerable`1&lt;DbExpression&gt; elements)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewEmptyCollectionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.NewEmptyCollection(TypeUsage collectionType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewInstanceTypeUsageIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NewInstance(TypeUsage instanceType, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewRowIEnumerableOfKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NewRow(IEnumerable`1&lt;KeyValuePair`2&lt;String,DbExpression&gt;&gt; columnValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewTypeUsageDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.New(TypeUsage instanceType, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewTypeUsageIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.New(TypeUsage instanceType, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NotDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Not(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NotEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NotEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NullTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.Null(TypeUsage nullType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OfTypeDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.OfType(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OfTypeOnlyDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.OfTypeOnly(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Or(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OrderBy(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDbExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.OrderBy(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDescendingDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OrderByDescending(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDescendingDbExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.OrderByDescending(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OuterApplyDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.OuterApply(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OuterApplyDbExpressionFuncOfDbExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OuterApply(DbExpression source, Func`2&lt;DbExpression,KeyValuePair`2&lt;String,DbExpression&gt;&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ParameterTypeUsageString">
            <summary>Sets the shim of DbExpressionBuilder.Parameter(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PlusDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Plus(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ProjectDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Project(DbExpressionBinding input, DbExpression projection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyByNameDbExpressionStringBoolean">
            <summary>Sets the shim of DbExpressionBuilder.PropertyByName(DbExpression instance, String propertyName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionEdmProperty">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, EdmProperty propertyMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionNavigationProperty">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, NavigationProperty navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, RelationshipEndMember relationshipEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyFromMemberDbExpressionEdmMemberString">
            <summary>Sets the shim of DbExpressionBuilder.PropertyFromMember(DbExpression instance, EdmMember property, String propertyArgumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.RefFromKeyEntitySetDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.RefFromKey(EntitySet entitySet, DbExpression keyRow)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.RefFromKeyEntitySetDbExpressionEntityType">
            <summary>Sets the shim of DbExpressionBuilder.RefFromKey(EntitySet entitySet, DbExpression keyRow, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ScanEntitySetBase">
            <summary>Sets the shim of DbExpressionBuilder.Scan(EntitySetBase targetSet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectManyDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.SelectMany(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SkipDbExpressionBindingIEnumerableOfDbSortClauseDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Skip(DbExpressionBinding input, IEnumerable`1&lt;DbSortClause&gt; sortOrder, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SkipDbSortExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Skip(DbSortExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SortDbExpressionBindingIEnumerableOfDbSortClause">
            <summary>Sets the shim of DbExpressionBuilder.Sort(DbExpressionBinding input, IEnumerable`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.StaticConstructor">
            <summary>Sets the shim of DbExpressionBuilder.DbExpressionBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TakeDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Take(DbExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDbSortExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ThenBy(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDbSortExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ThenBy(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDescendingDbSortExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ThenByDescending(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDescendingDbSortExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ThenByDescending(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClause(DbExpression key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClause(DbExpression key, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDescendingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClauseDescending(DbExpression key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDescendingDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClauseDescending(DbExpression key, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TreatAsDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.TreatAs(DbExpression argument, TypeUsage treatType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TrueGet">
            <summary>Sets the shim of DbExpressionBuilder.get_True()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TryResolveToConstantTypeObjectDbExpressionOut">
            <summary>Sets the shim of DbExpressionBuilder.TryResolveToConstant(Type type, Object value, DbExpression&amp; constantOrNullExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnaryMinusDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.UnaryMinus(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnionAllDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.UnionAll(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Union(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateApplyDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.ValidateApply(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateIsNullDbExpressionBoolean">
            <summary>Sets the shim of DbExpressionBuilder.ValidateIsNull(DbExpression argument, Boolean allowRowType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateIsOfDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.ValidateIsOf(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateLikeDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ValidateLike(DbExpression argument, DbExpression pattern)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateLikeDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ValidateLike(DbExpression argument, DbExpression pattern, DbExpression escape)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ValidateOfTypeDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.ValidateOfType(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.VariableTypeUsageString">
            <summary>Sets the shim of DbExpressionBuilder.Variable(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.WhereDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Where(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder._ExtractAliasesb__3ParameterInfo">
            <summary>Sets the shim of DbExpressionBuilder.&lt;ExtractAliases&gt;b__3(ParameterInfo p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AbsDbExpression">
            <summary>Sets the shim of EdmFunctions.Abs(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddDaysDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddDays(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddHoursDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddHours(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMicrosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMicroseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMillisecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMilliseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMinutesDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMinutes(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMonthsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMonths(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddNanosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddNanoseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddSecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddSeconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddYearsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddYears(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AverageDbExpression">
            <summary>Sets the shim of EdmFunctions.Average(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseAndDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseAnd(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseNotDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseNot(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseOrDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseOr(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseXorDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseXor(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CeilingDbExpression">
            <summary>Sets the shim of EdmFunctions.Ceiling(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ConcatDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Concat(DbExpression string1, DbExpression string2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ContainsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Contains(DbExpression searchedString, DbExpression searchedForString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CountDbExpression">
            <summary>Sets the shim of EdmFunctions.Count(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateDateTimeDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateDateTime(DbExpression year, DbExpression month, DbExpression day, DbExpression hour, DbExpression minute, DbExpression second)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateDateTimeOffsetDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateDateTimeOffset(DbExpression year, DbExpression month, DbExpression day, DbExpression hour, DbExpression minute, DbExpression second, DbExpression timeZoneOffset)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateTimeDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateTime(DbExpression hour, DbExpression minute, DbExpression second)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentDateTime">
            <summary>Sets the shim of EdmFunctions.CurrentDateTime()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentDateTimeOffset">
            <summary>Sets the shim of EdmFunctions.CurrentDateTimeOffset()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentUtcDateTime">
            <summary>Sets the shim of EdmFunctions.CurrentUtcDateTime()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DayDbExpression">
            <summary>Sets the shim of EdmFunctions.Day(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DayOfYearDbExpression">
            <summary>Sets the shim of EdmFunctions.DayOfYear(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffDaysDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffDays(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffHoursDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffHours(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMicrosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMicroseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMillisecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMilliseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMinutesDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMinutes(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMonthsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMonths(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffNanosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffNanoseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffSecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffSeconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffYearsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffYears(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.EndsWithDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.EndsWith(DbExpression stringArgument, DbExpression suffix)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.FloorDbExpression">
            <summary>Sets the shim of EdmFunctions.Floor(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.GetTotalOffsetMinutesDbExpression">
            <summary>Sets the shim of EdmFunctions.GetTotalOffsetMinutes(DbExpression dateTimeOffsetArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.HourDbExpression">
            <summary>Sets the shim of EdmFunctions.Hour(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.IndexOfDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.IndexOf(DbExpression searchString, DbExpression stringToFind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.InvokeCanonicalFunctionStringDbExpressionArray">
            <summary>Sets the shim of EdmFunctions.InvokeCanonicalFunction(String functionName, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LeftDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Left(DbExpression stringArgument, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LengthDbExpression">
            <summary>Sets the shim of EdmFunctions.Length(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LongCountDbExpression">
            <summary>Sets the shim of EdmFunctions.LongCount(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MaxDbExpression">
            <summary>Sets the shim of EdmFunctions.Max(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MillisecondDbExpression">
            <summary>Sets the shim of EdmFunctions.Millisecond(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MinDbExpression">
            <summary>Sets the shim of EdmFunctions.Min(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MinuteDbExpression">
            <summary>Sets the shim of EdmFunctions.Minute(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MonthDbExpression">
            <summary>Sets the shim of EdmFunctions.Month(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.NewGuid">
            <summary>Sets the shim of EdmFunctions.NewGuid()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.PowerDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Power(DbExpression baseArgument, DbExpression exponent)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ReplaceDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Replace(DbExpression stringArgument, DbExpression toReplace, DbExpression replacement)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ResolveCanonicalFunctionStringTypeUsageArray">
            <summary>Sets the shim of EdmFunctions.ResolveCanonicalFunction(String functionName, TypeUsage[] argumentTypes)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ReverseDbExpression">
            <summary>Sets the shim of EdmFunctions.Reverse(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RightDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Right(DbExpression stringArgument, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RoundDbExpression">
            <summary>Sets the shim of EdmFunctions.Round(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RoundDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Round(DbExpression value, DbExpression digits)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SecondDbExpression">
            <summary>Sets the shim of EdmFunctions.Second(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StDevDbExpression">
            <summary>Sets the shim of EdmFunctions.StDev(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StDevPDbExpression">
            <summary>Sets the shim of EdmFunctions.StDevP(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StartsWithDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.StartsWith(DbExpression stringArgument, DbExpression prefix)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SubstringDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Substring(DbExpression stringArgument, DbExpression start, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SumDbExpression">
            <summary>Sets the shim of EdmFunctions.Sum(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ToLowerDbExpression">
            <summary>Sets the shim of EdmFunctions.ToLower(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ToUpperDbExpression">
            <summary>Sets the shim of EdmFunctions.ToUpper(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimDbExpression">
            <summary>Sets the shim of EdmFunctions.Trim(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimEndDbExpression">
            <summary>Sets the shim of EdmFunctions.TrimEnd(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimStartDbExpression">
            <summary>Sets the shim of EdmFunctions.TrimStart(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TruncateDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Truncate(DbExpression value, DbExpression digits)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TruncateTimeDbExpression">
            <summary>Sets the shim of EdmFunctions.TruncateTime(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.VarDbExpression">
            <summary>Sets the shim of EdmFunctions.Var(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.VarPDbExpression">
            <summary>Sets the shim of EdmFunctions.VarP(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.YearDbExpression">
            <summary>Sets the shim of EdmFunctions.Year(DbExpression dateValue)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.#ctor(System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ConstructorKeyValuePairOfStringDbExpressionKeyValuePairOfStringDbExpressionArray">
            <summary>Sets the shim of Row.Row(KeyValuePair`2&lt;String,DbExpression&gt; columnValue, KeyValuePair`2&lt;String,DbExpression&gt;[] columnValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ImplicitOpRowDbExpression">
            <summary>Sets the shim of Row.op_Implicit(Row row)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ToExpression">
            <summary>Sets the shim of Row.ToExpression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.AllInstances.ToExpression">
            <summary>Sets the shim of Row.ToExpression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AreaDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Area(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsBinary(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsGml(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsText(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.CentroidDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Centroid(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.CoordinateSystemIdDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.CoordinateSystemId(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.DistanceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Distance(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.ElevationDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Elevation(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.EndPointDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.EndPoint(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.ExteriorRingDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.ExteriorRing(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyCollectionFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyCollectionFromBinary(DbExpression geographyCollectionWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyCollectionFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyCollectionFromText(DbExpression geographyCollectionWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromBinary(DbExpression wellKnownBinaryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromGml(DbExpression geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromGmlDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromGml(DbExpression geographyMarkup, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromText(DbExpression wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromText(DbExpression wellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryCollectionFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryCollectionFromBinary(DbExpression geometryCollectionWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryCollectionFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryCollectionFromText(DbExpression geometryCollectionWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromBinary(DbExpression wellKnownBinaryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromGml(DbExpression geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromGmlDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromGml(DbExpression geometryMarkup, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromText(DbExpression wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromText(DbExpression wellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.InteriorRingAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.InteriorRingAt(DbExpression geometryValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.InteriorRingCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.InteriorRingCount(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsClosedSpatialDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsClosedSpatial(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsEmptySpatialDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsEmptySpatial(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsRingDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsRing(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsSimpleGeometryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsSimpleGeometry(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsValidGeometryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsValidGeometry(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.LatitudeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Latitude(DbExpression geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.LongitudeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Longitude(DbExpression geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.MeasureDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Measure(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointAt(DbExpression spatialValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointCount(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointOnSurfaceDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointOnSurface(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialBoundaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialBoundary(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialBufferDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialBuffer(DbExpression spatialValue, DbExpression distance)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialContainsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialContains(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialConvexHullDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialConvexHull(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialCrossesDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialCrosses(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDifferenceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDifference(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDimensionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDimension(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDisjointDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDisjoint(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialElementAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialElementAt(DbExpression spatialValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialElementCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialElementCount(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialEnvelopeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialEnvelope(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialEqualsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialEquals(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialIntersectionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialIntersection(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialIntersectsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialIntersects(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialLengthDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialLength(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialOverlapsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialOverlaps(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialRelateDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialRelate(DbExpression geometryValue1, DbExpression geometryValue2, DbExpression intersectionPatternMatrix)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialSymmetricDifferenceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialSymmetricDifference(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialTouchesDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialTouches(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialTypeNameDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialTypeName(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialUnionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialUnion(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialWithinDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialWithin(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.StartPointDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.StartPoint(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.XCoordinateDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.XCoordinate(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.YCoordinateDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.YCoordinate(DbExpression geometryValue)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.#ctor(System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.Constructor">
            <summary>Sets the shim of BasicCommandTreeVisitor.BasicCommandTreeVisitor()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitCommandTreeDbCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitCommandTree(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitDeleteCommandTreeDbDeleteCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitDeleteCommandTree(DbDeleteCommandTree deleteTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitFunctionCommandTreeDbFunctionCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitFunctionCommandTree(DbFunctionCommandTree functionTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitInsertCommandTreeDbInsertCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitInsertCommandTree(DbInsertCommandTree insertTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitModificationClauseDbModificationClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitModificationClause(DbModificationClause modificationClause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitModificationClausesIListOfDbModificationClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitModificationClauses(IList`1&lt;DbModificationClause&gt; modificationClauses)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitQueryCommandTreeDbQueryCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitQueryCommandTree(DbQueryCommandTree queryTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitSetClauseDbSetClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitSetClause(DbSetClause setClause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.VisitUpdateCommandTreeDbUpdateCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitUpdateCommandTree(DbUpdateCommandTree updateTree)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitCommandTreeDbCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitCommandTree(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitDeleteCommandTreeDbDeleteCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitDeleteCommandTree(DbDeleteCommandTree deleteTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitFunctionCommandTreeDbFunctionCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitFunctionCommandTree(DbFunctionCommandTree functionTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitInsertCommandTreeDbInsertCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitInsertCommandTree(DbInsertCommandTree insertTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitModificationClauseDbModificationClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitModificationClause(DbModificationClause modificationClause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitModificationClausesIListOfDbModificationClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitModificationClauses(IList`1&lt;DbModificationClause&gt; modificationClauses)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitQueryCommandTreeDbQueryCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitQueryCommandTree(DbQueryCommandTree queryTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitSetClauseDbSetClause">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitSetClause(DbSetClause setClause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicCommandTreeVisitor.AllInstances.VisitUpdateCommandTreeDbUpdateCommandTree">
            <summary>Sets the shim of BasicCommandTreeVisitor.VisitUpdateCommandTree(DbUpdateCommandTree updateTree)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.#ctor(System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.Constructor">
            <summary>Sets the shim of BasicExpressionVisitor.BasicExpressionVisitor()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the shim of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitAggregateListIListOfDbAggregate">
            <summary>Sets the shim of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitBinaryExpressionDbBinaryExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbInExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitExpressionBindingPostDbExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitExpressionBindingPreDbExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitGroupExpressionBindingMidDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitGroupExpressionBindingPostDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitGroupExpressionBindingPreDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitLambdaPostDbLambda">
            <summary>Sets the shim of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitLambdaPreDbLambda">
            <summary>Sets the shim of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.VisitUnaryExpressionDbUnaryExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitAggregateDbAggregate">
            <summary>Sets the shim of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitAggregateListIListOfDbAggregate">
            <summary>Sets the shim of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitBinaryExpressionDbBinaryExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbAndExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbApplyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbArithmeticExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbCaseExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbCastExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbComparisonExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbConstantExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbCrossJoinExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbDerefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbDistinctExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbElementExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbEntityRefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbExceptExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbFilterExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbFunctionExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbGroupByExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbInExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbIntersectExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbIsEmptyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbIsNullExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbIsOfExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbJoinExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbLikeExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbLimitExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbNewInstanceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbNotExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbNullExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbOfTypeExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbOrExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbProjectExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbPropertyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbQuantifierExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbRefExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbRefKeyExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbScanExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbSkipExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbSortExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbTreatExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbUnionAllExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitExpressionBindingPostDbExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitExpressionBindingPreDbExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitExpressionDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitGroupExpressionBindingMidDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitGroupExpressionBindingPostDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitGroupExpressionBindingPreDbGroupExpressionBinding">
            <summary>Sets the shim of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitLambdaPostDbLambda">
            <summary>Sets the shim of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitLambdaPreDbLambda">
            <summary>Sets the shim of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimBasicExpressionVisitor.AllInstances.VisitUnaryExpressionDbUnaryExpression">
            <summary>Sets the shim of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbAggregate</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.ArgumentsGet">
            <summary>Sets the shim of DbAggregate.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.ResultTypeGet">
            <summary>Sets the shim of DbAggregate.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbAggregate.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbAggregate.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbAndExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbAndExpression.DbAndExpression(TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbAndExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.ApplyGet">
            <summary>Sets the shim of DbApplyExpression.get_Apply()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbApplyExpression.DbApplyExpression(DbExpressionKind applyKind, TypeUsage resultRowCollectionTypeUsage, DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.InputGet">
            <summary>Sets the shim of DbApplyExpression.get_Input()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.ApplyGet">
            <summary>Sets the shim of DbApplyExpression.get_Apply()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbApplyExpression.get_Input()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.ArgumentsGet">
            <summary>Sets the shim of DbArithmeticExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbArithmeticExpression.get_Arguments()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.Constructor">
            <summary>Sets the shim of DbBinaryExpression.DbBinaryExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.ConstructorDbExpressionKindTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbBinaryExpression.DbBinaryExpression(DbExpressionKind kind, TypeUsage type, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.LeftGet">
            <summary>Sets the shim of DbBinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.RightGet">
            <summary>Sets the shim of DbBinaryExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances.LeftGet">
            <summary>Sets the shim of DbBinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances.RightGet">
            <summary>Sets the shim of DbBinaryExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.ElseGet">
            <summary>Sets the shim of DbCaseExpression.get_Else()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.ThenGet">
            <summary>Sets the shim of DbCaseExpression.get_Then()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.WhenGet">
            <summary>Sets the shim of DbCaseExpression.get_When()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.ElseGet">
            <summary>Sets the shim of DbCaseExpression.get_Else()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.ThenGet">
            <summary>Sets the shim of DbCaseExpression.get_Then()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.WhenGet">
            <summary>Sets the shim of DbCaseExpression.get_When()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbCastExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.Constructor">
            <summary>Sets the shim of DbCastExpression.DbCastExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbCastExpression.DbCastExpression(TypeUsage type, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbCastExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.Constructor">
            <summary>Sets the shim of DbCommandTree.DbCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.ConstructorMetadataWorkspaceDataSpace">
            <summary>Sets the shim of DbCommandTree.DbCommandTree(MetadataWorkspace metadata, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.DataSpaceGet">
            <summary>Sets the shim of DbCommandTree.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.IsValidDataSpaceDataSpace">
            <summary>Sets the shim of DbCommandTree.IsValidDataSpace(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.IsValidParameterNameString">
            <summary>Sets the shim of DbCommandTree.IsValidParameterName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.MetadataWorkspaceGet">
            <summary>Sets the shim of DbCommandTree.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.ParametersGet">
            <summary>Sets the shim of DbCommandTree.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.Print">
            <summary>Sets the shim of DbCommandTree.Print()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.ToString">
            <summary>Sets the shim of DbCommandTree.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.DataSpaceGet">
            <summary>Sets the shim of DbCommandTree.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of DbCommandTree.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.ParametersGet">
            <summary>Sets the shim of DbCommandTree.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.Print">
            <summary>Sets the shim of DbCommandTree.Print()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.ToString01">
            <summary>Sets the shim of DbCommandTree.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.ConstructorDbExpressionKindTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbComparisonExpression.DbComparisonExpression(DbExpressionKind kind, TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.Constructor">
            <summary>Sets the shim of DbConstantExpression.DbConstantExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.ConstructorTypeUsageObject">
            <summary>Sets the shim of DbConstantExpression.DbConstantExpression(TypeUsage resultType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.GetValue">
            <summary>Sets the shim of DbConstantExpression.GetValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.ValueGet">
            <summary>Sets the shim of DbConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.GetValue">
            <summary>Sets the shim of DbConstantExpression.GetValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.ValueGet">
            <summary>Sets the shim of DbConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.ConstructorTypeUsageReadOnlyCollectionOfDbExpressionBinding">
            <summary>Sets the shim of DbCrossJoinExpression.DbCrossJoinExpression(TypeUsage collectionOfRowResultType, ReadOnlyCollection`1&lt;DbExpressionBinding&gt; inputs)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.InputsGet">
            <summary>Sets the shim of DbCrossJoinExpression.get_Inputs()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.InputsGet">
            <summary>Sets the shim of DbCrossJoinExpression.get_Inputs()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.CommandTreeKindGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.Constructor">
            <summary>Sets the shim of DbDeleteCommandTree.DbDeleteCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbDeleteCommandTree.DbDeleteCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.HasReaderGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.PredicateGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances.CommandTreeKindGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances.PredicateGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbDerefExpression.DbDerefExpression(TypeUsage entityResultType, DbExpression refExpr)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbDistinctExpression.DbDistinctExpression(TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbElementExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbElementExpression.DbElementExpression(TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.ConstructorTypeUsageDbExpressionBoolean">
            <summary>Sets the shim of DbElementExpression.DbElementExpression(TypeUsage resultType, DbExpression argument, Boolean unwrapSingleProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.IsSinglePropertyUnwrappedGet">
            <summary>Sets the shim of DbElementExpression.get_IsSinglePropertyUnwrapped()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbElementExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.IsSinglePropertyUnwrappedGet">
            <summary>Sets the shim of DbElementExpression.get_IsSinglePropertyUnwrapped()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbEntityRefExpression.DbEntityRefExpression(TypeUsage refResultType, DbExpression entity)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbExceptExpression.DbExceptExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.CheckExpressionKindDbExpressionKind">
            <summary>Sets the shim of DbExpression.CheckExpressionKind(DbExpressionKind kind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.Constructor">
            <summary>Sets the shim of DbExpression.DbExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ConstructorDbExpressionKindTypeUsage">
            <summary>Sets the shim of DbExpression.DbExpression(DbExpressionKind kind, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.EqualsObject">
            <summary>Sets the shim of DbExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ExpressionKindGet">
            <summary>Sets the shim of DbExpression.get_ExpressionKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromBinaryByteArray">
            <summary>Sets the shim of DbExpression.FromBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromBooleanNullableOfBoolean">
            <summary>Sets the shim of DbExpression.FromBoolean(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromByteNullableOfByte">
            <summary>Sets the shim of DbExpression.FromByte(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbExpression.FromDateTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbExpression.FromDateTimeOffset(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromDecimalNullableOfDecimal">
            <summary>Sets the shim of DbExpression.FromDecimal(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromDoubleNullableOfDouble">
            <summary>Sets the shim of DbExpression.FromDouble(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromGeographyDbGeography">
            <summary>Sets the shim of DbExpression.FromGeography(DbGeography value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromGeometryDbGeometry">
            <summary>Sets the shim of DbExpression.FromGeometry(DbGeometry value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromGuidNullableOfGuid">
            <summary>Sets the shim of DbExpression.FromGuid(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromInt16NullableOfInt16">
            <summary>Sets the shim of DbExpression.FromInt16(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromInt32NullableOfInt32">
            <summary>Sets the shim of DbExpression.FromInt32(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromInt64NullableOfInt64">
            <summary>Sets the shim of DbExpression.FromInt64(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromSingleNullableOfSingle">
            <summary>Sets the shim of DbExpression.FromSingle(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.FromStringString">
            <summary>Sets the shim of DbExpression.FromString(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.GetHashCode">
            <summary>Sets the shim of DbExpression.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpByteArrayDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpDbGeographyDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(DbGeography value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpDbGeometryDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(DbGeometry value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfBooleanDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfByteDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDateTimeDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDateTimeOffsetDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDecimalDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDoubleDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfGuidDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt16DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt32DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt64DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfSingleDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpStringDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.ResultTypeGet">
            <summary>Sets the shim of DbExpression.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.EqualsObject">
            <summary>Sets the shim of DbExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.ExpressionKindGet">
            <summary>Sets the shim of DbExpression.get_ExpressionKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbExpression.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbExpression.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.ConstructorDbExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DbExpressionBinding.DbExpressionBinding(DbExpression input, DbVariableReferenceExpression varRef)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.ExpressionGet">
            <summary>Sets the shim of DbExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableGet">
            <summary>Sets the shim of DbExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableNameGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableTypeGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableGet">
            <summary>Sets the shim of DbExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableTypeGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.TryGetMemberOf1DbExpressionStringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String,``0,System.Boolean})">
            <summary>Sets the shim of DbExpressionRebinder.TryGetMember(DbExpression instance, String memberName, !!0&amp; member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.Constructor">
            <summary>Sets the shim of DbExpressionRebinder.DbExpressionRebinder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.ConstructorMetadataWorkspace">
            <summary>Sets the shim of DbExpressionRebinder.DbExpressionRebinder(MetadataWorkspace targetWorkspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.VisitDbPropertyExpression">
            <summary>Sets the shim of DbExpressionRebinder.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DbExpressionRebinder.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.VisitFunctionEdmFunction">
            <summary>Sets the shim of DbExpressionRebinder.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.VisitTypeEdmType">
            <summary>Sets the shim of DbExpressionRebinder.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DbExpressionRebinder.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder._VisitTypeb__0EdmProperty">
            <summary>Sets the shim of DbExpressionRebinder.&lt;VisitType&gt;b__0(EdmProperty prop)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder._VisitTypeb__1KeyValuePairOfStringTypeUsage">
            <summary>Sets the shim of DbExpressionRebinder.&lt;VisitType&gt;b__1(KeyValuePair`2&lt;String,TypeUsage&gt; propInfo)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances.VisitDbPropertyExpression">
            <summary>Sets the shim of DbExpressionRebinder.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DbExpressionRebinder.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances.VisitFunctionEdmFunction">
            <summary>Sets the shim of DbExpressionRebinder.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances.VisitTypeEdmType">
            <summary>Sets the shim of DbExpressionRebinder.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionRebinder.AllInstances.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DbExpressionRebinder.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.Constructor">
            <summary>Sets the shim of DbExpressionVisitor.DbExpressionVisitor()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.VisitDbInExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.AllInstances.VisitDbInExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.Constructor">
            <summary>Sets the shim of DbExpressionVisitor`1.DbExpressionVisitor`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.VisitDbInExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.AllInstances.VisitDbInExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.ConstructorTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbFilterExpression.DbFilterExpression(TypeUsage resultType, DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.InputGet">
            <summary>Sets the shim of DbFilterExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.PredicateGet">
            <summary>Sets the shim of DbFilterExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbFilterExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.PredicateGet">
            <summary>Sets the shim of DbFilterExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.DistinctGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Distinct()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.FunctionGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Function()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances.DistinctGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Distinct()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances.FunctionGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Function()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.CommandTreeKindGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.ConstructorMetadataWorkspaceDataSpaceEdmFunctionTypeUsageIEnumerableOfKeyValuePairOfStringTypeUsage">
            <summary>Sets the shim of DbFunctionCommandTree.DbFunctionCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, EdmFunction edmFunction, TypeUsage resultType, IEnumerable`1&lt;KeyValuePair`2&lt;String,TypeUsage&gt;&gt; parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.EdmFunctionGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_EdmFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.GetParameters">
            <summary>Sets the shim of DbFunctionCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.ResultTypeGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.CommandTreeKindGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.EdmFunctionGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_EdmFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbFunctionCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.ArgumentsGet">
            <summary>Sets the shim of DbFunctionExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.Constructor">
            <summary>Sets the shim of DbFunctionExpression.DbFunctionExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.FunctionGet">
            <summary>Sets the shim of DbFunctionExpression.get_Function()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbFunctionExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.FunctionGet">
            <summary>Sets the shim of DbFunctionExpression.get_Function()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AggregatesGet">
            <summary>Sets the shim of DbGroupByExpression.get_Aggregates()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.InputGet">
            <summary>Sets the shim of DbGroupByExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.KeysGet">
            <summary>Sets the shim of DbGroupByExpression.get_Keys()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AggregatesGet">
            <summary>Sets the shim of DbGroupByExpression.get_Aggregates()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbGroupByExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.KeysGet">
            <summary>Sets the shim of DbGroupByExpression.get_Keys()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.ConstructorDbExpressionDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DbGroupExpressionBinding.DbGroupExpressionBinding(DbExpression input, DbVariableReferenceExpression inputRef, DbVariableReferenceExpression groupRef)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.ExpressionGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupAggregateGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupAggregate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupAggregateGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupAggregate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbInExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbInExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbInExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.ItemGet">
            <summary>Sets the shim of DbInExpression.get_Item()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.ListGet">
            <summary>Sets the shim of DbInExpression.get_List()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbInExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbInExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbInExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AllInstances.ItemGet">
            <summary>Sets the shim of DbInExpression.get_Item()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInExpression.AllInstances.ListGet">
            <summary>Sets the shim of DbInExpression.get_List()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.CommandTreeKindGet">
            <summary>Sets the shim of DbInsertCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.Constructor">
            <summary>Sets the shim of DbInsertCommandTree.DbInsertCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingReadOnlyCollectionOfDbModificationClauseDbExpression">
            <summary>Sets the shim of DbInsertCommandTree.DbInsertCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, ReadOnlyCollection`1&lt;DbModificationClause&gt; setClauses, DbExpression returning)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.HasReaderGet">
            <summary>Sets the shim of DbInsertCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.ReturningGet">
            <summary>Sets the shim of DbInsertCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.SetClausesGet">
            <summary>Sets the shim of DbInsertCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.CommandTreeKindGet">
            <summary>Sets the shim of DbInsertCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbInsertCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.ReturningGet">
            <summary>Sets the shim of DbInsertCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.SetClausesGet">
            <summary>Sets the shim of DbInsertCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbIntersectExpression.DbIntersectExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbIsEmptyExpression.DbIsEmptyExpression(TypeUsage booleanResultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.Constructor">
            <summary>Sets the shim of DbIsNullExpression.DbIsNullExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbIsNullExpression.DbIsNullExpression(TypeUsage booleanResultType, DbExpression arg)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.ConstructorDbExpressionKindTypeUsageDbExpressionTypeUsage">
            <summary>Sets the shim of DbIsOfExpression.DbIsOfExpression(DbExpressionKind isOfKind, TypeUsage booleanResultType, DbExpression argument, TypeUsage isOfType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.OfTypeGet">
            <summary>Sets the shim of DbIsOfExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.OfTypeGet">
            <summary>Sets the shim of DbIsOfExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbJoinExpression.DbJoinExpression(DbExpressionKind joinKind, TypeUsage collectionOfRowResultType, DbExpressionBinding left, DbExpressionBinding right, DbExpression condition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.JoinConditionGet">
            <summary>Sets the shim of DbJoinExpression.get_JoinCondition()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.LeftGet">
            <summary>Sets the shim of DbJoinExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.RightGet">
            <summary>Sets the shim of DbJoinExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.JoinConditionGet">
            <summary>Sets the shim of DbJoinExpression.get_JoinCondition()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.LeftGet">
            <summary>Sets the shim of DbJoinExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.RightGet">
            <summary>Sets the shim of DbJoinExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbLambda</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.BodyGet">
            <summary>Sets the shim of DbLambda.get_Body()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.ConstructorReadOnlyCollectionOfDbVariableReferenceExpressionDbExpression">
            <summary>Sets the shim of DbLambda.DbLambda(ReadOnlyCollection`1&lt;DbVariableReferenceExpression&gt; variables, DbExpression bodyExp)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateDbExpressionDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DbLambda.Create(DbExpression body, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateDbExpressionIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DbLambda.Create(DbExpression body, IEnumerable`1&lt;DbVariableReferenceExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, Func`2&lt;DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, Func`4&lt;DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, Func`5&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, Func`6&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, Func`7&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, Func`8&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, Func`9&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, Func`10&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, Func`11&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, Func`12&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbEx">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, Func`13&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpre">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, Func`14&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressi">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, Func`15&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionD">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, TypeUsage argument15Type, Func`16&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbEx">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, TypeUsage argument15Type, TypeUsage argument16Type, Func`17&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.CreateVariablesMethodInfoTypeUsageArray">
            <summary>Sets the shim of DbLambda.CreateVariables(MethodInfo lambdaMethod, TypeUsage[] argumentTypes)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.VariablesGet">
            <summary>Sets the shim of DbLambda.get_Variables()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances.BodyGet">
            <summary>Sets the shim of DbLambda.get_Body()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances.VariablesGet">
            <summary>Sets the shim of DbLambda.get_Variables()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.ArgumentsGet">
            <summary>Sets the shim of DbLambdaExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.LambdaGet">
            <summary>Sets the shim of DbLambdaExpression.get_Lambda()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbLambdaExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.LambdaGet">
            <summary>Sets the shim of DbLambdaExpression.get_Lambda()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.ArgumentGet">
            <summary>Sets the shim of DbLikeExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.ConstructorTypeUsageDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLikeExpression.DbLikeExpression(TypeUsage booleanResultType, DbExpression input, DbExpression pattern, DbExpression escape)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.EscapeGet">
            <summary>Sets the shim of DbLikeExpression.get_Escape()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.PatternGet">
            <summary>Sets the shim of DbLikeExpression.get_Pattern()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbLikeExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.EscapeGet">
            <summary>Sets the shim of DbLikeExpression.get_Escape()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.PatternGet">
            <summary>Sets the shim of DbLikeExpression.get_Pattern()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.ArgumentGet">
            <summary>Sets the shim of DbLimitExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.ConstructorTypeUsageDbExpressionDbExpressionBoolean">
            <summary>Sets the shim of DbLimitExpression.DbLimitExpression(TypeUsage resultType, DbExpression argument, DbExpression limit, Boolean withTies)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.LimitGet">
            <summary>Sets the shim of DbLimitExpression.get_Limit()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.WithTiesGet">
            <summary>Sets the shim of DbLimitExpression.get_WithTies()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbLimitExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.LimitGet">
            <summary>Sets the shim of DbLimitExpression.get_Limit()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.WithTiesGet">
            <summary>Sets the shim of DbLimitExpression.get_WithTies()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbModificationClause</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbModificationClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.Constructor">
            <summary>Sets the shim of DbModificationClause.DbModificationClause()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.Constructor">
            <summary>Sets the shim of DbModificationCommandTree.DbModificationCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBinding">
            <summary>Sets the shim of DbModificationCommandTree.DbModificationCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.GetParameters">
            <summary>Sets the shim of DbModificationCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.TargetGet">
            <summary>Sets the shim of DbModificationCommandTree.get_Target()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree._GetParametersb__0DbParameterReferenceExpression">
            <summary>Sets the shim of DbModificationCommandTree.&lt;GetParameters&gt;b__0(DbParameterReferenceExpression p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbModificationCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances.TargetGet">
            <summary>Sets the shim of DbModificationCommandTree.get_Target()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.ArgumentsGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.HasRelatedEntityReferencesGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_HasRelatedEntityReferences()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.HasRelatedEntityReferencesGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_HasRelatedEntityReferences()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbNotExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbNotExpression.DbNotExpression(TypeUsage booleanResultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbNotExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbNullExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.ConstructorTypeUsage">
            <summary>Sets the shim of DbNullExpression.DbNullExpression(TypeUsage type)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbNullExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.ConstructorDbExpressionKindTypeUsageDbExpressionTypeUsage">
            <summary>Sets the shim of DbOfTypeExpression.DbOfTypeExpression(DbExpressionKind ofTypeKind, TypeUsage collectionResultType, DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.OfTypeGet">
            <summary>Sets the shim of DbOfTypeExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.OfTypeGet">
            <summary>Sets the shim of DbOfTypeExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbOrExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.Constructor">
            <summary>Sets the shim of DbOrExpression.DbOrExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbOrExpression.DbOrExpression(TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbOrExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.Constructor">
            <summary>Sets the shim of DbParameterReferenceExpression.DbParameterReferenceExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.ConstructorTypeUsageString">
            <summary>Sets the shim of DbParameterReferenceExpression.DbParameterReferenceExpression(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.ParameterNameGet">
            <summary>Sets the shim of DbParameterReferenceExpression.get_ParameterName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.ParameterNameGet">
            <summary>Sets the shim of DbParameterReferenceExpression.get_ParameterName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.ConstructorTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbProjectExpression.DbProjectExpression(TypeUsage resultType, DbExpressionBinding input, DbExpression projection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.InputGet">
            <summary>Sets the shim of DbProjectExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.ProjectionGet">
            <summary>Sets the shim of DbProjectExpression.get_Projection()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbProjectExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.ProjectionGet">
            <summary>Sets the shim of DbProjectExpression.get_Projection()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.Constructor">
            <summary>Sets the shim of DbPropertyExpression.DbPropertyExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ConstructorTypeUsageEdmMemberDbExpression">
            <summary>Sets the shim of DbPropertyExpression.DbPropertyExpression(TypeUsage resultType, EdmMember property, DbExpression instance)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ImplicitOpDbPropertyExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbPropertyExpression.op_Implicit(DbPropertyExpression value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.InstanceGet">
            <summary>Sets the shim of DbPropertyExpression.get_Instance()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.PropertyGet">
            <summary>Sets the shim of DbPropertyExpression.get_Property()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ToKeyValuePair">
            <summary>Sets the shim of DbPropertyExpression.ToKeyValuePair()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.InstanceGet">
            <summary>Sets the shim of DbPropertyExpression.get_Instance()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.PropertyGet">
            <summary>Sets the shim of DbPropertyExpression.get_Property()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.ToKeyValuePair">
            <summary>Sets the shim of DbPropertyExpression.ToKeyValuePair()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbQuantifierExpression.DbQuantifierExpression(DbExpressionKind kind, TypeUsage booleanResultType, DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.InputGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.PredicateGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.PredicateGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.CommandTreeKindGet">
            <summary>Sets the shim of DbQueryCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpression">
            <summary>Sets the shim of DbQueryCommandTree.DbQueryCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBoolean">
            <summary>Sets the shim of DbQueryCommandTree.DbQueryCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpression query, Boolean validate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.FromValidExpressionMetadataWorkspaceDataSpaceDbExpression">
            <summary>Sets the shim of DbQueryCommandTree.FromValidExpression(MetadataWorkspace metadata, DataSpace dataSpace, DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.GetParameters">
            <summary>Sets the shim of DbQueryCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.QueryGet">
            <summary>Sets the shim of DbQueryCommandTree.get_Query()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree._GetParametersb__2DbParameterReferenceExpression">
            <summary>Sets the shim of DbQueryCommandTree.&lt;GetParameters&gt;b__2(DbParameterReferenceExpression p)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree._ctorb__0KeyValuePairOfStringDbParameterReferenceExpression">
            <summary>Sets the shim of DbQueryCommandTree.&lt;.ctor&gt;b__0(KeyValuePair`2&lt;String,DbParameterReferenceExpression&gt; paramInfo)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances.CommandTreeKindGet">
            <summary>Sets the shim of DbQueryCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbQueryCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances.QueryGet">
            <summary>Sets the shim of DbQueryCommandTree.get_Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbRefExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.ConstructorTypeUsageEntitySetDbExpression">
            <summary>Sets the shim of DbRefExpression.DbRefExpression(TypeUsage refResultType, EntitySet entitySet, DbExpression refKeys)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.EntitySetGet">
            <summary>Sets the shim of DbRefExpression.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbRefExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.EntitySetGet">
            <summary>Sets the shim of DbRefExpression.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbRefKeyExpression.DbRefKeyExpression(TypeUsage rowResultType, DbExpression reference)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.ConstructorTypeUsageRelationshipTypeRelationshipEndMemberRelationshipEndMemberDbExpression">
            <summary>Sets the shim of DbRelationshipNavigationExpression.DbRelationshipNavigationExpression(TypeUsage resultType, RelationshipType relType, RelationshipEndMember fromEnd, RelationshipEndMember toEnd, DbExpression navigateFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigateFromGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateFrom()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigateToGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateTo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigationSourceGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigationSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.RelationshipGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_Relationship()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigateFromGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateFrom()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigateToGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateTo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigationSourceGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigationSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.RelationshipGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_Relationship()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbScanExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.Constructor">
            <summary>Sets the shim of DbScanExpression.DbScanExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.ConstructorTypeUsageEntitySetBase">
            <summary>Sets the shim of DbScanExpression.DbScanExpression(TypeUsage collectionOfEntityType, EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.TargetGet">
            <summary>Sets the shim of DbScanExpression.get_Target()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbScanExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.TargetGet">
            <summary>Sets the shim of DbScanExpression.get_Target()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbSetClause</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbSetClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.ConstructorDbExpressionDbExpression">
            <summary>Sets the shim of DbSetClause.DbSetClause(DbExpression targetProperty, DbExpression sourceValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.PropertyGet">
            <summary>Sets the shim of DbSetClause.get_Property()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.ValueGet">
            <summary>Sets the shim of DbSetClause.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances.PropertyGet">
            <summary>Sets the shim of DbSetClause.get_Property()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances.ValueGet">
            <summary>Sets the shim of DbSetClause.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.ConstructorTypeUsageDbExpressionBindingReadOnlyCollectionOfDbSortClauseDbExpression">
            <summary>Sets the shim of DbSkipExpression.DbSkipExpression(TypeUsage resultType, DbExpressionBinding input, ReadOnlyCollection`1&lt;DbSortClause&gt; sortOrder, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.CountGet">
            <summary>Sets the shim of DbSkipExpression.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.InputGet">
            <summary>Sets the shim of DbSkipExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.SortOrderGet">
            <summary>Sets the shim of DbSkipExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.CountGet">
            <summary>Sets the shim of DbSkipExpression.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbSkipExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.SortOrderGet">
            <summary>Sets the shim of DbSkipExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbSortClause</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbSortClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.AscendingGet">
            <summary>Sets the shim of DbSortClause.get_Ascending()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.CollationGet">
            <summary>Sets the shim of DbSortClause.get_Collation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.ConstructorDbExpressionBooleanString">
            <summary>Sets the shim of DbSortClause.DbSortClause(DbExpression key, Boolean asc, String collation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.ExpressionGet">
            <summary>Sets the shim of DbSortClause.get_Expression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.AscendingGet">
            <summary>Sets the shim of DbSortClause.get_Ascending()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.CollationGet">
            <summary>Sets the shim of DbSortClause.get_Collation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbSortClause.get_Expression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbSortExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.ConstructorTypeUsageDbExpressionBindingReadOnlyCollectionOfDbSortClause">
            <summary>Sets the shim of DbSortExpression.DbSortExpression(TypeUsage resultType, DbExpressionBinding input, ReadOnlyCollection`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.InputGet">
            <summary>Sets the shim of DbSortExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.SortOrderGet">
            <summary>Sets the shim of DbSortExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbSortExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.SortOrderGet">
            <summary>Sets the shim of DbSortExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbTreatExpression.DbTreatExpression(TypeUsage asType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.ArgumentGet">
            <summary>Sets the shim of DbUnaryExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.Constructor">
            <summary>Sets the shim of DbUnaryExpression.DbUnaryExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.ConstructorDbExpressionKindTypeUsageDbExpression">
            <summary>Sets the shim of DbUnaryExpression.DbUnaryExpression(DbExpressionKind kind, TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnaryExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbUnaryExpression.get_Argument()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbUnionAllExpression.DbUnionAllExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.CommandTreeKindGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.Constructor">
            <summary>Sets the shim of DbUpdateCommandTree.DbUpdateCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingDbExpressionReadOnlyCollectionOfDbModificationClauseDbExpression">
            <summary>Sets the shim of DbUpdateCommandTree.DbUpdateCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, DbExpression predicate, ReadOnlyCollection`1&lt;DbModificationClause&gt; setClauses, DbExpression returning)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.HasReaderGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.PredicateGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Predicate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.ReturningGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.SetClausesGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.CommandTreeKindGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_CommandTreeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.PredicateGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Predicate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.ReturningGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.SetClausesGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.#ctor(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.Constructor">
            <summary>Sets the shim of DbVariableReferenceExpression.DbVariableReferenceExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.ConstructorTypeUsageString">
            <summary>Sets the shim of DbVariableReferenceExpression.DbVariableReferenceExpression(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.VariableNameGet">
            <summary>Sets the shim of DbVariableReferenceExpression.get_VariableName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbVariableReferenceExpression.get_VariableName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor">
            <summary>Shim type of System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.#ctor(System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitListOf1IListOfM0FuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Func{``0,``0},System.Collections.Generic.IList{``0}})">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitList(IList`1&lt;!!0&gt; list, Func`2&lt;!!0,!!0&gt; map)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.Constructor">
            <summary>Sets the shim of DefaultExpressionVisitor.DefaultExpressionVisitor()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.EnterScopeDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DefaultExpressionVisitor.EnterScope(DbVariableReferenceExpression[] scopeVars)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.ExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.ExitScope()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.NotifyIfChangedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.NotifyIfChanged(DbExpression originalExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.RebindVariableDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.RebindVariable(DbVariableReferenceExpression from, DbVariableReferenceExpression to)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitBinaryDbBinaryExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitBinary(DbBinaryExpression expression, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbInExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionBindingEnterScopeDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingEnterScope(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitFunctionEdmFunction">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitLambdaDbLambda">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitRelationshipEndsRelationshipEndMemberRelationshipEndMemberRelationshipEndMemberOutRelationshipEndMemberOut">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitRelationshipEnds(RelationshipEndMember source, RelationshipEndMember target, RelationshipEndMember&amp; newSource, RelationshipEndMember&amp; newTarget)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitSortClauseDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTerminalDbExpressionFuncOfTypeUsageDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTerminal(DbExpression expression, Func`2&lt;TypeUsage,DbExpression&gt; reconstructor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTypeEdmType">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTypeUnaryDbUnaryExpressionTypeUsageFuncOfDbExpressionTypeUsageDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUnary(DbUnaryExpression expression, TypeUsage type, Func`3&lt;DbExpression,TypeUsage,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitUnaryDbUnaryExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitUnary(DbUnaryExpression expression, Func`2&lt;DbExpression,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor._VisitLambdab__0DbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.&lt;VisitLambda&gt;b__0(DbVariableReferenceExpression varRef)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor._Visitb__7DbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.&lt;Visit&gt;b__7(DbExpression exp)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor._Visitb__9EdmProperty">
            <summary>Sets the shim of DefaultExpressionVisitor.&lt;Visit&gt;b__9(EdmProperty p)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor._Visitb__aEdmProperty">
            <summary>Sets the shim of DefaultExpressionVisitor.&lt;Visit&gt;b__a(EdmProperty p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.EnterScopeDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DefaultExpressionVisitor.EnterScope(DbVariableReferenceExpression[] scopeVars)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.ExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.ExitScope()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.NotifyIfChangedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.NotifyIfChanged(DbExpression originalExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.RebindVariableDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.RebindVariable(DbVariableReferenceExpression from, DbVariableReferenceExpression to)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitAggregateDbAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitBinaryDbBinaryExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitBinary(DbBinaryExpression expression, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbAndExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbApplyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbArithmeticExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCaseExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCastExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbComparisonExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbConstantExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCrossJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbDerefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbDistinctExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbElementExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbEntityRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbExceptExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbFilterExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbFunctionExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbGroupByExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbInExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIntersectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsEmptyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsOfExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLikeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLimitExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNewInstanceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNotExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbOfTypeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbOrExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbProjectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbPropertyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbQuantifierExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRefKeyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbScanExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbSkipExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbSortExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbTreatExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbUnionAllExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionBindingEnterScopeDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingEnterScope(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitFunctionEdmFunction">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitLambdaDbLambda">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitRelationshipEndsRelationshipEndMemberRelationshipEndMemberRelationshipEndMemberOutRelationshipEndMemberOut">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitRelationshipEnds(RelationshipEndMember source, RelationshipEndMember target, RelationshipEndMember&amp; newSource, RelationshipEndMember&amp; newTarget)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitSortClauseDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTerminalDbExpressionFuncOfTypeUsageDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTerminal(DbExpression expression, Func`2&lt;TypeUsage,DbExpression&gt; reconstructor)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTypeEdmType">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTypeUnaryDbUnaryExpressionTypeUsageFuncOfDbExpressionTypeUsageDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUnary(DbUnaryExpression expression, TypeUsage type, Func`3&lt;DbExpression,TypeUsage,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitUnaryDbUnaryExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitUnary(DbUnaryExpression expression, Func`2&lt;DbExpression,DbExpression&gt; callback)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances._VisitLambdab__0DbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.&lt;VisitLambda&gt;b__0(DbVariableReferenceExpression varRef)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubBasicCommandTreeVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitAggregateDbAggregate">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbAggregate})">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitAggregateListIListOfDbAggregate">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitBinaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitBinaryExpressionDbBinaryExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitCommandTree(DbCommandTree commandTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitCommandTreeDbCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitCommandTree(DbCommandTree commandTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbAndExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbCastExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbElementExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbInExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbNotExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbNullExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbOrExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbRefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbScanExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbSortExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDeleteCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitDeleteCommandTree(DbDeleteCommandTree deleteTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitDeleteCommandTreeDbDeleteCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitDeleteCommandTree(DbDeleteCommandTree deleteTree)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionBindingPostDbExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionBindingPreDbExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitFunctionCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitFunctionCommandTree(DbFunctionCommandTree functionTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitFunctionCommandTreeDbFunctionCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitFunctionCommandTree(DbFunctionCommandTree functionTree)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingMid(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingMidDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingPostDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitGroupExpressionBindingPreDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitInsertCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitInsertCommandTree(DbInsertCommandTree insertTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitInsertCommandTreeDbInsertCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitInsertCommandTree(DbInsertCommandTree insertTree)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitLambdaPost(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitLambdaPostDbLambda">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitLambdaPre(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitLambdaPreDbLambda">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitModificationClause(System.Data.Entity.Core.Common.CommandTrees.DbModificationClause)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitModificationClause(DbModificationClause modificationClause)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitModificationClauseDbModificationClause">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitModificationClause(DbModificationClause modificationClause)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitModificationClauses(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause})">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitModificationClauses(IList`1&lt;DbModificationClause&gt; modificationClauses)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitModificationClausesIListOfDbModificationClause">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitModificationClauses(IList`1&lt;DbModificationClause&gt; modificationClauses)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitQueryCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitQueryCommandTree(DbQueryCommandTree queryTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitQueryCommandTreeDbQueryCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitQueryCommandTree(DbQueryCommandTree queryTree)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitSetClause(System.Data.Entity.Core.Common.CommandTrees.DbSetClause)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitSetClause(DbSetClause setClause)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitSetClauseDbSetClause">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitSetClause(DbSetClause setClause)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitUnaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitUnaryExpressionDbUnaryExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitUpdateCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree)">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitUpdateCommandTree(DbUpdateCommandTree updateTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.VisitUpdateCommandTreeDbUpdateCommandTree">
            <summary>Sets the stub of BasicCommandTreeVisitor.VisitUpdateCommandTree(DbUpdateCommandTree updateTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicCommandTreeVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubBasicExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbAggregate})">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitAggregateListIListOfDbAggregate">
            <summary>Sets the stub of BasicExpressionVisitor.VisitAggregateList(IList`1&lt;DbAggregate&gt; aggregates)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitBinaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitBinaryExpressionDbBinaryExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitBinaryExpression(DbBinaryExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbInExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of BasicExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionBindingPostDbExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPost(DbExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionBindingPreDbExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionBindingPre(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; expressionList)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingMid(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingMidDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingMid(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingPostDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPost(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitGroupExpressionBindingPreDbGroupExpressionBinding">
            <summary>Sets the stub of BasicExpressionVisitor.VisitGroupExpressionBindingPre(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitLambdaPost(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitLambdaPostDbLambda">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPost(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitLambdaPre(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitLambdaPreDbLambda">
            <summary>Sets the stub of BasicExpressionVisitor.VisitLambdaPre(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitUnaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression)">
            <summary>Sets the stub of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.VisitUnaryExpressionDbUnaryExpression">
            <summary>Sets the stub of BasicExpressionVisitor.VisitUnaryExpression(DbUnaryExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubBasicExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.InitializeStub">
            <summary>Initializes a new instance of type StubDbExpressionRebinder</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnExitScope">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnExitScope01">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnExpressionReplaced(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnVariableRebound(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DbExpressionRebinder.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitAggregateDbAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbAndExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbApplyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbArithmeticExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbCaseExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbCastExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbComparisonExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbConstantExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbDerefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbDistinctExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbElementExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbEntityRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbExceptExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbFilterExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbFunctionExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbGroupByExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbInExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbIntersectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbIsNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbIsOfExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbLambdaExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbLikeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbLimitExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbNotExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbOfTypeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbOrExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbProjectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbPropertyExpression">
            <summary>Sets the stub of DbExpressionRebinder.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbQuantifierExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbRefKeyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbScanExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbSkipExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbSortExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbTreatExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbUnionAllExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitEntitySet(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
            <summary>Sets the stub of DbExpressionRebinder.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitEntitySetEntitySetBase">
            <summary>Sets the stub of DbExpressionRebinder.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitExpressionListIListOfDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitFunction(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
            <summary>Sets the stub of DbExpressionRebinder.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitFunctionAggregate(System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitFunctionEdmFunction">
            <summary>Sets the stub of DbExpressionRebinder.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitGroupAggregate(System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitGroupExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitLambda(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitLambdaDbLambda">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitSortClause(System.Data.Entity.Core.Common.CommandTrees.DbSortClause)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitSortClauseDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitSortOrder(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbSortClause})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitType(System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DbExpressionRebinder.VisitType(EdmType type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitTypeEdmType">
            <summary>Sets the stub of DbExpressionRebinder.VisitType(EdmType type)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitTypeUsage(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbExpressionRebinder.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.VisitTypeUsageTypeUsage">
            <summary>Sets the stub of DbExpressionRebinder.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionRebinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubDbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbInExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbAndExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbApplyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbArithmeticExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCaseExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCastExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbComparisonExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbConstantExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbDerefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbDistinctExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbElementExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbEntityRefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbExceptExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbFilterExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbFunctionExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbGroupByExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbInExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIntersectExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsNullExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsOfExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLambdaExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLikeExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLimitExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNotExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNullExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbOfTypeExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbOrExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbProjectExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbPropertyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbQuantifierExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRefKeyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbScanExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbSkipExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbSortExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbTreatExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbUnionAllExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor">
            <summary>Stub type of System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExitScope">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExitScope01">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExpressionReplaced(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnVariableRebound(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbInExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbInExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitEntitySet(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitEntitySetEntitySetBase">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunction(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionEdmFunction">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupAggregate(System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitLambda(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitLambdaDbLambda">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortClause(System.Data.Entity.Core.Common.CommandTrees.DbSortClause)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortClauseDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbSortClause})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitType(System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeEdmType">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeUsage(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeUsageTypeUsage">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser">
            <summary>Shim type of System.Data.Entity.Core.Common.EntitySql.EntitySqlParser</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.#ctor(System.Data.Entity.Core.Common.EntitySql.EntitySqlParser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.ParseLambdaStringDbVariableReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.ParseLambda(String query, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.ParseStringDbParameterReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.Parse(String query, DbParameterReferenceExpression[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances.ParseLambdaStringDbVariableReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.ParseLambda(String query, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances.ParseStringDbParameterReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.Parse(String query, DbParameterReferenceExpression[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition">
            <summary>Shim type of System.Data.Entity.Core.Common.EntitySql.FunctionDefinition</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.#ctor(System.Data.Entity.Core.Common.EntitySql.FunctionDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.ConstructorStringDbLambdaInt32Int32">
            <summary>Sets the shim of FunctionDefinition.FunctionDefinition(String name, DbLambda lambda, Int32 startPosition, Int32 endPosition)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.EndPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_EndPosition()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.LambdaGet">
            <summary>Sets the shim of FunctionDefinition.get_Lambda()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.NameGet">
            <summary>Sets the shim of FunctionDefinition.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.StartPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_StartPosition()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.EndPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_EndPosition()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.LambdaGet">
            <summary>Sets the shim of FunctionDefinition.get_Lambda()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.NameGet">
            <summary>Sets the shim of FunctionDefinition.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.StartPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_StartPosition()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult">
            <summary>Shim type of System.Data.Entity.Core.Common.EntitySql.ParseResult</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.#ctor(System.Data.Entity.Core.Common.EntitySql.ParseResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.CommandTreeGet">
            <summary>Sets the shim of ParseResult.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.ConstructorDbCommandTreeListOfFunctionDefinition">
            <summary>Sets the shim of ParseResult.ParseResult(DbCommandTree commandTree, List`1&lt;FunctionDefinition&gt; functionDefs)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.FunctionDefinitionsGet">
            <summary>Sets the shim of ParseResult.get_FunctionDefinitions()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.AllInstances.CommandTreeGet">
            <summary>Sets the shim of ParseResult.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.EntitySql.Fakes.ShimParseResult.AllInstances.FunctionDefinitionsGet">
            <summary>Sets the shim of ParseResult.get_FunctionDefinitions()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo">
            <summary>Shim type of System.Data.Entity.Core.Common.DataRecordInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.#ctor(System.Data.Entity.Core.Common.DataRecordInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.Constructor">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.ConstructorDataRecordInfo">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(DataRecordInfo recordInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.ConstructorTypeUsage">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(TypeUsage metadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.ConstructorTypeUsageIEnumerableOfEdmMember">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(TypeUsage metadata, IEnumerable`1&lt;EdmMember&gt; memberInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.FieldMetadataGet">
            <summary>Sets the shim of DataRecordInfo.get_FieldMetadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.RecordTypeGet">
            <summary>Sets the shim of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.AllInstances.FieldMetadataGet">
            <summary>Sets the shim of DataRecordInfo.get_FieldMetadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDataRecordInfo.AllInstances.RecordTypeGet">
            <summary>Sets the shim of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition">
            <summary>Shim type of System.Data.Entity.Core.Common.DbCommandDefinition</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.#ctor(System.Data.Entity.Core.Common.DbCommandDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.Constructor">
            <summary>Sets the shim of DbCommandDefinition.DbCommandDefinition()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.ConstructorDbCommand">
            <summary>Sets the shim of DbCommandDefinition.DbCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.CreateCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.PopulateBinaryParameterDbParameterTypeUsageDbTypeBoolean">
            <summary>Sets the shim of DbCommandDefinition.PopulateBinaryParameter(DbParameter parameter, TypeUsage type, DbType dbType, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.PopulateDateTimeParameterDbParameterTypeUsageDbType">
            <summary>Sets the shim of DbCommandDefinition.PopulateDateTimeParameter(DbParameter parameter, TypeUsage type, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.PopulateDecimalParameterDbParameterTypeUsageDbType">
            <summary>Sets the shim of DbCommandDefinition.PopulateDecimalParameter(DbParameter parameter, TypeUsage type, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.PopulateParameterFromTypeUsageDbParameterTypeUsageBoolean">
            <summary>Sets the shim of DbCommandDefinition.PopulateParameterFromTypeUsage(DbParameter parameter, TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.PopulateStringParameterDbParameterTypeUsageBoolean">
            <summary>Sets the shim of DbCommandDefinition.PopulateStringParameter(DbParameter parameter, TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.SetParameterSizeDbParameterTypeUsageBoolean">
            <summary>Sets the shim of DbCommandDefinition.SetParameterSize(DbParameter parameter, TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.TryGetDbTypeFromPrimitiveTypePrimitiveTypeDbTypeOut">
            <summary>Sets the shim of DbCommandDefinition.TryGetDbTypeFromPrimitiveType(PrimitiveType type, DbType&amp; dbType)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbCommandDefinition.AllInstances.CreateCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest">
            <summary>Shim type of System.Data.Entity.Core.Common.DbProviderManifest</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.#ctor(System.Data.Entity.Core.Common.DbProviderManifest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.Constructor">
            <summary>Sets the shim of DbProviderManifest.DbProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the shim of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.GetInformationString">
            <summary>Sets the shim of DbProviderManifest.GetInformation(String informationType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the shim of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.SupportsInExpression">
            <summary>Sets the shim of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.AllInstances.EscapeLikeArgumentString">
            <summary>Sets the shim of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.AllInstances.GetInformationString">
            <summary>Sets the shim of DbProviderManifest.GetInformation(String informationType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.AllInstances.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the shim of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderManifest.AllInstances.SupportsInExpression">
            <summary>Sets the shim of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices">
            <summary>Shim type of System.Data.Entity.Core.Common.DbProviderServices</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.#ctor(System.Data.Entity.Core.Common.DbProviderServices)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AddDependencyResolverIDbDependencyResolver">
            <summary>Sets the shim of DbProviderServices.AddDependencyResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.Constructor">
            <summary>Sets the shim of DbProviderServices.DbProviderServices()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.ConstructorFuncOfIDbDependencyResolver">
            <summary>Sets the shim of DbProviderServices.DbProviderServices(Func`1&lt;IDbDependencyResolver&gt; resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateCommandDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateCommand(DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DbGetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.DeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.ExpandDataDirectoryString">
            <summary>Sets the shim of DbProviderServices.ExpandDataDirectory(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetConceptualSchemaDefinitionString">
            <summary>Sets the shim of DbProviderServices.GetConceptualSchemaDefinition(String csdlName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetExecutionStrategyDbConnection">
            <summary>Sets the shim of DbProviderServices.GetExecutionStrategy(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetExecutionStrategyDbConnectionDbProviderFactory">
            <summary>Sets the shim of DbProviderServices.GetExecutionStrategy(DbConnection connection, DbProviderFactory providerFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetExecutionStrategyDbConnectionMetadataWorkspace">
            <summary>Sets the shim of DbProviderServices.GetExecutionStrategy(DbConnection connection, MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetProviderFactoryDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderFactory(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetProviderManifestString">
            <summary>Sets the shim of DbProviderServices.GetProviderManifest(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetProviderManifestTokenDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetProviderServicesDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderServices(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetServiceTypeObject">
            <summary>Sets the shim of DbProviderServices.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetServicesTypeObject">
            <summary>Sets the shim of DbProviderServices.GetServices(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetSpatialServicesDbProviderInfo">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(DbProviderInfo key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetSpatialServicesIDbDependencyResolverDbProviderInfoFuncOfDbProviderServices">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(IDbDependencyResolver resolver, DbProviderInfo key, Func`1&lt;DbProviderServices&gt; providerServices)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetSpatialServicesIDbDependencyResolverEntityConnection">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(IDbDependencyResolver resolver, EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.GetXmlResourceString">
            <summary>Sets the shim of DbProviderServices.GetXmlResource(String resourceName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.RegisterInfoMessageHandlerDbConnectionActionOfString">
            <summary>Sets the shim of DbProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.SetParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.StaticConstructor">
            <summary>Sets the shim of DbProviderServices.DbProviderServices()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.ValidateDataSpaceDbCommandTree">
            <summary>Sets the shim of DbProviderServices.ValidateDataSpace(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices._GetSpatialServicesb__a">
            <summary>Sets the shim of DbProviderServices.&lt;GetSpatialServices&gt;b__a()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices._ctorb__0">
            <summary>Sets the shim of DbProviderServices.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.AddDependencyResolverIDbDependencyResolver">
            <summary>Sets the shim of DbProviderServices.AddDependencyResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateCommand(DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.CreateDbCommandDefinitionDbProviderManifestDbCommandTreeDbInterceptionContext">
            <summary>Sets the shim of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree, DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DbGetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.DeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetProviderManifestString">
            <summary>Sets the shim of DbProviderServices.GetProviderManifest(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetProviderManifestTokenDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetServiceTypeObject">
            <summary>Sets the shim of DbProviderServices.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetServicesTypeObject">
            <summary>Sets the shim of DbProviderServices.GetServices(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetSpatialServicesDbProviderInfo">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(DbProviderInfo key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.GetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.RegisterInfoMessageHandlerDbConnectionActionOfString">
            <summary>Sets the shim of DbProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.SetParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances.ValidateDataSpaceDbCommandTree">
            <summary>Sets the shim of DbProviderServices.ValidateDataSpace(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbProviderServices.AllInstances._GetSpatialServicesb__a">
            <summary>Sets the shim of DbProviderServices.&lt;GetSpatialServices&gt;b__a()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest">
            <summary>Shim type of System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.#ctor(System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.EnumerableToReadOnlyCollectionOf2IEnumerableOfM1ReadOnlyCollectionOfM0Out``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.IEnumerable{``1},System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Boolean})">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.EnumerableToReadOnlyCollection(IEnumerable`1&lt;!!1&gt; enumerable, ReadOnlyCollection`1&lt;!!0&gt;&amp; collection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetReadOnlyCollectionOf1PrimitiveTypeDictionaryOfPrimitiveTypeReadOnlyCollectionOfM0ReadOnlyCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Collections.Generic.Dictionary{System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Collections.ObjectModel.ReadOnlyCollection{``0}},System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetReadOnlyCollection(PrimitiveType type, Dictionary`2&lt;PrimitiveType,ReadOnlyCollection`1&lt;!!0&gt;&gt; typeDictionary, ReadOnlyCollection`1&lt;!!0&gt; useIfEmpty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.ConstructorXmlReader">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader reader)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetStoreFunctions">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetStoreTypes">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.LoadXmlReader">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.Load(XmlReader reader)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.NamespaceNameGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToStorePrimitiveType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetFacetDescriptionsEdmType">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetStoreFunctions">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetStoreTypes">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.LoadXmlReader">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.Load(XmlReader reader)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.StoreTypeNameToEdmPrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.StoreTypeNameToStorePrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToStorePrimitiveType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo">
            <summary>Shim type of System.Data.Entity.Core.Common.EntityRecordInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.#ctor(System.Data.Entity.Core.Common.EntityRecordInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.ConstructorDataRecordInfoEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(DataRecordInfo info, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.ConstructorEntityTypeEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(EntityType metadata, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.ConstructorEntityTypeIEnumerableOfEdmMemberEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(EntityType metadata, IEnumerable`1&lt;EdmMember&gt; memberInfo, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.EntityKeyGet">
            <summary>Sets the shim of EntityRecordInfo.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.ValidateEntityTypeEntitySetBase">
            <summary>Sets the shim of EntityRecordInfo.ValidateEntityType(EntitySetBase entitySet)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityRecordInfo.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimEntityRecordInfo.AllInstances.ValidateEntityTypeEntitySetBase">
            <summary>Sets the shim of EntityRecordInfo.ValidateEntityType(EntitySetBase entitySet)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata">
            <summary>Shim type of System.Data.Entity.Core.Common.FieldMetadata</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.ShimFieldMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo">
            <summary>Stub type of System.Data.Entity.Core.Common.DataRecordInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.#ctor(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.InitializeStub">
            <summary>Initializes a new instance of type StubDataRecordInfo</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.RecordTypeGet">
            <summary>Sets the stub of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDataRecordInfo.RecordType">
            <summary>Sets the stub of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition">
            <summary>Stub type of System.Data.Entity.Core.Common.DbCommandDefinition</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.#ctor(System.Data.Common.DbCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.CreateCommand">
            <summary>Sets the stub of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.CreateCommand01">
            <summary>Sets the stub of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandDefinition</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbCommandDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest">
            <summary>Stub type of System.Data.Entity.Core.Common.DbProviderManifest</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.EscapeLikeArgument(System.String)">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetDbInformation(System.String)">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetDbInformationString">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetEdmType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetEdmTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetFacetDescriptions(System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DbProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the stub of DbProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreFunctions">
            <summary>Sets the stub of DbProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreFunctions01">
            <summary>Sets the stub of DbProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreTypes">
            <summary>Sets the stub of DbProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.GetStoreTypes01">
            <summary>Sets the stub of DbProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.InitializeStub">
            <summary>Initializes a new instance of type StubDbProviderManifest</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.NamespaceNameGet">
            <summary>Sets the stub of DbProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.SupportsInExpression">
            <summary>Sets the stub of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.SupportsInExpression01">
            <summary>Sets the stub of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderManifest.NamespaceName">
            <summary>Sets the stub of DbProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices">
            <summary>Stub type of System.Data.Entity.Core.Common.DbProviderServices</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
            <summary>Sets the stub of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.CreateCommandDefinitionDbCommand">
            <summary>Sets the stub of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.CreateDbCommandDefinition(System.Data.Entity.Core.Common.DbProviderManifest,System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
            <summary>Sets the stub of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the stub of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbGetSpatialServices(System.String)">
            <summary>Sets the stub of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.DbGetSpatialServicesString">
            <summary>Sets the stub of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbProviderManifest(System.String)">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifest(String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbProviderManifestString">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifest(String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbProviderManifestTokenDbConnection">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
            <summary>Sets the stub of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the stub of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetService(System.Type,System.Object)">
            <summary>Sets the stub of DbProviderServices.GetService(Type type, Object key)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetServiceTypeObject">
            <summary>Sets the stub of DbProviderServices.GetService(Type type, Object key)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetServices(System.Type,System.Object)">
            <summary>Sets the stub of DbProviderServices.GetServices(Type type, Object key)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.GetServicesTypeObject">
            <summary>Sets the stub of DbProviderServices.GetServices(Type type, Object key)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.InitializeStub">
            <summary>Initializes a new instance of type StubDbProviderServices</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
            <summary>Sets the stub of DbProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.RegisterInfoMessageHandlerDbConnectionActionOfString">
            <summary>Sets the stub of DbProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Object)">
            <summary>Sets the stub of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the stub of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbProviderServices.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest">
            <summary>Stub type of System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.EscapeLikeArgument(System.String)">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetDbInformation(System.String)">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetDbInformationString">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetEdmType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetEdmTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreFunctions">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreFunctions01">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypes">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypes01">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.InitializeStub">
            <summary>Initializes a new instance of type StubDbXmlEnabledProviderManifest</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.NamespaceNameGet">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsInExpression">
            <summary>Sets the stub of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsInExpression01">
            <summary>Sets the stub of DbProviderManifest.SupportsInExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubDbXmlEnabledProviderManifest.NamespaceName">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo">
            <summary>Stub type of System.Data.Entity.Core.Common.EntityRecordInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.Metadata.Edm.EntitySet)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.InitializeStub">
            <summary>Initializes a new instance of type StubEntityRecordInfo</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.RecordTypeGet">
            <summary>Sets the stub of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Common.Fakes.StubEntityRecordInfo.RecordType">
            <summary>Sets the stub of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityCommand</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.#ctor(System.Data.Entity.Core.EntityClient.EntityCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Bind(System.Data.IDbCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Cancel">
            <summary>Sets the shim of EntityCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CheckConnectionPresent">
            <summary>Sets the shim of EntityCommand.CheckConnectionPresent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CheckIfReadyToPrepare">
            <summary>Sets the shim of EntityCommand.CheckIfReadyToPrepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTextGet">
            <summary>Sets the shim of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTextSetString">
            <summary>Sets the shim of EntityCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTimeoutGet">
            <summary>Sets the shim of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTimeoutSetInt32">
            <summary>Sets the shim of EntityCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTreeGet">
            <summary>Sets the shim of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTreeSetDbCommandTree">
            <summary>Sets the shim of EntityCommand.set_CommandTree(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTypeGet">
            <summary>Sets the shim of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CommandTypeSetCommandType">
            <summary>Sets the shim of EntityCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConnectionGet">
            <summary>Sets the shim of EntityCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConnectionSetEntityConnection">
            <summary>Sets the shim of EntityCommand.set_Connection(EntityConnection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Constructor">
            <summary>Sets the shim of EntityCommand.EntityCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConstructorDbInterceptionContext">
            <summary>Sets the shim of EntityCommand.EntityCommand(DbInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConstructorString">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConstructorStringEntityConnection">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement, EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConstructorStringEntityConnectionEntityTransaction">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement, EntityConnection connection, EntityTransaction transaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ConstructorStringEntityConnectionIDbDependencyResolver">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement, EntityConnection connection, IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CreateDbParameter">
            <summary>Sets the shim of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.CreateParameter">
            <summary>Sets the shim of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DbConnectionGet">
            <summary>Sets the shim of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DbConnectionSetDbConnection">
            <summary>Sets the shim of EntityCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DbParameterCollectionGet">
            <summary>Sets the shim of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DbTransactionGet">
            <summary>Sets the shim of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DbTransactionSetDbTransaction">
            <summary>Sets the shim of EntityCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DesignTimeVisibleGet">
            <summary>Sets the shim of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of EntityCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.DetermineFunctionImport">
            <summary>Sets the shim of EntityCommand.DetermineFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.EnablePlanCachingGet">
            <summary>Sets the shim of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of EntityCommand.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ExecuteNonQuery">
            <summary>Sets the shim of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ExecuteReader">
            <summary>Sets the shim of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ExecuteScalar">
            <summary>Sets the shim of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.GetParameterTypeUsage">
            <summary>Sets the shim of EntityCommand.GetParameterTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.InnerPrepare">
            <summary>Sets the shim of EntityCommand.InnerPrepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.InterceptionContextGet">
            <summary>Sets the shim of EntityCommand.get_InterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.InvokeOnDataReaderClosingEventEntityCommandEventArgs">
            <summary>Sets the shim of EntityCommand.InvokeOnDataReaderClosingEvent(EntityCommand sender, EventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.IsNotNullOnDataReaderClosingEvent">
            <summary>Sets the shim of EntityCommand.IsNotNullOnDataReaderClosingEvent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.MakeCommandTree">
            <summary>Sets the shim of EntityCommand.MakeCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.NotifyDataReaderClosing">
            <summary>Sets the shim of EntityCommand.NotifyDataReaderClosing()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.OnDataReaderClosingAddEventHandler">
            <summary>Sets the shim of EntityCommand.add_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.OnDataReaderClosingRemoveEventHandler">
            <summary>Sets the shim of EntityCommand.remove_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ParametersGet">
            <summary>Sets the shim of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Prepare">
            <summary>Sets the shim of EntityCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.SetStoreProviderCommandDbCommand">
            <summary>Sets the shim of EntityCommand.SetStoreProviderCommand(DbCommand storeProviderCommand)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ThrowIfDataReaderIsOpen">
            <summary>Sets the shim of EntityCommand.ThrowIfDataReaderIsOpen()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ToTraceString">
            <summary>Sets the shim of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.TransactionGet">
            <summary>Sets the shim of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.TransactionSetEntityTransaction">
            <summary>Sets the shim of EntityCommand.set_Transaction(EntityTransaction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.Unprepare">
            <summary>Sets the shim of EntityCommand.Unprepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.UpdatedRowSourceGet">
            <summary>Sets the shim of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of EntityCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.ValidateAndGetEntityTransaction">
            <summary>Sets the shim of EntityCommand.ValidateAndGetEntityTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand._MakeCommandTreeb__0KeyValuePairOfStringTypeUsage">
            <summary>Sets the shim of EntityCommand.&lt;MakeCommandTree&gt;b__0(KeyValuePair`2&lt;String,TypeUsage&gt; paramInfo)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.Cancel">
            <summary>Sets the shim of EntityCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CheckConnectionPresent">
            <summary>Sets the shim of EntityCommand.CheckConnectionPresent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CheckIfReadyToPrepare">
            <summary>Sets the shim of EntityCommand.CheckIfReadyToPrepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTextGet">
            <summary>Sets the shim of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTextSetString">
            <summary>Sets the shim of EntityCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTimeoutSetInt32">
            <summary>Sets the shim of EntityCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTreeGet">
            <summary>Sets the shim of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTreeSetDbCommandTree">
            <summary>Sets the shim of EntityCommand.set_CommandTree(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTypeGet">
            <summary>Sets the shim of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTypeSetCommandType">
            <summary>Sets the shim of EntityCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ConnectionGet">
            <summary>Sets the shim of EntityCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ConnectionSetEntityConnection">
            <summary>Sets the shim of EntityCommand.set_Connection(EntityConnection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CreateDbParameter">
            <summary>Sets the shim of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.CreateParameter">
            <summary>Sets the shim of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbConnectionGet">
            <summary>Sets the shim of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbConnectionSetDbConnection">
            <summary>Sets the shim of EntityCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbParameterCollectionGet">
            <summary>Sets the shim of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbTransactionGet">
            <summary>Sets the shim of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbTransactionSetDbTransaction">
            <summary>Sets the shim of EntityCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DesignTimeVisibleGet">
            <summary>Sets the shim of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of EntityCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.DetermineFunctionImport">
            <summary>Sets the shim of EntityCommand.DetermineFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.EnablePlanCachingGet">
            <summary>Sets the shim of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of EntityCommand.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteNonQuery">
            <summary>Sets the shim of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteReader">
            <summary>Sets the shim of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteScalar">
            <summary>Sets the shim of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.GetParameterTypeUsage">
            <summary>Sets the shim of EntityCommand.GetParameterTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.InnerPrepare">
            <summary>Sets the shim of EntityCommand.InnerPrepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.InterceptionContextGet">
            <summary>Sets the shim of EntityCommand.get_InterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.InvokeOnDataReaderClosingEventEntityCommandEventArgs">
            <summary>Sets the shim of EntityCommand.InvokeOnDataReaderClosingEvent(EntityCommand sender, EventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.IsNotNullOnDataReaderClosingEvent">
            <summary>Sets the shim of EntityCommand.IsNotNullOnDataReaderClosingEvent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.MakeCommandTree">
            <summary>Sets the shim of EntityCommand.MakeCommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.NotifyDataReaderClosing">
            <summary>Sets the shim of EntityCommand.NotifyDataReaderClosing()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.OnDataReaderClosingAddEventHandler">
            <summary>Sets the shim of EntityCommand.add_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.OnDataReaderClosingRemoveEventHandler">
            <summary>Sets the shim of EntityCommand.remove_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ParametersGet">
            <summary>Sets the shim of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.Prepare">
            <summary>Sets the shim of EntityCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.SetStoreProviderCommandDbCommand">
            <summary>Sets the shim of EntityCommand.SetStoreProviderCommand(DbCommand storeProviderCommand)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ThrowIfDataReaderIsOpen">
            <summary>Sets the shim of EntityCommand.ThrowIfDataReaderIsOpen()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ToTraceString">
            <summary>Sets the shim of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.TransactionGet">
            <summary>Sets the shim of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.TransactionSetEntityTransaction">
            <summary>Sets the shim of EntityCommand.set_Transaction(EntityTransaction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.Unprepare">
            <summary>Sets the shim of EntityCommand.Unprepare()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.UpdatedRowSourceGet">
            <summary>Sets the shim of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of EntityCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityCommand.AllInstances.ValidateAndGetEntityTransaction">
            <summary>Sets the shim of EntityCommand.ValidateAndGetEntityTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityConnection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Bind(System.Data.IDbConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AssociateContextObjectContext">
            <summary>Sets the shim of EntityConnection.AssociateContext(ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AssociatedContextsGet">
            <summary>Sets the shim of EntityConnection.get_AssociatedContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.BeginTransaction">
            <summary>Sets the shim of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.BeginTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ChangeConnectionStringString">
            <summary>Sets the shim of EntityConnection.ChangeConnectionString(String newConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ChangeDatabaseString">
            <summary>Sets the shim of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ClearCurrentTransaction">
            <summary>Sets the shim of EntityConnection.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ClearEnlistedTransaction">
            <summary>Sets the shim of EntityConnection.ClearEnlistedTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ClearTransactions">
            <summary>Sets the shim of EntityConnection.ClearTransactions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Close">
            <summary>Sets the shim of EntityConnection.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConnectionStringGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConnectionStringSetString">
            <summary>Sets the shim of EntityConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConnectionTimeoutGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Constructor">
            <summary>Sets the shim of EntityConnection.EntityConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConstructorMetadataWorkspaceDbConnection">
            <summary>Sets the shim of EntityConnection.EntityConnection(MetadataWorkspace workspace, DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConstructorMetadataWorkspaceDbConnectionBoolean">
            <summary>Sets the shim of EntityConnection.EntityConnection(MetadataWorkspace workspace, DbConnection connection, Boolean entityConnectionOwnsStoreConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ConstructorString">
            <summary>Sets the shim of EntityConnection.EntityConnection(String connectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.CreateCommand">
            <summary>Sets the shim of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.CreateDbCommand">
            <summary>Sets the shim of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.CurrentTransactionGet">
            <summary>Sets the shim of EntityConnection.get_CurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.DataSourceGet">
            <summary>Sets the shim of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.DatabaseGet">
            <summary>Sets the shim of EntityConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.DbProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.DisposeBoolean">
            <summary>Sets the shim of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.EnlistTransactionTransaction">
            <summary>Sets the shim of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.EnlistedInUserTransactionGet">
            <summary>Sets the shim of EntityConnection.get_EnlistedInUserTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.EnlistedTransactionCompletedObjectTransactionEventArgs">
            <summary>Sets the shim of EntityConnection.EnlistedTransactionCompleted(Object sender, TransactionEventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.FormatProviderStringString">
            <summary>Sets the shim of EntityConnection.FormatProviderString(String providerString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.GetMetadataWorkspace">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.GetStoreConnectionDbProviderFactory">
            <summary>Sets the shim of EntityConnection.GetStoreConnection(DbProviderFactory factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.Open">
            <summary>Sets the shim of EntityConnection.Open()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.ServerVersionGet">
            <summary>Sets the shim of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StateGet">
            <summary>Sets the shim of EntityConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StaticConstructor">
            <summary>Sets the shim of EntityConnection.EntityConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StoreCloseHelper">
            <summary>Sets the shim of EntityConnection.StoreCloseHelper()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StoreConnectionGet">
            <summary>Sets the shim of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StoreConnectionStateChangeHandlerObjectStateChangeEventArgs">
            <summary>Sets the shim of EntityConnection.StoreConnectionStateChangeHandler(Object sender, StateChangeEventArgs stateChange)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.StoreProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_StoreProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.SubscribeToStoreConnectionStateChangeEvents">
            <summary>Sets the shim of EntityConnection.SubscribeToStoreConnectionStateChangeEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.UnsubscribeFromStoreConnectionStateChangeEvents">
            <summary>Sets the shim of EntityConnection.UnsubscribeFromStoreConnectionStateChangeEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.UseStoreTransactionDbTransaction">
            <summary>Sets the shim of EntityConnection.UseStoreTransaction(DbTransaction storeTransaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection._Openb__0ObjectContext">
            <summary>Sets the shim of EntityConnection.&lt;Open&gt;b__0(ObjectContext c)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.AssociateContextObjectContext">
            <summary>Sets the shim of EntityConnection.AssociateContext(ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.AssociatedContextsGet">
            <summary>Sets the shim of EntityConnection.get_AssociatedContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginTransaction">
            <summary>Sets the shim of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ChangeConnectionStringString">
            <summary>Sets the shim of EntityConnection.ChangeConnectionString(String newConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ChangeDatabaseString">
            <summary>Sets the shim of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ClearCurrentTransaction">
            <summary>Sets the shim of EntityConnection.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ClearEnlistedTransaction">
            <summary>Sets the shim of EntityConnection.ClearEnlistedTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ClearTransactions">
            <summary>Sets the shim of EntityConnection.ClearTransactions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.Close">
            <summary>Sets the shim of EntityConnection.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of EntityConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionTimeoutGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.CreateCommand">
            <summary>Sets the shim of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.CreateDbCommand">
            <summary>Sets the shim of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.CurrentTransactionGet">
            <summary>Sets the shim of EntityConnection.get_CurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.DataSourceGet">
            <summary>Sets the shim of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.DatabaseGet">
            <summary>Sets the shim of EntityConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.DbProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.EnlistTransactionTransaction">
            <summary>Sets the shim of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.EnlistedInUserTransactionGet">
            <summary>Sets the shim of EntityConnection.get_EnlistedInUserTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.EnlistedTransactionCompletedObjectTransactionEventArgs">
            <summary>Sets the shim of EntityConnection.EnlistedTransactionCompleted(Object sender, TransactionEventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.GetMetadataWorkspace">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.Open">
            <summary>Sets the shim of EntityConnection.Open()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.ServerVersionGet">
            <summary>Sets the shim of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.StateGet">
            <summary>Sets the shim of EntityConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreCloseHelper">
            <summary>Sets the shim of EntityConnection.StoreCloseHelper()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreConnectionGet">
            <summary>Sets the shim of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreConnectionStateChangeHandlerObjectStateChangeEventArgs">
            <summary>Sets the shim of EntityConnection.StoreConnectionStateChangeHandler(Object sender, StateChangeEventArgs stateChange)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_StoreProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.SubscribeToStoreConnectionStateChangeEvents">
            <summary>Sets the shim of EntityConnection.SubscribeToStoreConnectionStateChangeEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.UnsubscribeFromStoreConnectionStateChangeEvents">
            <summary>Sets the shim of EntityConnection.UnsubscribeFromStoreConnectionStateChangeEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnection.AllInstances.UseStoreTransactionDbTransaction">
            <summary>Sets the shim of EntityConnection.UseStoreTransaction(DbTransaction storeTransaction)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.#ctor(System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Clear">
            <summary>Sets the shim of EntityConnectionStringBuilder.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Constructor">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ConstructorString">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder(String connectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ContainsKeyString">
            <summary>Sets the shim of EntityConnectionStringBuilder.ContainsKey(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.IsFixedSizeGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ItemGetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Item(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ItemSetStringObject">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Item(String keyword, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.KeysGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Keys()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.MetadataGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Metadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.MetadataSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Metadata(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.NameGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.NameSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderConnectionStringGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_ProviderConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderConnectionStringSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_ProviderConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Provider(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.RemoveString">
            <summary>Sets the shim of EntityConnectionStringBuilder.Remove(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.StaticConstructor">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.SynonymsGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Synonyms()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.TryGetValueStringObjectOut">
            <summary>Sets the shim of EntityConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.Clear">
            <summary>Sets the shim of EntityConnectionStringBuilder.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ContainsKeyString">
            <summary>Sets the shim of EntityConnectionStringBuilder.ContainsKey(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Item(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Item(String keyword, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.KeysGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Keys()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.MetadataGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Metadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.MetadataSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Metadata(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.NameGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.NameSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderConnectionStringGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_ProviderConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderConnectionStringSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_ProviderConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Provider(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.RemoveString">
            <summary>Sets the shim of EntityConnectionStringBuilder.Remove(String keyword)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.TryGetValueStringObjectOut">
            <summary>Sets the shim of EntityConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityDataReader</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.#ctor(System.Data.Entity.Core.EntityClient.EntityDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.Entity.Core.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Close">
            <summary>Sets the shim of EntityDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Constructor">
            <summary>Sets the shim of EntityDataReader.EntityDataReader()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.ConstructorEntityCommandDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityDataReader.EntityDataReader(EntityCommand command, DbDataReader storeDataReader, CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.DataRecordInfoGet">
            <summary>Sets the shim of EntityDataReader.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.DepthGet">
            <summary>Sets the shim of EntityDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.DisposeBoolean">
            <summary>Sets the shim of EntityDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.FieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetBooleanInt32">
            <summary>Sets the shim of EntityDataReader.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetByteInt32">
            <summary>Sets the shim of EntityDataReader.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetBytes(Int32 ordinal, Int64 dataOffset, Byte[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetCharInt32">
            <summary>Sets the shim of EntityDataReader.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetChars(Int32 ordinal, Int64 dataOffset, Char[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDataRecordInt32">
            <summary>Sets the shim of EntityDataReader.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDataTypeNameInt32">
            <summary>Sets the shim of EntityDataReader.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDateTimeInt32">
            <summary>Sets the shim of EntityDataReader.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDbDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDecimalInt32">
            <summary>Sets the shim of EntityDataReader.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetDoubleInt32">
            <summary>Sets the shim of EntityDataReader.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetEnumerator">
            <summary>Sets the shim of EntityDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetFloatInt32">
            <summary>Sets the shim of EntityDataReader.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetGuidInt32">
            <summary>Sets the shim of EntityDataReader.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetInt16Int32">
            <summary>Sets the shim of EntityDataReader.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetInt64Int32">
            <summary>Sets the shim of EntityDataReader.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetNameInt32">
            <summary>Sets the shim of EntityDataReader.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetOrdinalString">
            <summary>Sets the shim of EntityDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificValueInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetSchemaTable">
            <summary>Sets the shim of EntityDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetStringInt32">
            <summary>Sets the shim of EntityDataReader.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetValueInt32">
            <summary>Sets the shim of EntityDataReader.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.GetValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.HasRowsGet">
            <summary>Sets the shim of EntityDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.IsClosedGet">
            <summary>Sets the shim of EntityDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.IsDBNullInt32">
            <summary>Sets the shim of EntityDataReader.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.ItemGetInt32">
            <summary>Sets the shim of EntityDataReader.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.ItemGetString">
            <summary>Sets the shim of EntityDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.NextResult">
            <summary>Sets the shim of EntityDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.Read">
            <summary>Sets the shim of EntityDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.RecordsAffectedGet">
            <summary>Sets the shim of EntityDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.VisibleFieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.Close">
            <summary>Sets the shim of EntityDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DataRecordInfoGet">
            <summary>Sets the shim of EntityDataReader.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DepthGet">
            <summary>Sets the shim of EntityDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.FieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of EntityDataReader.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetByteInt32">
            <summary>Sets the shim of EntityDataReader.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetBytes(Int32 ordinal, Int64 dataOffset, Byte[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetCharInt32">
            <summary>Sets the shim of EntityDataReader.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetChars(Int32 ordinal, Int64 dataOffset, Char[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataRecordInt32">
            <summary>Sets the shim of EntityDataReader.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of EntityDataReader.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of EntityDataReader.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDbDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of EntityDataReader.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of EntityDataReader.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetFloatInt32">
            <summary>Sets the shim of EntityDataReader.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetGuidInt32">
            <summary>Sets the shim of EntityDataReader.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt16Int32">
            <summary>Sets the shim of EntityDataReader.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt64Int32">
            <summary>Sets the shim of EntityDataReader.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetNameInt32">
            <summary>Sets the shim of EntityDataReader.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetOrdinalString">
            <summary>Sets the shim of EntityDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificValueInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetSchemaTable">
            <summary>Sets the shim of EntityDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetStringInt32">
            <summary>Sets the shim of EntityDataReader.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetValueInt32">
            <summary>Sets the shim of EntityDataReader.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.HasRowsGet">
            <summary>Sets the shim of EntityDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.IsClosedGet">
            <summary>Sets the shim of EntityDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of EntityDataReader.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EntityDataReader.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.NextResult">
            <summary>Sets the shim of EntityDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.Read">
            <summary>Sets the shim of EntityDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.RecordsAffectedGet">
            <summary>Sets the shim of EntityDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityDataReader.AllInstances.VisibleFieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityParameter</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.#ctor(System.Data.Entity.Core.EntityClient.EntityParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.Bind(System.Data.IDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.Bind(System.Data.IDbDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.Clone">
            <summary>Sets the shim of EntityParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.CloneHelperEntityParameter">
            <summary>Sets the shim of EntityParameter.CloneHelper(EntityParameter destination)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.CompareExchangeParentObjectObject">
            <summary>Sets the shim of EntityParameter.CompareExchangeParent(Object value, Object comparand)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.Constructor">
            <summary>Sets the shim of EntityParameter.EntityParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ConstructorEntityParameter">
            <summary>Sets the shim of EntityParameter.EntityParameter(EntityParameter source)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbType">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size, ParameterDirection direction, Boolean isNullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32String">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.CopyToDbParameter">
            <summary>Sets the shim of EntityParameter.CopyTo(DbParameter destination)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.DbTypeGet">
            <summary>Sets the shim of EntityParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.DbTypeSetDbType">
            <summary>Sets the shim of EntityParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.DirectionGet">
            <summary>Sets the shim of EntityParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.DirectionSetParameterDirection">
            <summary>Sets the shim of EntityParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.EdmTypeGet">
            <summary>Sets the shim of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.EdmTypeSetEdmType">
            <summary>Sets the shim of EntityParameter.set_EdmType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.GetDbTypeFromEdmEdmType">
            <summary>Sets the shim of EntityParameter.GetDbTypeFromEdm(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.GetTypeUsage">
            <summary>Sets the shim of EntityParameter.GetTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsDbTypeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDbTypeSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsDirectionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDirectionSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsDirtyGet">
            <summary>Sets the shim of EntityParameter.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsIsNullableSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsIsNullableSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsNullableGet">
            <summary>Sets the shim of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsNullableSetBoolean">
            <summary>Sets the shim of EntityParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsPrecisionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsPrecisionSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsScaleSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsScaleSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsSizeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsSizeSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.IsTypeConsistentGet">
            <summary>Sets the shim of EntityParameter.get_IsTypeConsistent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ParameterNameGet">
            <summary>Sets the shim of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ParameterNameSetString">
            <summary>Sets the shim of EntityParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.PrecisionGet">
            <summary>Sets the shim of EntityParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.PrecisionSetByte">
            <summary>Sets the shim of EntityParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.PropertyChanging">
            <summary>Sets the shim of EntityParameter.PropertyChanging()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ResetDbType">
            <summary>Sets the shim of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ResetIsDirty">
            <summary>Sets the shim of EntityParameter.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ResetParent">
            <summary>Sets the shim of EntityParameter.ResetParent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ResetSize">
            <summary>Sets the shim of EntityParameter.ResetSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ScaleGet">
            <summary>Sets the shim of EntityParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ScaleSetByte">
            <summary>Sets the shim of EntityParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SetParameterNameWithValidationStringString">
            <summary>Sets the shim of EntityParameter.SetParameterNameWithValidation(String parameterName, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ShouldSerializeSize">
            <summary>Sets the shim of EntityParameter.ShouldSerializeSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SizeGet">
            <summary>Sets the shim of EntityParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SizeSetInt32">
            <summary>Sets the shim of EntityParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceColumnGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceColumnNullMappingGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of EntityParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceColumnSetString">
            <summary>Sets the shim of EntityParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceVersionGet">
            <summary>Sets the shim of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of EntityParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ToString">
            <summary>Sets the shim of EntityParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ValueGet">
            <summary>Sets the shim of EntityParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ValueSetObject">
            <summary>Sets the shim of EntityParameter.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ValueSizeCoreObject">
            <summary>Sets the shim of EntityParameter.ValueSizeCore(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.ValueSizeObject">
            <summary>Sets the shim of EntityParameter.ValueSize(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.Clone">
            <summary>Sets the shim of EntityParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.CloneHelperEntityParameter">
            <summary>Sets the shim of EntityParameter.CloneHelper(EntityParameter destination)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.CompareExchangeParentObjectObject">
            <summary>Sets the shim of EntityParameter.CompareExchangeParent(Object value, Object comparand)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.CopyToDbParameter">
            <summary>Sets the shim of EntityParameter.CopyTo(DbParameter destination)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.DbTypeGet">
            <summary>Sets the shim of EntityParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.DbTypeSetDbType">
            <summary>Sets the shim of EntityParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.DirectionGet">
            <summary>Sets the shim of EntityParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.DirectionSetParameterDirection">
            <summary>Sets the shim of EntityParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.EdmTypeGet">
            <summary>Sets the shim of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.EdmTypeSetEdmType">
            <summary>Sets the shim of EntityParameter.set_EdmType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.GetTypeUsage">
            <summary>Sets the shim of EntityParameter.GetTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDbTypeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDbTypeSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDirectionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDirectionSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDirtyGet">
            <summary>Sets the shim of EntityParameter.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsIsNullableSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsIsNullableSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsNullableGet">
            <summary>Sets the shim of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of EntityParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsPrecisionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsPrecisionSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsScaleSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsScaleSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsSizeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsSizeSpecified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsTypeConsistentGet">
            <summary>Sets the shim of EntityParameter.get_IsTypeConsistent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ParameterNameGet">
            <summary>Sets the shim of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ParameterNameSetString">
            <summary>Sets the shim of EntityParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.PrecisionGet">
            <summary>Sets the shim of EntityParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.PrecisionSetByte">
            <summary>Sets the shim of EntityParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.PropertyChanging">
            <summary>Sets the shim of EntityParameter.PropertyChanging()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetDbType">
            <summary>Sets the shim of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetIsDirty">
            <summary>Sets the shim of EntityParameter.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetParent">
            <summary>Sets the shim of EntityParameter.ResetParent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetSize">
            <summary>Sets the shim of EntityParameter.ResetSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ScaleGet">
            <summary>Sets the shim of EntityParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ScaleSetByte">
            <summary>Sets the shim of EntityParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SetParameterNameWithValidationStringString">
            <summary>Sets the shim of EntityParameter.SetParameterNameWithValidation(String parameterName, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ShouldSerializeSize">
            <summary>Sets the shim of EntityParameter.ShouldSerializeSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SizeGet">
            <summary>Sets the shim of EntityParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SizeSetInt32">
            <summary>Sets the shim of EntityParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnNullMappingGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of EntityParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnSetString">
            <summary>Sets the shim of EntityParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceVersionGet">
            <summary>Sets the shim of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of EntityParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ToString01">
            <summary>Sets the shim of EntityParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ValueGet">
            <summary>Sets the shim of EntityParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of EntityParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityParameterCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.#ctor(System.Data.Entity.Core.EntityClient.EntityParameterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Data.IDataParameterCollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Add(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddObject">
            <summary>Sets the shim of EntityParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddRangeArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddRangeEntityParameterArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(EntityParameter[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddStringDbType">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddStringDbTypeInt32">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AddWithValueStringObject">
            <summary>Sets the shim of EntityParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.CheckNameString">
            <summary>Sets the shim of EntityParameterCollection.CheckName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Clear">
            <summary>Sets the shim of EntityParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.Constructor">
            <summary>Sets the shim of EntityParameterCollection.EntityParameterCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ContainsObject">
            <summary>Sets the shim of EntityParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ContainsString">
            <summary>Sets the shim of EntityParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.CopyToArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.CopyToEntityParameterArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(EntityParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.CountGet">
            <summary>Sets the shim of EntityParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.GetEnumerator">
            <summary>Sets the shim of EntityParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.GetParameterInt32">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.GetParameterString">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfIEnumerableString">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(IEnumerable items, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfObject">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfString">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.InnerListGet">
            <summary>Sets the shim of EntityParameterCollection.get_InnerList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.InsertInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.InsertInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IsDirtyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IsFixedSizeGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IsReadOnlyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.IsSynchronizedGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ItemGetInt32">
            <summary>Sets the shim of EntityParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ItemGetString">
            <summary>Sets the shim of EntityParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ItemSetInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ItemSetStringEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(String parameterName, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.OnChange">
            <summary>Sets the shim of EntityParameterCollection.OnChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RangeCheckInt32">
            <summary>Sets the shim of EntityParameterCollection.RangeCheck(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RemoveAtInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RemoveAtString">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RemoveEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Remove(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RemoveIndexInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveIndex(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.RemoveObject">
            <summary>Sets the shim of EntityParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ReplaceInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Replace(Int32 index, Object newValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ResetIsDirty">
            <summary>Sets the shim of EntityParameterCollection.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.SetParameterInt32DbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.SetParameterStringDbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.StaticConstructor">
            <summary>Sets the shim of EntityParameterCollection.EntityParameterCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.SyncRootGet">
            <summary>Sets the shim of EntityParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ValidateInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Validate(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.ValidateTypeObject">
            <summary>Sets the shim of EntityParameterCollection.ValidateType(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Add(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddObject">
            <summary>Sets the shim of EntityParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddRangeArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddRangeEntityParameterArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(EntityParameter[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddStringDbType">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddStringDbTypeInt32">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddWithValueStringObject">
            <summary>Sets the shim of EntityParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CheckNameString">
            <summary>Sets the shim of EntityParameterCollection.CheckName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.Clear">
            <summary>Sets the shim of EntityParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of EntityParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ContainsString">
            <summary>Sets the shim of EntityParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CopyToEntityParameterArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(EntityParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CountGet">
            <summary>Sets the shim of EntityParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetParameterInt32">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetParameterString">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfObject">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.InnerListGet">
            <summary>Sets the shim of EntityParameterCollection.get_InnerList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.InsertInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.InsertInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsDirtyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EntityParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemSetInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemSetStringEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(String parameterName, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.OnChange">
            <summary>Sets the shim of EntityParameterCollection.OnChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RangeCheckInt32">
            <summary>Sets the shim of EntityParameterCollection.RangeCheck(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveAtString">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Remove(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveIndexInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveIndex(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveObject">
            <summary>Sets the shim of EntityParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ReplaceInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Replace(Int32 index, Object newValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ResetIsDirty">
            <summary>Sets the shim of EntityParameterCollection.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SetParameterInt32DbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SetParameterStringDbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of EntityParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ValidateInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Validate(Int32 index, Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityProviderFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.#ctor(System.Data.Entity.Core.EntityClient.EntityProviderFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.Bind(System.IServiceProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.Constructor">
            <summary>Sets the shim of EntityProviderFactory.EntityProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateCommand">
            <summary>Sets the shim of EntityProviderFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateCommandBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateConnection">
            <summary>Sets the shim of EntityProviderFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateConnectionStringBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateDataAdapter">
            <summary>Sets the shim of EntityProviderFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreateParameter">
            <summary>Sets the shim of EntityProviderFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.CreatePermissionPermissionState">
            <summary>Sets the shim of EntityProviderFactory.CreatePermission(PermissionState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.StaticConstructor">
            <summary>Sets the shim of EntityProviderFactory.EntityProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.SystemIServiceProviderGetServiceType">
            <summary>Sets the shim of EntityProviderFactory.System.IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateCommand">
            <summary>Sets the shim of EntityProviderFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateCommandBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateConnection">
            <summary>Sets the shim of EntityProviderFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateConnectionStringBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateDataAdapter">
            <summary>Sets the shim of EntityProviderFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateParameter">
            <summary>Sets the shim of EntityProviderFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreatePermissionPermissionState">
            <summary>Sets the shim of EntityProviderFactory.CreatePermission(PermissionState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.SystemIServiceProviderGetServiceType">
            <summary>Sets the shim of EntityProviderFactory.System.IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction">
            <summary>Shim type of System.Data.Entity.Core.EntityClient.EntityTransaction</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.#ctor(System.Data.Entity.Core.EntityClient.EntityTransaction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Bind(System.Data.IDbTransaction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.ClearCurrentTransaction">
            <summary>Sets the shim of EntityTransaction.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Commit">
            <summary>Sets the shim of EntityTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.ConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Constructor">
            <summary>Sets the shim of EntityTransaction.EntityTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.ConstructorEntityConnectionDbTransaction">
            <summary>Sets the shim of EntityTransaction.EntityTransaction(EntityConnection connection, DbTransaction storeTransaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.DbConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.DisposeBoolean">
            <summary>Sets the shim of EntityTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.IsolationLevelGet">
            <summary>Sets the shim of EntityTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.Rollback">
            <summary>Sets the shim of EntityTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.StoreTransactionGet">
            <summary>Sets the shim of EntityTransaction.get_StoreTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.ClearCurrentTransaction">
            <summary>Sets the shim of EntityTransaction.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.Commit">
            <summary>Sets the shim of EntityTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.ConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.DbConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of EntityTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.Rollback">
            <summary>Sets the shim of EntityTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.ShimEntityTransaction.AllInstances.StoreTransactionGet">
            <summary>Sets the shim of EntityTransaction.get_StoreTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand">
            <summary>Stub type of System.Data.Entity.Core.EntityClient.EntityCommand</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Core.EntityClient.EntityTransaction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToCommandText">
            <summary>Attaches delegates to emulate StubEntityCommand.CommandText as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToCommandTimeout">
            <summary>Attaches delegates to emulate StubEntityCommand.CommandTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToCommandTree">
            <summary>Attaches delegates to emulate StubEntityCommand.CommandTree as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToCommandType">
            <summary>Attaches delegates to emulate StubEntityCommand.CommandType as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToConnection">
            <summary>Attaches delegates to emulate StubEntityCommand.Connection as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToDbConnection">
            <summary>Attaches delegates to emulate StubEntityCommand.DbConnection as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToDbTransaction">
            <summary>Attaches delegates to emulate StubEntityCommand.DbTransaction as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToDesignTimeVisible">
            <summary>Attaches delegates to emulate StubEntityCommand.DesignTimeVisible as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToEnablePlanCaching">
            <summary>Attaches delegates to emulate StubEntityCommand.EnablePlanCaching as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubEntityCommand.Site as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToTransaction">
            <summary>Attaches delegates to emulate StubEntityCommand.Transaction as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.AttachBackingFieldToUpdatedRowSource">
            <summary>Attaches delegates to emulate StubEntityCommand.UpdatedRowSource as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CanRaiseEventsGet">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Cancel">
            <summary>Sets the stub of EntityCommand.Cancel()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Cancel01">
            <summary>Sets the stub of EntityCommand.Cancel()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTextGet">
            <summary>Sets the stub of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTextSetString">
            <summary>Sets the stub of EntityCommand.set_CommandText(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTimeoutGet">
            <summary>Sets the stub of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTimeoutSetInt32">
            <summary>Sets the stub of EntityCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTreeGet">
            <summary>Sets the stub of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTreeSetDbCommandTree">
            <summary>Sets the stub of EntityCommand.set_CommandTree(DbCommandTree value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTypeGet">
            <summary>Sets the stub of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTypeSetCommandType">
            <summary>Sets the stub of EntityCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ConnectionGet">
            <summary>Sets the stub of EntityCommand.get_Connection()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ConnectionSetEntityConnection">
            <summary>Sets the stub of EntityCommand.set_Connection(EntityConnection value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CreateDbParameter">
            <summary>Sets the stub of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CreateDbParameter01">
            <summary>Sets the stub of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CreateParameter">
            <summary>Sets the stub of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CreateParameter01">
            <summary>Sets the stub of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbConnectionGet">
            <summary>Sets the stub of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbConnectionSetDbConnection">
            <summary>Sets the stub of EntityCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbParameterCollectionGet">
            <summary>Sets the stub of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbTransactionGet">
            <summary>Sets the stub of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbTransactionSetDbTransaction">
            <summary>Sets the stub of EntityCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DesignTimeVisibleGet">
            <summary>Sets the stub of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DesignTimeVisibleSetBoolean">
            <summary>Sets the stub of EntityCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Dispose(System.Boolean)">
            <summary>Sets the stub of Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DisposeBoolean">
            <summary>Sets the stub of Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.EnablePlanCachingGet">
            <summary>Sets the stub of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.EnablePlanCachingSetBoolean">
            <summary>Sets the stub of EntityCommand.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <summary>Sets the stub of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the stub of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteNonQuery">
            <summary>Sets the stub of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteNonQuery01">
            <summary>Sets the stub of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteReader">
            <summary>Sets the stub of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>Sets the stub of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteReader01">
            <summary>Sets the stub of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteReaderCommandBehavior">
            <summary>Sets the stub of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteScalar">
            <summary>Sets the stub of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ExecuteScalar01">
            <summary>Sets the stub of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.InitializeStub">
            <summary>Initializes a new instance of type StubEntityCommand</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ParametersGet">
            <summary>Sets the stub of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Prepare">
            <summary>Sets the stub of EntityCommand.Prepare()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Prepare01">
            <summary>Sets the stub of EntityCommand.Prepare()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.SiteGet">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.SiteSetISite">
            <summary>Sets the stub of Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ToTraceString">
            <summary>Sets the stub of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.ToTraceString01">
            <summary>Sets the stub of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.TransactionGet">
            <summary>Sets the stub of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.TransactionSetEntityTransaction">
            <summary>Sets the stub of EntityCommand.set_Transaction(EntityTransaction value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.UpdatedRowSourceGet">
            <summary>Sets the stub of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the stub of EntityCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CanRaiseEvents">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandText">
            <summary>Sets the stub of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTimeout">
            <summary>Sets the stub of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandTree">
            <summary>Sets the stub of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.CommandType">
            <summary>Sets the stub of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Connection">
            <summary>Sets the stub of EntityCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbConnection">
            <summary>Sets the stub of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbParameterCollection">
            <summary>Sets the stub of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DbTransaction">
            <summary>Sets the stub of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.DesignTimeVisible">
            <summary>Sets the stub of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.EnablePlanCaching">
            <summary>Sets the stub of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Parameters">
            <summary>Sets the stub of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Site">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.Transaction">
            <summary>Sets the stub of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityCommand.UpdatedRowSource">
            <summary>Sets the stub of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection">
            <summary>Stub type of System.Data.Entity.Core.EntityClient.EntityConnection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.AttachBackingFieldToConnectionString">
            <summary>Attaches delegates to emulate StubEntityConnection.ConnectionString as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubEntityConnection.Site as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginDbTransaction(System.Data.IsolationLevel)">
            <summary>Sets the stub of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginDbTransactionIsolationLevel">
            <summary>Sets the stub of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginTransaction">
            <summary>Sets the stub of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>Sets the stub of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginTransaction01">
            <summary>Sets the stub of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.BeginTransactionIsolationLevel">
            <summary>Sets the stub of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CanRaiseEventsGet">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ChangeDatabase(System.String)">
            <summary>Sets the stub of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ChangeDatabaseString">
            <summary>Sets the stub of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Close">
            <summary>Sets the stub of EntityConnection.Close()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Close01">
            <summary>Sets the stub of EntityConnection.Close()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ConnectionStringGet">
            <summary>Sets the stub of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ConnectionStringSetString">
            <summary>Sets the stub of EntityConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ConnectionTimeoutGet">
            <summary>Sets the stub of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CreateCommand">
            <summary>Sets the stub of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CreateCommand01">
            <summary>Sets the stub of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CreateDbCommand">
            <summary>Sets the stub of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CreateDbCommand01">
            <summary>Sets the stub of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DataSourceGet">
            <summary>Sets the stub of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DatabaseGet">
            <summary>Sets the stub of EntityConnection.get_Database()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DbProviderFactoryGet">
            <summary>Sets the stub of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Dispose(System.Boolean)">
            <summary>Sets the stub of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DisposeBoolean">
            <summary>Sets the stub of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.EnlistTransaction(System.Transactions.Transaction)">
            <summary>Sets the stub of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.EnlistTransactionTransaction">
            <summary>Sets the stub of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetMetadataWorkspace">
            <summary>Sets the stub of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetMetadataWorkspace01">
            <summary>Sets the stub of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchema">
            <summary>Sets the stub of DbConnection.GetSchema()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchema(System.String)">
            <summary>Sets the stub of DbConnection.GetSchema(String collectionName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchema(System.String,System.String[])">
            <summary>Sets the stub of DbConnection.GetSchema(String collectionName, String[] restrictionValues)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchema01">
            <summary>Sets the stub of DbConnection.GetSchema()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchemaString">
            <summary>Sets the stub of DbConnection.GetSchema(String collectionName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetSchemaStringStringArray">
            <summary>Sets the stub of DbConnection.GetSchema(String collectionName, String[] restrictionValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.InitializeStub">
            <summary>Initializes a new instance of type StubEntityConnection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.OnStateChange(System.Data.StateChangeEventArgs)">
            <summary>Sets the stub of DbConnection.OnStateChange(StateChangeEventArgs stateChange)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.OnStateChangeStateChangeEventArgs">
            <summary>Sets the stub of DbConnection.OnStateChange(StateChangeEventArgs stateChange)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Open">
            <summary>Sets the stub of EntityConnection.Open()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Open01">
            <summary>Sets the stub of EntityConnection.Open()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ServerVersionGet">
            <summary>Sets the stub of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.SiteGet">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.SiteSetISite">
            <summary>Sets the stub of Component.set_Site(ISite value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.StateGet">
            <summary>Sets the stub of EntityConnection.get_State()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.StoreConnectionGet">
            <summary>Sets the stub of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.CanRaiseEvents">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ConnectionString">
            <summary>Sets the stub of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ConnectionTimeout">
            <summary>Sets the stub of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DataSource">
            <summary>Sets the stub of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Database">
            <summary>Sets the stub of EntityConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.DbProviderFactory">
            <summary>Sets the stub of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.ServerVersion">
            <summary>Sets the stub of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.Site">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.State">
            <summary>Sets the stub of EntityConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityConnection.StoreConnection">
            <summary>Sets the stub of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter">
            <summary>Stub type of System.Data.Entity.Core.EntityClient.EntityParameter</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.#ctor(System.String,System.Data.DbType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.#ctor(System.String,System.Data.DbType,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToDbType">
            <summary>Attaches delegates to emulate StubEntityParameter.DbType as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToDirection">
            <summary>Attaches delegates to emulate StubEntityParameter.Direction as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToEdmType">
            <summary>Attaches delegates to emulate StubEntityParameter.EdmType as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToIsNullable">
            <summary>Attaches delegates to emulate StubEntityParameter.IsNullable as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToParameterName">
            <summary>Attaches delegates to emulate StubEntityParameter.ParameterName as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToPrecision">
            <summary>Attaches delegates to emulate StubEntityParameter.Precision as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToScale">
            <summary>Attaches delegates to emulate StubEntityParameter.Scale as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToSize">
            <summary>Attaches delegates to emulate StubEntityParameter.Size as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToSourceColumn">
            <summary>Attaches delegates to emulate StubEntityParameter.SourceColumn as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToSourceColumnNullMapping">
            <summary>Attaches delegates to emulate StubEntityParameter.SourceColumnNullMapping as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToSourceVersion">
            <summary>Attaches delegates to emulate StubEntityParameter.SourceVersion as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubEntityParameter.Value as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.DbTypeGet">
            <summary>Sets the stub of EntityParameter.get_DbType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.DbTypeSetDbType">
            <summary>Sets the stub of EntityParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.DirectionGet">
            <summary>Sets the stub of EntityParameter.get_Direction()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.DirectionSetParameterDirection">
            <summary>Sets the stub of EntityParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.EdmTypeGet">
            <summary>Sets the stub of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.EdmTypeSetEdmType">
            <summary>Sets the stub of EntityParameter.set_EdmType(EdmType value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.InitializeStub">
            <summary>Initializes a new instance of type StubEntityParameter</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.IsNullableGet">
            <summary>Sets the stub of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.IsNullableSetBoolean">
            <summary>Sets the stub of EntityParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ParameterNameGet">
            <summary>Sets the stub of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ParameterNameSetString">
            <summary>Sets the stub of EntityParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.PrecisionGet">
            <summary>Sets the stub of EntityParameter.get_Precision()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.PrecisionSetByte">
            <summary>Sets the stub of EntityParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ResetDbType">
            <summary>Sets the stub of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ResetDbType01">
            <summary>Sets the stub of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ScaleGet">
            <summary>Sets the stub of EntityParameter.get_Scale()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ScaleSetByte">
            <summary>Sets the stub of EntityParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SizeGet">
            <summary>Sets the stub of EntityParameter.get_Size()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SizeSetInt32">
            <summary>Sets the stub of EntityParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumnGet">
            <summary>Sets the stub of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumnNullMappingGet">
            <summary>Sets the stub of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumnNullMappingSetBoolean">
            <summary>Sets the stub of EntityParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumnSetString">
            <summary>Sets the stub of EntityParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceVersionGet">
            <summary>Sets the stub of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceVersionSetDataRowVersion">
            <summary>Sets the stub of EntityParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ToString">
            <summary>Sets the stub of EntityParameter.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ToString01">
            <summary>Sets the stub of EntityParameter.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ValueGet">
            <summary>Sets the stub of EntityParameter.get_Value()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ValueSetObject">
            <summary>Sets the stub of EntityParameter.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.DbType">
            <summary>Sets the stub of EntityParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.Direction">
            <summary>Sets the stub of EntityParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.EdmType">
            <summary>Sets the stub of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.IsNullable">
            <summary>Sets the stub of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.ParameterName">
            <summary>Sets the stub of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.Precision">
            <summary>Sets the stub of EntityParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.Scale">
            <summary>Sets the stub of EntityParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.Size">
            <summary>Sets the stub of EntityParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumn">
            <summary>Sets the stub of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceColumnNullMapping">
            <summary>Sets the stub of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.SourceVersion">
            <summary>Sets the stub of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.EntityClient.Fakes.StubEntityParameter.Value">
            <summary>Sets the stub of EntityParameter.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException">
            <summary>Shim type of System.Data.Entity.Core.EntityCommandCompilationException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.#ctor(System.Data.Entity.Core.EntityCommandCompilationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.Constructor">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.ConstructorString">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.ConstructorStringException">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityCommandCompilationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException">
            <summary>Shim type of System.Data.Entity.Core.EntityCommandExecutionException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.#ctor(System.Data.Entity.Core.EntityCommandExecutionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.Constructor">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.ConstructorString">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.ConstructorStringException">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityCommandExecutionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityException">
            <summary>Shim type of System.Data.Entity.Core.EntityException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityException.#ctor(System.Data.Entity.Core.EntityException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityException.Constructor">
            <summary>Sets the shim of EntityException.EntityException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityException.EntityException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityException.ConstructorString">
            <summary>Sets the shim of EntityException.EntityException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityException.ConstructorStringException">
            <summary>Sets the shim of EntityException.EntityException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityKey">
            <summary>Shim type of System.Data.Entity.Core.EntityKey</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKey.#ctor(System.Data.Entity.Core.EntityKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKey.Bind(System.IEquatable{System.Data.Entity.Core.EntityKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AddHashValueInt32Object">
            <summary>Sets the shim of EntityKey.AddHashValue(Int32 hashCode, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AssertCorrectStateEntitySetBaseBoolean">
            <summary>Sets the shim of EntityKey.AssertCorrectState(EntitySetBase entitySet, Boolean isTemporary)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.CompositeKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_CompositeKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.CompositeValuesEqualEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.CompositeValuesEqual(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.CompositeValuesWithBinaryEqualEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.CompositeValuesWithBinaryEqual(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConcatKeyValue">
            <summary>Sets the shim of EntityKey.ConcatKeyValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.Constructor">
            <summary>Sets the shim of EntityKey.EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorEntitySetBase">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorEntitySetBaseObject">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet, Object singletonKeyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorEntitySetBaseObjectArray">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet, Object[] compositeKeyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorEntitySetIExtendedDataRecord">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySet entitySet, IExtendedDataRecord record)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorString">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorStringIEnumerableOfEntityKeyMember">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, IEnumerable`1&lt;EntityKeyMember&gt; entityKeyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorStringIEnumerableOfKeyValuePairOfStringObject">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, IEnumerable`1&lt;KeyValuePair`2&lt;String,Object&gt;&gt; entityKeyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ConstructorStringStringObject">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, String keyName, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.DeserializeMembers">
            <summary>Sets the shim of EntityKey.DeserializeMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntityContainerNameGet">
            <summary>Sets the shim of EntityKey.get_EntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntityContainerNameSetString">
            <summary>Sets the shim of EntityKey.set_EntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntityKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_EntityKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntityKeyValuesSetEntityKeyMemberArray">
            <summary>Sets the shim of EntityKey.set_EntityKeyValues(EntityKeyMember[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntityNotValidKeyGet">
            <summary>Sets the shim of EntityKey.get_EntityNotValidKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntitySetNameGet">
            <summary>Sets the shim of EntityKey.get_EntitySetName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EntitySetNameSetString">
            <summary>Sets the shim of EntityKey.set_EntitySetName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EqualityOpEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.op_Equality(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EqualsEntityKey">
            <summary>Sets the shim of EntityKey.Equals(EntityKey other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.EqualsObject">
            <summary>Sets the shim of EntityKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.FindValueByNameString">
            <summary>Sets the shim of EntityKey.FindValueByName(String keyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.GetEntitySetMetadataWorkspace">
            <summary>Sets the shim of EntityKey.GetEntitySet(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.GetHashCode">
            <summary>Sets the shim of EntityKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.GetKeyValueExpressionsEntitySet">
            <summary>Sets the shim of EntityKey.GetKeyValueExpressions(EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InequalityOpEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.op_Inequality(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InitializeEntitySetNameString">
            <summary>Sets the shim of EntityKey.InitializeEntitySetName(String qualifiedEntitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InitializeKeyValueKeyValuePairOfStringObjectInt32Boolean">
            <summary>Sets the shim of EntityKey.InitializeKeyValue(KeyValuePair`2&lt;String,Object&gt; keyValuePair, Int32 i, Boolean tokenizeStrings)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InitializeKeyValuesEntitySetIExtendedDataRecord">
            <summary>Sets the shim of EntityKey.InitializeKeyValues(EntitySet entitySet, IExtendedDataRecord record)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InitializeKeyValuesIEnumerableOfKeyValuePairOfStringObjectBooleanBoolean">
            <summary>Sets the shim of EntityKey.InitializeKeyValues(IEnumerable`1&lt;KeyValuePair`2&lt;String,Object&gt;&gt; entityKeyValues, Boolean allowNullKeys, Boolean tokenizeStrings)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.InternalEqualsEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityKey.InternalEquals(EntityKey key1, EntityKey key2, Boolean compareEntitySets)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.IsTemporaryGet">
            <summary>Sets the shim of EntityKey.get_IsTemporary()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.LookupSingletonNameString">
            <summary>Sets the shim of EntityKey.LookupSingletonName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.NoEntitySetKeyGet">
            <summary>Sets the shim of EntityKey.get_NoEntitySetKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.OnDeserializedStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.OnDeserializingStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.RequiresDeserializationGet">
            <summary>Sets the shim of EntityKey.get_RequiresDeserialization()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.SingletonKeyValueGet">
            <summary>Sets the shim of EntityKey.get_SingletonKeyValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.StaticConstructor">
            <summary>Sets the shim of EntityKey.EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValidateEntityKeyMetadataWorkspaceEntitySet">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValidateEntityKeyMetadataWorkspaceEntitySetBooleanString">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet, Boolean isArgumentException, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValidateNameString">
            <summary>Sets the shim of EntityKey.ValidateName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValidateTypeOfKeyValueMetadataWorkspaceEdmMemberObjectBooleanString">
            <summary>Sets the shim of EntityKey.ValidateTypeOfKeyValue(MetadataWorkspace workspace, EdmMember keyMember, Object keyValue, Boolean isArgumentException, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValidateWritableObject">
            <summary>Sets the shim of EntityKey.ValidateWritable(Object instance)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValuesEqualStringObjectEntityKey">
            <summary>Sets the shim of EntityKey.ValuesEqual(String keyName, Object keyValue, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.ValuesWithBinaryEqualStringObjectEntityKey">
            <summary>Sets the shim of EntityKey.ValuesWithBinaryEqual(String keyName, Object keyValue, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey._LookupSingletonNameb__0String">
            <summary>Sets the shim of EntityKey.&lt;LookupSingletonName&gt;b__0(String n)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.AddHashValueInt32Object">
            <summary>Sets the shim of EntityKey.AddHashValue(Int32 hashCode, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.AssertCorrectStateEntitySetBaseBoolean">
            <summary>Sets the shim of EntityKey.AssertCorrectState(EntitySetBase entitySet, Boolean isTemporary)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.CompositeKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_CompositeKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.ConcatKeyValue">
            <summary>Sets the shim of EntityKey.ConcatKeyValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.DeserializeMembers">
            <summary>Sets the shim of EntityKey.DeserializeMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntityContainerNameGet">
            <summary>Sets the shim of EntityKey.get_EntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntityContainerNameSetString">
            <summary>Sets the shim of EntityKey.set_EntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntityKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_EntityKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntityKeyValuesSetEntityKeyMemberArray">
            <summary>Sets the shim of EntityKey.set_EntityKeyValues(EntityKeyMember[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntitySetNameGet">
            <summary>Sets the shim of EntityKey.get_EntitySetName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EntitySetNameSetString">
            <summary>Sets the shim of EntityKey.set_EntitySetName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EqualsEntityKey">
            <summary>Sets the shim of EntityKey.Equals(EntityKey other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.EqualsObject">
            <summary>Sets the shim of EntityKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.FindValueByNameString">
            <summary>Sets the shim of EntityKey.FindValueByName(String keyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.GetEntitySetMetadataWorkspace">
            <summary>Sets the shim of EntityKey.GetEntitySet(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.GetHashCode01">
            <summary>Sets the shim of EntityKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.GetKeyValueExpressionsEntitySet">
            <summary>Sets the shim of EntityKey.GetKeyValueExpressions(EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.InitializeEntitySetNameString">
            <summary>Sets the shim of EntityKey.InitializeEntitySetName(String qualifiedEntitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.InitializeKeyValueKeyValuePairOfStringObjectInt32Boolean">
            <summary>Sets the shim of EntityKey.InitializeKeyValue(KeyValuePair`2&lt;String,Object&gt; keyValuePair, Int32 i, Boolean tokenizeStrings)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.InitializeKeyValuesEntitySetIExtendedDataRecord">
            <summary>Sets the shim of EntityKey.InitializeKeyValues(EntitySet entitySet, IExtendedDataRecord record)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.InitializeKeyValuesIEnumerableOfKeyValuePairOfStringObjectBooleanBoolean">
            <summary>Sets the shim of EntityKey.InitializeKeyValues(IEnumerable`1&lt;KeyValuePair`2&lt;String,Object&gt;&gt; entityKeyValues, Boolean allowNullKeys, Boolean tokenizeStrings)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.IsTemporaryGet">
            <summary>Sets the shim of EntityKey.get_IsTemporary()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.OnDeserializingStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.RequiresDeserializationGet">
            <summary>Sets the shim of EntityKey.get_RequiresDeserialization()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.SingletonKeyValueGet">
            <summary>Sets the shim of EntityKey.get_SingletonKeyValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.ValidateEntityKeyMetadataWorkspaceEntitySet">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.ValidateEntityKeyMetadataWorkspaceEntitySetBooleanString">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet, Boolean isArgumentException, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKey.AllInstances.ValidateWritableObject">
            <summary>Sets the shim of EntityKey.ValidateWritable(Object instance)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityKeyMember">
            <summary>Shim type of System.Data.Entity.Core.EntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.#ctor(System.Data.Entity.Core.EntityKeyMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.Constructor">
            <summary>Sets the shim of EntityKeyMember.EntityKeyMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.ConstructorStringObject">
            <summary>Sets the shim of EntityKeyMember.EntityKeyMember(String keyName, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.KeyGet">
            <summary>Sets the shim of EntityKeyMember.get_Key()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.KeySetString">
            <summary>Sets the shim of EntityKeyMember.set_Key(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.ToString">
            <summary>Sets the shim of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.ValidateWritableObject">
            <summary>Sets the shim of EntityKeyMember.ValidateWritable(Object instance)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.ValueGet">
            <summary>Sets the shim of EntityKeyMember.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.ValueSetObject">
            <summary>Sets the shim of EntityKeyMember.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances.KeyGet">
            <summary>Sets the shim of EntityKeyMember.get_Key()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances.KeySetString">
            <summary>Sets the shim of EntityKeyMember.set_Key(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances.ToString01">
            <summary>Sets the shim of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances.ValueGet">
            <summary>Sets the shim of EntityKeyMember.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntityKeyMember.AllInstances.ValueSetObject">
            <summary>Sets the shim of EntityKeyMember.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntitySqlException">
            <summary>Shim type of System.Data.Entity.Core.EntitySqlException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntitySqlException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntitySqlException.#ctor(System.Data.Entity.Core.EntitySqlException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntitySqlException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntitySqlException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimEntitySqlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ColumnGet">
            <summary>Sets the shim of EntitySqlException.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.Constructor">
            <summary>Sets the shim of EntitySqlException.EntitySqlException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ConstructorString">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ConstructorStringException">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ConstructorStringStringStringInt32Int32Exception">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(String message, String errorDescription, String errorContext, Int32 line, Int32 column, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.CreateStringStringInt32StringBooleanException">
            <summary>Sets the shim of EntitySqlException.Create(String commandText, String errorDescription, Int32 errorPosition, String errorContextInfo, Boolean loadErrorContextInfoFromResource, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ErrorContextGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.ErrorDescriptionGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.FormatErrorContextStringInt32StringBooleanInt32OutInt32Out">
            <summary>Sets the shim of EntitySqlException.FormatErrorContext(String commandText, Int32 errorPosition, String errorContextInfo, Boolean loadErrorContextInfoFromResource, Int32&amp; lineNumber, Int32&amp; columnNumber)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.FormatQueryErrorStringString">
            <summary>Sets the shim of EntitySqlException.FormatQueryError(String errorMessage, String errorContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.GetGenericErrorMessageStringInt32">
            <summary>Sets the shim of EntitySqlException.GetGenericErrorMessage(String commandText, Int32 position)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.LineGet">
            <summary>Sets the shim of EntitySqlException.get_Line()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.SubscribeToSerializeObjectState">
            <summary>Sets the shim of EntitySqlException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of EntitySqlException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object _, SafeSerializationEventArgs a)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances.ColumnGet">
            <summary>Sets the shim of EntitySqlException.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances.ErrorContextGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances.ErrorDescriptionGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances.LineGet">
            <summary>Sets the shim of EntitySqlException.get_Line()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances.SubscribeToSerializeObjectState">
            <summary>Sets the shim of EntitySqlException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimEntitySqlException.AllInstances._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of EntitySqlException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object _, SafeSerializationEventArgs a)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException">
            <summary>Shim type of System.Data.Entity.Core.InvalidCommandTreeException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.#ctor(System.Data.Entity.Core.InvalidCommandTreeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.Constructor">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.ConstructorString">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.ConstructorStringException">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimInvalidCommandTreeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimMappingException">
            <summary>Shim type of System.Data.Entity.Core.MappingException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMappingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMappingException.#ctor(System.Data.Entity.Core.MappingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMappingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMappingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMappingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMappingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMappingException.Constructor">
            <summary>Sets the shim of MappingException.MappingException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMappingException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MappingException.MappingException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMappingException.ConstructorString">
            <summary>Sets the shim of MappingException.MappingException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMappingException.ConstructorStringException">
            <summary>Sets the shim of MappingException.MappingException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimMappingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimMetadataException">
            <summary>Shim type of System.Data.Entity.Core.MetadataException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMetadataException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMetadataException.#ctor(System.Data.Entity.Core.MetadataException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMetadataException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMetadataException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimMetadataException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMetadataException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMetadataException.Constructor">
            <summary>Sets the shim of MetadataException.MetadataException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMetadataException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MetadataException.MetadataException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMetadataException.ConstructorString">
            <summary>Sets the shim of MetadataException.MetadataException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimMetadataException.ConstructorStringException">
            <summary>Sets the shim of MetadataException.MetadataException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimMetadataException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException">
            <summary>Shim type of System.Data.Entity.Core.ObjectNotFoundException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.#ctor(System.Data.Entity.Core.ObjectNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.Constructor">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.ConstructorString">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.ConstructorStringException">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimObjectNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException">
            <summary>Shim type of System.Data.Entity.Core.OptimisticConcurrencyException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.#ctor(System.Data.Entity.Core.OptimisticConcurrencyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.Constructor">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.ConstructorString">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.ConstructorStringException">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.ConstructorStringExceptionIEnumerableOfObjectStateEntry">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message, Exception innerException, IEnumerable`1&lt;ObjectStateEntry&gt; stateEntries)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimOptimisticConcurrencyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException">
            <summary>Shim type of System.Data.Entity.Core.PropertyConstraintException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.#ctor(System.Data.Entity.Core.PropertyConstraintException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.Constructor">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.ConstructorString">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.ConstructorStringException">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.ConstructorStringString">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.ConstructorStringStringException">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, String propertyName, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.PropertyNameGet">
            <summary>Sets the shim of PropertyConstraintException.get_PropertyName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.SubscribeToSerializeObjectState">
            <summary>Sets the shim of PropertyConstraintException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of PropertyConstraintException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object _, SafeSerializationEventArgs a)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.AllInstances.PropertyNameGet">
            <summary>Sets the shim of PropertyConstraintException.get_PropertyName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.AllInstances.SubscribeToSerializeObjectState">
            <summary>Sets the shim of PropertyConstraintException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimPropertyConstraintException.AllInstances._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of PropertyConstraintException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object _, SafeSerializationEventArgs a)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException">
            <summary>Shim type of System.Data.Entity.Core.ProviderIncompatibleException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.#ctor(System.Data.Entity.Core.ProviderIncompatibleException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.Constructor">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.ConstructorString">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.ConstructorStringException">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimProviderIncompatibleException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimUpdateException">
            <summary>Shim type of System.Data.Entity.Core.UpdateException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimUpdateException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimUpdateException.#ctor(System.Data.Entity.Core.UpdateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimUpdateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimUpdateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.ShimUpdateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.Constructor">
            <summary>Sets the shim of UpdateException.UpdateException()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UpdateException.UpdateException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.ConstructorString">
            <summary>Sets the shim of UpdateException.UpdateException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.ConstructorStringException">
            <summary>Sets the shim of UpdateException.UpdateException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.ConstructorStringExceptionIEnumerableOfObjectStateEntry">
            <summary>Sets the shim of UpdateException.UpdateException(String message, Exception innerException, IEnumerable`1&lt;ObjectStateEntry&gt; stateEntries)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.StateEntriesGet">
            <summary>Sets the shim of UpdateException.get_StateEntries()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.ShimUpdateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.ShimUpdateException.AllInstances.StateEntriesGet">
            <summary>Sets the shim of UpdateException.get_StateEntries()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.StubEntityException">
            <summary>Stub type of System.Data.Entity.Core.EntityException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEntityException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEntityException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.InitializeStub">
            <summary>Initializes a new instance of type StubEntityException</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.StubEntityKeyMember">
            <summary>Stub type of System.Data.Entity.Core.EntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityKeyMember.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityKeyMember.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityKeyMember.InitializeStub">
            <summary>Initializes a new instance of type StubEntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubEntityKeyMember.ToString">
            <summary>Sets the stub of EntityKeyMember.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubEntityKeyMember.ToString01">
            <summary>Sets the stub of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityKeyMember.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityKeyMember.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubEntityKeyMember.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord">
            <summary>Stub type of System.Data.Entity.Core.IExtendedDataRecord</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.#ctor">
            <summary>Initializes a new instance of type StubIExtendedDataRecord</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.DataRecordInfoGet">
            <summary>Sets the stub of IExtendedDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.FieldCountGet">
            <summary>Sets the stub of IDataRecord.get_FieldCount()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetBooleanInt32">
            <summary>Sets the stub of IDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetByteInt32">
            <summary>Sets the stub of IDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the stub of IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetCharInt32">
            <summary>Sets the stub of IDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the stub of IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDataInt32">
            <summary>Sets the stub of IDataRecord.GetData(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDataReaderInt32">
            <summary>Sets the stub of IExtendedDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDataRecordInt32">
            <summary>Sets the stub of IExtendedDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDataTypeNameInt32">
            <summary>Sets the stub of IDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDateTimeInt32">
            <summary>Sets the stub of IDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDecimalInt32">
            <summary>Sets the stub of IDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetDoubleInt32">
            <summary>Sets the stub of IDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetFieldTypeInt32">
            <summary>Sets the stub of IDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetFloatInt32">
            <summary>Sets the stub of IDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetGuidInt32">
            <summary>Sets the stub of IDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetInt16Int32">
            <summary>Sets the stub of IDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetInt32Int32">
            <summary>Sets the stub of IDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetInt64Int32">
            <summary>Sets the stub of IDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetNameInt32">
            <summary>Sets the stub of IDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetOrdinalString">
            <summary>Sets the stub of IDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetStringInt32">
            <summary>Sets the stub of IDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetValueInt32">
            <summary>Sets the stub of IDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.GetValuesObjectArray">
            <summary>Sets the stub of IDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.IsDBNullInt32">
            <summary>Sets the stub of IDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.ItemGetInt32">
            <summary>Sets the stub of IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.ItemGetString">
            <summary>Sets the stub of IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.ef::System#Data#Entity#Core#IExtendedDataRecord#GetDataReader(System.Int32)">
            <summary>Sets the stub of IExtendedDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.ef::System#Data#Entity#Core#IExtendedDataRecord#GetDataRecord(System.Int32)">
            <summary>Sets the stub of IExtendedDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetBoolean(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetByte(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetChar(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetData(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetData(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDataTypeName(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDateTime(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDecimal(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDouble(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetFieldType(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetFloat(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetGuid(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt16(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt32(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt64(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetName(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetOrdinal(System.String)">
            <summary>Sets the stub of IDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetString(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetValue(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetValues(System.Object[])">
            <summary>Sets the stub of IDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#IsDBNull(System.Int32)">
            <summary>Sets the stub of IDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.ef::System#Data#Entity#Core#IExtendedDataRecord#DataRecordInfo">
            <summary>Sets the stub of IExtendedDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#FieldCount">
            <summary>Sets the stub of IDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.System#Data#IDataRecord#Item(System.Int32)">
            <summary>Sets the stub of IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubIExtendedDataRecord.System#Data#IDataRecord#Item(System.String)">
            <summary>Sets the stub of IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Fakes.StubUpdateException">
            <summary>Stub type of System.Data.Entity.Core.UpdateException</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUpdateException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUpdateException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.InitializeStub">
            <summary>Initializes a new instance of type StubUpdateException</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Fakes.StubUpdateException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Fakes.StubUpdateException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Fakes.StubUpdateException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Mapping.MappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.#ctor(System.Data.Entity.Core.Mapping.MappingItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.ConstructorDataSpace">
            <summary>Sets the shim of MappingItemCollection.MappingItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Mapping.Fakes.ShimMappingItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Mapping.StorageMappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.#ctor(System.Data.Entity.Core.Mapping.StorageMappingItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.CheckForDuplicateItemsEdmItemCollectionStoreItemCollectionListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.CheckForDuplicateItems(EdmItemCollection edmItemCollection, StoreItemCollection storeItemCollection, List`1&lt;EdmSchemaError&gt; errorCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.CheckIsSameVersionDoubleDoubleIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.CheckIsSameVersion(Double expectedVersion, Double currentLoaderVersion, IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ComputeMappingHashValue">
            <summary>Sets the shim of StorageMappingItemCollection.ComputeMappingHashValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ComputeMappingHashValueStringString">
            <summary>Sets the shim of StorageMappingItemCollection.ComputeMappingHashValue(String conceptualModelContainerName, String storeModelContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.Constructor">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReader">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderIListOfString">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, IList`1&lt;String&gt; filePaths)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderIListOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmItemCollection, StoreItemCollection storeItemCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, IList`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionStringArray">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.ContainsStorageEntityContainerString">
            <summary>Sets the shim of StorageMappingItemCollection.ContainsStorageEntityContainer(String storageEntityContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.CreateEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderIListOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StorageMappingItemCollection.Create(EdmItemCollection edmItemCollection, StoreItemCollection storeItemCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, IList`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.EdmItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_EdmItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.FindForeignKeyPropertiesEntitySetBaseEntityTypeBaseListOfEdmMember">
            <summary>Sets the shim of StorageMappingItemCollection.FindForeignKeyProperties(EntitySetBase entitySetBase, EntityTypeBase entityType, List`1&lt;EdmMember&gt; interestingMembers)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.GenerateViewsIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateViews(IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.GenerateViewsStringStringIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateViews(String conceptualModelContainerName, String storeModelContainerName, IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.InitEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderIListOfStringBoolean">
            <summary>Sets the shim of StorageMappingItemCollection.Init(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, IList`1&lt;String&gt; filePaths, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.MappingVersionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.MappingViewCacheFactoryGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingViewCacheFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.MappingViewCacheFactorySetDbMappingViewCacheFactory">
            <summary>Sets the shim of StorageMappingItemCollection.set_MappingViewCacheFactory(DbMappingViewCacheFactory value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.StoreItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_StoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.WorkspaceGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_Workspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection._FindForeignKeyPropertiesb__10EdmType">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;FindForeignKeyProperties&gt;b__10(EdmType e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection._get_Workspaceb__0">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__0()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection._get_Workspaceb__1">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection._get_Workspaceb__2">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__2()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.CheckIsSameVersionDoubleDoubleIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.CheckIsSameVersion(Double expectedVersion, Double currentLoaderVersion, IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.ComputeMappingHashValue">
            <summary>Sets the shim of StorageMappingItemCollection.ComputeMappingHashValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.ComputeMappingHashValueStringString">
            <summary>Sets the shim of StorageMappingItemCollection.ComputeMappingHashValue(String conceptualModelContainerName, String storeModelContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.ContainsStorageEntityContainerString">
            <summary>Sets the shim of StorageMappingItemCollection.ContainsStorageEntityContainer(String storageEntityContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.EdmItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_EdmItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.GenerateViewsIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateViews(IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.GenerateViewsStringStringIListOfEdmSchemaError">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateViews(String conceptualModelContainerName, String storeModelContainerName, IList`1&lt;EdmSchemaError&gt; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.InitEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderIListOfStringBoolean">
            <summary>Sets the shim of StorageMappingItemCollection.Init(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, IList`1&lt;String&gt; filePaths, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.MappingVersionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.MappingViewCacheFactoryGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingViewCacheFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.MappingViewCacheFactorySetDbMappingViewCacheFactory">
            <summary>Sets the shim of StorageMappingItemCollection.set_MappingViewCacheFactory(DbMappingViewCacheFactory value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.StoreItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_StoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.WorkspaceGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_Workspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances._get_Workspaceb__0">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__0()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances._get_Workspaceb__1">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances._get_Workspaceb__2">
            <summary>Sets the shim of StorageMappingItemCollection.&lt;get_Workspace&gt;b__2()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection">
            <summary>Stub type of System.Data.Entity.Core.Mapping.StorageMappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.Contains(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.ContainsString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.GetItems``1">
            <summary>Sets the stub of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets stubs of GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.GetValue(System.String,System.Boolean)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.GetValueStringBoolean">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.InitializeStub">
            <summary>Initializes a new instance of type StubStorageMappingItemCollection</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.ItemGetString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.TryGetValue(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.GlobalItem@)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.TryGetValueStringBooleanGlobalItemOut">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Mapping.Fakes.StubStorageMappingItemCollection.Item(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.AssociationEndMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationEndMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationEndMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.ConstructorStringEntityType">
            <summary>Sets the shim of AssociationEndMember.AssociationEndMember(String name, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.ConstructorStringRefTypeRelationshipMultiplicity">
            <summary>Sets the shim of AssociationEndMember.AssociationEndMember(String name, RefType endRefType, RelationshipMultiplicity multiplicity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.CreateStringRefTypeRelationshipMultiplicityOperationActionIEnumerableOfMetadataProperty">
            <summary>Sets the shim of AssociationEndMember.Create(String name, RefType endRefType, RelationshipMultiplicity multiplicity, OperationAction deleteAction, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.GetRelatedEndGet">
            <summary>Sets the shim of AssociationEndMember.get_GetRelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.GetRelatedEndSetFuncOfRelationshipManagerRelatedEndRelatedEnd">
            <summary>Sets the shim of AssociationEndMember.set_GetRelatedEnd(Func`3&lt;RelationshipManager,RelatedEnd,RelatedEnd&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationEndMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.GetRelatedEndGet">
            <summary>Sets the shim of AssociationEndMember.get_GetRelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.GetRelatedEndSetFuncOfRelationshipManagerRelatedEndRelatedEnd">
            <summary>Sets the shim of AssociationEndMember.set_GetRelatedEnd(Func`3&lt;RelationshipManager,RelatedEnd,RelatedEnd&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.AssociationSet</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AddAssociationSetEndAssociationSetEnd">
            <summary>Sets the shim of AssociationSet.AddAssociationSetEnd(AssociationSetEnd associationSetEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AssociationSetEndsGet">
            <summary>Sets the shim of AssociationSet.get_AssociationSetEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.CheckEntitySetAgainstEndMemberEntitySetAssociationEndMember">
            <summary>Sets the shim of AssociationSet.CheckEntitySetAgainstEndMember(EntitySet entitySet, AssociationEndMember endMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.ConstructorStringAssociationType">
            <summary>Sets the shim of AssociationSet.AssociationSet(String name, AssociationType associationType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.CreateStringAssociationTypeEntitySetEntitySetIEnumerableOfMetadataProperty">
            <summary>Sets the shim of AssociationSet.Create(String name, AssociationType type, EntitySet sourceSet, EntitySet targetSet, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.ElementTypeGet">
            <summary>Sets the shim of AssociationSet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.SetReadOnly">
            <summary>Sets the shim of AssociationSet.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.SourceEndGet">
            <summary>Sets the shim of AssociationSet.get_SourceEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.SourceSetGet">
            <summary>Sets the shim of AssociationSet.get_SourceSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.SourceSetSetEntitySet">
            <summary>Sets the shim of AssociationSet.set_SourceSet(EntitySet value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.TargetEndGet">
            <summary>Sets the shim of AssociationSet.get_TargetEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.TargetSetGet">
            <summary>Sets the shim of AssociationSet.get_TargetSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.TargetSetSetEntitySet">
            <summary>Sets the shim of AssociationSet.set_TargetSet(EntitySet value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.AddAssociationSetEndAssociationSetEnd">
            <summary>Sets the shim of AssociationSet.AddAssociationSetEnd(AssociationSetEnd associationSetEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.AssociationSetEndsGet">
            <summary>Sets the shim of AssociationSet.get_AssociationSetEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of AssociationSet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationSet.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.SourceEndGet">
            <summary>Sets the shim of AssociationSet.get_SourceEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.SourceSetGet">
            <summary>Sets the shim of AssociationSet.get_SourceSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.SourceSetSetEntitySet">
            <summary>Sets the shim of AssociationSet.set_SourceSet(EntitySet value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.TargetEndGet">
            <summary>Sets the shim of AssociationSet.get_TargetEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.TargetSetGet">
            <summary>Sets the shim of AssociationSet.get_TargetSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.TargetSetSetEntitySet">
            <summary>Sets the shim of AssociationSet.set_TargetSet(EntitySet value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSetEnd.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.ConstructorEntitySetAssociationSetAssociationEndMember">
            <summary>Sets the shim of AssociationSetEnd.AssociationSetEnd(EntitySet entitySet, AssociationSet parentSet, AssociationEndMember endMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.CorrespondingAssociationEndMemberGet">
            <summary>Sets the shim of AssociationSetEnd.get_CorrespondingAssociationEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.EntitySetGet">
            <summary>Sets the shim of AssociationSetEnd.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.IdentityGet">
            <summary>Sets the shim of AssociationSetEnd.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.NameGet">
            <summary>Sets the shim of AssociationSetEnd.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.ParentAssociationSetGet">
            <summary>Sets the shim of AssociationSetEnd.get_ParentAssociationSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.RoleGet">
            <summary>Sets the shim of AssociationSetEnd.get_Role()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.SetReadOnly">
            <summary>Sets the shim of AssociationSetEnd.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.ToString">
            <summary>Sets the shim of AssociationSetEnd.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSetEnd.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.CorrespondingAssociationEndMemberGet">
            <summary>Sets the shim of AssociationSetEnd.get_CorrespondingAssociationEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.EntitySetGet">
            <summary>Sets the shim of AssociationSetEnd.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.IdentityGet">
            <summary>Sets the shim of AssociationSetEnd.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.NameGet">
            <summary>Sets the shim of AssociationSetEnd.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.ParentAssociationSetGet">
            <summary>Sets the shim of AssociationSetEnd.get_ParentAssociationSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.RoleGet">
            <summary>Sets the shim of AssociationSetEnd.get_Role()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationSetEnd.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.ToString01">
            <summary>Sets the shim of AssociationSetEnd.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.AssociationType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AddReferentialConstraintReferentialConstraint">
            <summary>Sets the shim of AssociationType.AddReferentialConstraint(ReferentialConstraint referentialConstraint)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AssociationEndMembersGet">
            <summary>Sets the shim of AssociationType.get_AssociationEndMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.ConstraintGet">
            <summary>Sets the shim of AssociationType.get_Constraint()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.ConstraintSetReferentialConstraint">
            <summary>Sets the shim of AssociationType.set_Constraint(ReferentialConstraint value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.ConstructorStringStringBooleanDataSpace">
            <summary>Sets the shim of AssociationType.AssociationType(String name, String namespaceName, Boolean foreignKey, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.CreateStringStringBooleanDataSpaceAssociationEndMemberAssociationEndMemberReferentialConstraintIEnumerableOfMetadataProperty">
            <summary>Sets the shim of AssociationType.Create(String name, String namespaceName, Boolean foreignKey, DataSpace dataSpace, AssociationEndMember sourceEnd, AssociationEndMember targetEnd, ReferentialConstraint constraint, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.IsForeignKeyGet">
            <summary>Sets the shim of AssociationType.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.ReferentialConstraintsGet">
            <summary>Sets the shim of AssociationType.get_ReferentialConstraints()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.SetReadOnly">
            <summary>Sets the shim of AssociationType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.SourceEndGet">
            <summary>Sets the shim of AssociationType.get_SourceEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.SourceEndSetAssociationEndMember">
            <summary>Sets the shim of AssociationType.set_SourceEnd(AssociationEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.TargetEndGet">
            <summary>Sets the shim of AssociationType.get_TargetEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.TargetEndSetAssociationEndMember">
            <summary>Sets the shim of AssociationType.set_TargetEnd(AssociationEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of AssociationType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.AddReferentialConstraintReferentialConstraint">
            <summary>Sets the shim of AssociationType.AddReferentialConstraint(ReferentialConstraint referentialConstraint)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.AssociationEndMembersGet">
            <summary>Sets the shim of AssociationType.get_AssociationEndMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ConstraintGet">
            <summary>Sets the shim of AssociationType.get_Constraint()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ConstraintSetReferentialConstraint">
            <summary>Sets the shim of AssociationType.set_Constraint(ReferentialConstraint value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of AssociationType.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ReferentialConstraintsGet">
            <summary>Sets the shim of AssociationType.get_ReferentialConstraints()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.SourceEndGet">
            <summary>Sets the shim of AssociationType.get_SourceEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.SourceEndSetAssociationEndMember">
            <summary>Sets the shim of AssociationType.set_SourceEnd(AssociationEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.TargetEndGet">
            <summary>Sets the shim of AssociationType.get_TargetEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.TargetEndSetAssociationEndMember">
            <summary>Sets the shim of AssociationType.set_TargetEnd(AssociationEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of AssociationType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.CollectionType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.#ctor(System.Data.Entity.Core.Metadata.Edm.CollectionType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.BuiltInTypeKindGet">
            <summary>Sets the shim of CollectionType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.Constructor">
            <summary>Sets the shim of CollectionType.CollectionType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.ConstructorEdmType">
            <summary>Sets the shim of CollectionType.CollectionType(EdmType elementType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.ConstructorTypeUsage">
            <summary>Sets the shim of CollectionType.CollectionType(TypeUsage elementType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.EdmEqualsMetadataItem">
            <summary>Sets the shim of CollectionType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.GetIdentityTypeUsage">
            <summary>Sets the shim of CollectionType.GetIdentity(TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.TypeUsageGet">
            <summary>Sets the shim of CollectionType.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of CollectionType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of CollectionType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.TypeUsageGet">
            <summary>Sets the shim of CollectionType.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ComplexType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.#ctor(System.Data.Entity.Core.Metadata.Edm.ComplexType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.BuiltInTypeKindGet">
            <summary>Sets the shim of ComplexType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.Constructor">
            <summary>Sets the shim of ComplexType.ComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.ConstructorString">
            <summary>Sets the shim of ComplexType.ComplexType(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of ComplexType.ComplexType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.CreateStringStringDataSpaceIEnumerableOfEdmMemberIEnumerableOfMetadataProperty">
            <summary>Sets the shim of ComplexType.Create(String name, String namespaceName, DataSpace dataSpace, IEnumerable`1&lt;EdmMember&gt; members, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.PropertiesGet">
            <summary>Sets the shim of ComplexType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of ComplexType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of ComplexType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.AllInstances.PropertiesGet">
            <summary>Sets the shim of ComplexType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimComplexType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of ComplexType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.CsdlSerializer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.#ctor(System.Data.Entity.Core.Metadata.Edm.CsdlSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.Constructor">
            <summary>Sets the shim of CsdlSerializer.CsdlSerializer()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.OnErrorAddEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of CsdlSerializer.add_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.OnErrorRemoveEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of CsdlSerializer.remove_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.SerializeEdmModelXmlWriterString">
            <summary>Sets the shim of CsdlSerializer.Serialize(EdmModel model, XmlWriter xmlWriter, String modelNamespace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.AllInstances.OnErrorAddEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of CsdlSerializer.add_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.AllInstances.OnErrorRemoveEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of CsdlSerializer.remove_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimCsdlSerializer.AllInstances.SerializeEdmModelXmlWriterString">
            <summary>Sets the shim of CsdlSerializer.Serialize(EdmModel model, XmlWriter xmlWriter, String modelNamespace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.#ctor(System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.Constructor">
            <summary>Sets the shim of DataModelErrorEventArgs.DataModelErrorEventArgs()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.ErrorMessageGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.ErrorMessageSetString">
            <summary>Sets the shim of DataModelErrorEventArgs.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.ItemGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_Item()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.ItemSetMetadataItem">
            <summary>Sets the shim of DataModelErrorEventArgs.set_Item(MetadataItem value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.PropertyNameGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_PropertyName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.PropertyNameSetString">
            <summary>Sets the shim of DataModelErrorEventArgs.set_PropertyName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.ErrorMessageSetString">
            <summary>Sets the shim of DataModelErrorEventArgs.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.ItemGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_Item()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.ItemSetMetadataItem">
            <summary>Sets the shim of DataModelErrorEventArgs.set_Item(MetadataItem value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.PropertyNameGet">
            <summary>Sets the shim of DataModelErrorEventArgs.get_PropertyName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDataModelErrorEventArgs.AllInstances.PropertyNameSetString">
            <summary>Sets the shim of DataModelErrorEventArgs.set_PropertyName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.DbModelExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.GetConceptualModelIEdmModelAdapter">
            <summary>Sets the shim of DbModelExtensions.GetConceptualModel(IEdmModelAdapter model)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDbModelExtensions.GetStoreModelIEdmModelAdapter">
            <summary>Sets the shim of DbModelExtensions.GetStoreModel(IEdmModelAdapter model)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.Documentation</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.#ctor(System.Data.Entity.Core.Metadata.Edm.Documentation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.BuiltInTypeKindGet">
            <summary>Sets the shim of Documentation.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.Constructor">
            <summary>Sets the shim of Documentation.Documentation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.IdentityGet">
            <summary>Sets the shim of Documentation.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.IsEmptyGet">
            <summary>Sets the shim of Documentation.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.LongDescriptionGet">
            <summary>Sets the shim of Documentation.get_LongDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.LongDescriptionSetString">
            <summary>Sets the shim of Documentation.set_LongDescription(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.SummaryGet">
            <summary>Sets the shim of Documentation.get_Summary()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.SummarySetString">
            <summary>Sets the shim of Documentation.set_Summary(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.ToString">
            <summary>Sets the shim of Documentation.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of Documentation.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.IdentityGet">
            <summary>Sets the shim of Documentation.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.IsEmptyGet">
            <summary>Sets the shim of Documentation.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.LongDescriptionGet">
            <summary>Sets the shim of Documentation.get_LongDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.LongDescriptionSetString">
            <summary>Sets the shim of Documentation.set_LongDescription(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.SummaryGet">
            <summary>Sets the shim of Documentation.get_Summary()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.SummarySetString">
            <summary>Sets the shim of Documentation.set_Summary(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.ToString01">
            <summary>Sets the shim of Documentation.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmError</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.ConstructorString">
            <summary>Sets the shim of EdmError.EdmError(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.MessageGet">
            <summary>Sets the shim of EdmError.get_Message()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmError.AllInstances.MessageGet">
            <summary>Sets the shim of EdmError.get_Message()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmFunction</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityOf1StringBuilderStringIEnumerableOfM0FuncOfM0TypeUsageFuncOfM0ParameterMode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Data.Entity.Core.Metadata.Edm.TypeUsage},System.Func{``0,System.Data.Entity.Core.Metadata.Edm.ParameterMode}})">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder, String functionName, IEnumerable`1&lt;!!0&gt; functionParameters, Func`2&lt;!!0,TypeUsage&gt; getParameterTypeUsage, Func`2&lt;!!0,ParameterMode&gt; getParameterMode)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AddParameterFunctionParameter">
            <summary>Sets the shim of EdmFunction.AddParameter(FunctionParameter functionParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AggregateAttributeGet">
            <summary>Sets the shim of EdmFunction.get_AggregateAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityStringIEnumerableOfTypeUsage">
            <summary>Sets the shim of EdmFunction.BuildIdentity(String functionName, IEnumerable`1&lt;TypeUsage&gt; functionParameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BuiltInAttributeGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.CommandTextAttributeGet">
            <summary>Sets the shim of EdmFunction.get_CommandTextAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EdmFunction.EdmFunction(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ConstructorStringStringDataSpaceEdmFunctionPayload">
            <summary>Sets the shim of EdmFunction.EdmFunction(String name, String namespaceName, DataSpace dataSpace, EdmFunctionPayload payload)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.CreateStringStringDataSpaceEdmFunctionPayloadIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EdmFunction.Create(String name, String namespaceName, DataSpace dataSpace, EdmFunctionPayload payload, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.EntitySetGet">
            <summary>Sets the shim of EdmFunction.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.EntitySetsGet">
            <summary>Sets the shim of EdmFunction.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.FullNameGet">
            <summary>Sets the shim of EdmFunction.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.FunctionNameGet">
            <summary>Sets the shim of EdmFunction.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.HasUserDefinedBodyGet">
            <summary>Sets the shim of EdmFunction.get_HasUserDefinedBody()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.IsComposableAttributeGet">
            <summary>Sets the shim of EdmFunction.get_IsComposableAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunction.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunction.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.IsModelDefinedFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsModelDefinedFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.NiladicFunctionAttributeGet">
            <summary>Sets the shim of EdmFunction.get_NiladicFunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ParameterTypeSemanticsAttributeGet">
            <summary>Sets the shim of EdmFunction.get_ParameterTypeSemanticsAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ParametersGet">
            <summary>Sets the shim of EdmFunction.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ReturnParameterGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.ReturnParametersGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.SchemaGet">
            <summary>Sets the shim of EdmFunction.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.SchemaSetString">
            <summary>Sets the shim of EdmFunction.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.SetReadOnly">
            <summary>Sets the shim of EdmFunction.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.StoreFunctionNameAttributeGet">
            <summary>Sets the shim of EdmFunction.get_StoreFunctionNameAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.StoreFunctionNameAttributeSetString">
            <summary>Sets the shim of EdmFunction.set_StoreFunctionNameAttribute(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._BuildIdentityb__4FunctionParameter">
            <summary>Sets the shim of EdmFunction.&lt;BuildIdentity&gt;b__4(FunctionParameter param)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._BuildIdentityb__5FunctionParameter">
            <summary>Sets the shim of EdmFunction.&lt;BuildIdentity&gt;b__5(FunctionParameter param)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._BuildIdentityb__8TypeUsage">
            <summary>Sets the shim of EdmFunction.&lt;BuildIdentity&gt;b__8(TypeUsage param)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._BuildIdentityb__9TypeUsage">
            <summary>Sets the shim of EdmFunction.&lt;BuildIdentity&gt;b__9(TypeUsage param)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._ctorb__0FunctionParameter">
            <summary>Sets the shim of EdmFunction.&lt;.ctor&gt;b__0(FunctionParameter returnParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction._ctorb__1FunctionParameter">
            <summary>Sets the shim of EdmFunction.&lt;.ctor&gt;b__1(FunctionParameter p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.AddParameterFunctionParameter">
            <summary>Sets the shim of EdmFunction.AddParameter(FunctionParameter functionParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.AggregateAttributeGet">
            <summary>Sets the shim of EdmFunction.get_AggregateAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuiltInAttributeGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.CommandTextAttributeGet">
            <summary>Sets the shim of EdmFunction.get_CommandTextAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.EntitySetGet">
            <summary>Sets the shim of EdmFunction.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.EntitySetsGet">
            <summary>Sets the shim of EdmFunction.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.FullNameGet">
            <summary>Sets the shim of EdmFunction.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.FunctionNameGet">
            <summary>Sets the shim of EdmFunction.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.HasUserDefinedBodyGet">
            <summary>Sets the shim of EdmFunction.get_HasUserDefinedBody()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsComposableAttributeGet">
            <summary>Sets the shim of EdmFunction.get_IsComposableAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunction.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunction.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsModelDefinedFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsModelDefinedFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.NiladicFunctionAttributeGet">
            <summary>Sets the shim of EdmFunction.get_NiladicFunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ParameterTypeSemanticsAttributeGet">
            <summary>Sets the shim of EdmFunction.get_ParameterTypeSemanticsAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ParametersGet">
            <summary>Sets the shim of EdmFunction.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ReturnParameterGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ReturnParametersGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.SchemaGet">
            <summary>Sets the shim of EdmFunction.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.SchemaSetString">
            <summary>Sets the shim of EdmFunction.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmFunction.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.StoreFunctionNameAttributeGet">
            <summary>Sets the shim of EdmFunction.get_StoreFunctionNameAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.StoreFunctionNameAttributeSetString">
            <summary>Sets the shim of EdmFunction.set_StoreFunctionNameAttribute(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances._ctorb__0FunctionParameter">
            <summary>Sets the shim of EdmFunction.&lt;.ctor&gt;b__0(FunctionParameter returnParameter)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.CommandTextGet">
            <summary>Sets the shim of EdmFunctionPayload.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.CommandTextSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.Constructor">
            <summary>Sets the shim of EdmFunctionPayload.EdmFunctionPayload()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.EntitySetsGet">
            <summary>Sets the shim of EdmFunctionPayload.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.EntitySetsSetIListOfEntitySet">
            <summary>Sets the shim of EdmFunctionPayload.set_EntitySets(IList`1&lt;EntitySet&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsAggregateGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsAggregate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsAggregateSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsAggregate(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsBuiltInGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsBuiltIn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsBuiltInSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsBuiltIn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsCachedStoreFunctionSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsCachedStoreFunction(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsComposableGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsComposable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsComposableSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsComposable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsFromProviderManifestSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsFromProviderManifest(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsFunctionImportSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsFunctionImport(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsNiladicGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsNiladic()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.IsNiladicSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsNiladic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ParameterTypeSemanticsGet">
            <summary>Sets the shim of EdmFunctionPayload.get_ParameterTypeSemantics()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ParameterTypeSemanticsSetNullableOfParameterTypeSemantics">
            <summary>Sets the shim of EdmFunctionPayload.set_ParameterTypeSemantics(Nullable`1&lt;ParameterTypeSemantics&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ParametersGet">
            <summary>Sets the shim of EdmFunctionPayload.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ParametersSetIListOfFunctionParameter">
            <summary>Sets the shim of EdmFunctionPayload.set_Parameters(IList`1&lt;FunctionParameter&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ReturnParametersGet">
            <summary>Sets the shim of EdmFunctionPayload.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.ReturnParametersSetIListOfFunctionParameter">
            <summary>Sets the shim of EdmFunctionPayload.set_ReturnParameters(IList`1&lt;FunctionParameter&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.SchemaGet">
            <summary>Sets the shim of EdmFunctionPayload.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.SchemaSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.StoreFunctionNameGet">
            <summary>Sets the shim of EdmFunctionPayload.get_StoreFunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.StoreFunctionNameSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_StoreFunctionName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.CommandTextGet">
            <summary>Sets the shim of EdmFunctionPayload.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.CommandTextSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.EntitySetsGet">
            <summary>Sets the shim of EdmFunctionPayload.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.EntitySetsSetIListOfEntitySet">
            <summary>Sets the shim of EdmFunctionPayload.set_EntitySets(IList`1&lt;EntitySet&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsAggregateGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsAggregate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsAggregateSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsAggregate(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsBuiltInGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsBuiltIn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsBuiltInSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsBuiltIn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsCachedStoreFunctionSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsCachedStoreFunction(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsComposableGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsComposable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsComposableSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsComposable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsFromProviderManifestSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsFromProviderManifest(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsFunctionImportSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsFunctionImport(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsNiladicGet">
            <summary>Sets the shim of EdmFunctionPayload.get_IsNiladic()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.IsNiladicSetNullableOfBoolean">
            <summary>Sets the shim of EdmFunctionPayload.set_IsNiladic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ParameterTypeSemanticsGet">
            <summary>Sets the shim of EdmFunctionPayload.get_ParameterTypeSemantics()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ParameterTypeSemanticsSetNullableOfParameterTypeSemantics">
            <summary>Sets the shim of EdmFunctionPayload.set_ParameterTypeSemantics(Nullable`1&lt;ParameterTypeSemantics&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ParametersGet">
            <summary>Sets the shim of EdmFunctionPayload.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ParametersSetIListOfFunctionParameter">
            <summary>Sets the shim of EdmFunctionPayload.set_Parameters(IList`1&lt;FunctionParameter&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ReturnParametersGet">
            <summary>Sets the shim of EdmFunctionPayload.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.ReturnParametersSetIListOfFunctionParameter">
            <summary>Sets the shim of EdmFunctionPayload.set_ReturnParameters(IList`1&lt;FunctionParameter&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.SchemaGet">
            <summary>Sets the shim of EdmFunctionPayload.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.SchemaSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.StoreFunctionNameGet">
            <summary>Sets the shim of EdmFunctionPayload.get_StoreFunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmFunctionPayload.AllInstances.StoreFunctionNameSetString">
            <summary>Sets the shim of EdmFunctionPayload.set_StoreFunctionName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorEdmModel">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(EdmModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReader">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReaderIEnumerableOfStringBoolean">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths, Boolean skipInitialization)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReaderReadOnlyCollectionOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorStringArray">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.CreateIEnumerableOfXmlReaderReadOnlyCollectionOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of EdmItemCollection.Create(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.EdmVersionGet">
            <summary>Sets the shim of EdmItemCollection.get_EdmVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.EdmVersionSetDouble">
            <summary>Sets the shim of EdmItemCollection.set_EdmVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.GenerateFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GenerateFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of EdmItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.GetPrimitiveTypesDouble">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes(Double edmVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.Init">
            <summary>Sets the shim of EdmItemCollection.Init()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.InitIEnumerableOfXmlReaderIEnumerableOfStringBoolean">
            <summary>Sets the shim of EdmItemCollection.Init(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.IsSystemNamespaceDbProviderManifestString">
            <summary>Sets the shim of EdmItemCollection.IsSystemNamespace(DbProviderManifest manifest, String namespaceName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.LoadEdmPrimitiveTypesAndFunctions">
            <summary>Sets the shim of EdmItemCollection.LoadEdmPrimitiveTypesAndFunctions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection._GetPrimitiveTypesb__6PrimitiveType">
            <summary>Sets the shim of EdmItemCollection.&lt;GetPrimitiveTypes&gt;b__6(PrimitiveType type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection._LoadItemsb__2FunctionParameter">
            <summary>Sets the shim of EdmItemCollection.&lt;LoadItems&gt;b__2(FunctionParameter param)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection._LoadItemsb__3FunctionParameter">
            <summary>Sets the shim of EdmItemCollection.&lt;LoadItems&gt;b__3(FunctionParameter param)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.EdmVersionGet">
            <summary>Sets the shim of EdmItemCollection.get_EdmVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.EdmVersionSetDouble">
            <summary>Sets the shim of EdmItemCollection.set_EdmVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GenerateFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GenerateFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of EdmItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetPrimitiveTypesDouble">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes(Double edmVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.Init">
            <summary>Sets the shim of EdmItemCollection.Init()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.InitIEnumerableOfXmlReaderIEnumerableOfStringBoolean">
            <summary>Sets the shim of EdmItemCollection.Init(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.LoadEdmPrimitiveTypesAndFunctions">
            <summary>Sets the shim of EdmItemCollection.LoadEdmPrimitiveTypesAndFunctions()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.ChangeDeclaringTypeWithoutCollectionFixupStructuralType">
            <summary>Sets the shim of EdmMember.ChangeDeclaringTypeWithoutCollectionFixup(StructuralType newDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.Constructor">
            <summary>Sets the shim of EdmMember.EdmMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.ConstructorStringTypeUsage">
            <summary>Sets the shim of EdmMember.EdmMember(String name, TypeUsage memberTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.DeclaringTypeGet">
            <summary>Sets the shim of EdmMember.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.IdentityGet">
            <summary>Sets the shim of EdmMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EdmMember.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.IsPrimaryKeyColumnGet">
            <summary>Sets the shim of EdmMember.get_IsPrimaryKeyColumn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.IsStoreGeneratedComputedGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedComputed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.IsStoreGeneratedIdentityGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.NameGet">
            <summary>Sets the shim of EdmMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.NameSetString">
            <summary>Sets the shim of EdmMember.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.SetReadOnly">
            <summary>Sets the shim of EdmMember.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.ToString">
            <summary>Sets the shim of EdmMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.TypeUsageGet">
            <summary>Sets the shim of EdmMember.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.TypeUsageSetTypeUsage">
            <summary>Sets the shim of EdmMember.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember._set_Nameb__0EdmMember">
            <summary>Sets the shim of EdmMember.&lt;set_Name&gt;b__0(EdmMember c)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember._set_Nameb__1EdmMember">
            <summary>Sets the shim of EdmMember.&lt;set_Name&gt;b__1(EdmMember i)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.ChangeDeclaringTypeWithoutCollectionFixupStructuralType">
            <summary>Sets the shim of EdmMember.ChangeDeclaringTypeWithoutCollectionFixup(StructuralType newDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.DeclaringTypeGet">
            <summary>Sets the shim of EdmMember.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IdentityGet">
            <summary>Sets the shim of EdmMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EdmMember.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IsPrimaryKeyColumnGet">
            <summary>Sets the shim of EdmMember.get_IsPrimaryKeyColumn()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IsStoreGeneratedComputedGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedComputed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IsStoreGeneratedIdentityGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.NameGet">
            <summary>Sets the shim of EdmMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.NameSetString">
            <summary>Sets the shim of EdmMember.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmMember.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.ToString01">
            <summary>Sets the shim of EdmMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.TypeUsageGet">
            <summary>Sets the shim of EdmMember.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.TypeUsageSetTypeUsage">
            <summary>Sets the shim of EdmMember.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmMember.AllInstances._set_Nameb__0EdmMember">
            <summary>Sets the shim of EdmMember.&lt;set_Name&gt;b__0(EdmMember c)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmModel</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AddItemAssociationType">
            <summary>Sets the shim of EdmModel.AddItem(AssociationType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AddItemComplexType">
            <summary>Sets the shim of EdmModel.AddItem(ComplexType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AddItemEdmFunction">
            <summary>Sets the shim of EdmModel.AddItem(EdmFunction item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AddItemEntityType">
            <summary>Sets the shim of EdmModel.AddItem(EntityType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AddItemEnumType">
            <summary>Sets the shim of EdmModel.AddItem(EnumType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AssociationTypesGet">
            <summary>Sets the shim of EdmModel.get_AssociationTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmModel.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ComplexTypesGet">
            <summary>Sets the shim of EdmModel.get_ComplexTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ConstructorDataSpaceDouble">
            <summary>Sets the shim of EdmModel.EdmModel(DataSpace dataSpace, Double schemaVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ConstructorEntityContainerDouble">
            <summary>Sets the shim of EdmModel.EdmModel(EntityContainer entityContainer, Double version)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ContainerGet">
            <summary>Sets the shim of EdmModel.get_Container()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ContainersGet">
            <summary>Sets the shim of EdmModel.get_Containers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.CreateConceptualModelDouble">
            <summary>Sets the shim of EdmModel.CreateConceptualModel(Double schemaVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.CreateConceptualModelEntityContainerDouble">
            <summary>Sets the shim of EdmModel.CreateConceptualModel(EntityContainer entityContainer, Double schemaVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.CreateStoreModelDbProviderInfoDbProviderManifestDouble">
            <summary>Sets the shim of EdmModel.CreateStoreModel(DbProviderInfo providerInfo, DbProviderManifest providerManifest, Double schemaVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.CreateStoreModelEntityContainerDbProviderInfoDbProviderManifestDouble">
            <summary>Sets the shim of EdmModel.CreateStoreModel(EntityContainer entityContainer, DbProviderInfo providerInfo, DbProviderManifest providerManifest, Double schemaVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.DataSpaceGet">
            <summary>Sets the shim of EdmModel.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.EntityTypesGet">
            <summary>Sets the shim of EdmModel.get_EntityTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.EnumTypesGet">
            <summary>Sets the shim of EdmModel.get_EnumTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.FunctionsGet">
            <summary>Sets the shim of EdmModel.get_Functions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.GlobalItemsGet">
            <summary>Sets the shim of EdmModel.get_GlobalItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.IdentityGet">
            <summary>Sets the shim of EdmModel.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.NamespaceItemsGet">
            <summary>Sets the shim of EdmModel.get_NamespaceItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.NamespaceNamesGet">
            <summary>Sets the shim of EdmModel.get_NamespaceNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ProviderInfoGet">
            <summary>Sets the shim of EdmModel.get_ProviderInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ProviderInfoSetDbProviderInfo">
            <summary>Sets the shim of EdmModel.set_ProviderInfo(DbProviderInfo value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ProviderManifestGet">
            <summary>Sets the shim of EdmModel.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of EdmModel.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.RemoveItemAssociationType">
            <summary>Sets the shim of EdmModel.RemoveItem(AssociationType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.RemoveItemComplexType">
            <summary>Sets the shim of EdmModel.RemoveItem(ComplexType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.RemoveItemEdmFunction">
            <summary>Sets the shim of EdmModel.RemoveItem(EdmFunction item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.RemoveItemEntityType">
            <summary>Sets the shim of EdmModel.RemoveItem(EntityType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.RemoveItemEnumType">
            <summary>Sets the shim of EdmModel.RemoveItem(EnumType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.SchemaVersionGet">
            <summary>Sets the shim of EdmModel.get_SchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.SchemaVersionSetDouble">
            <summary>Sets the shim of EdmModel.set_SchemaVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.Validate">
            <summary>Sets the shim of EdmModel.Validate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.ValidateSpaceEdmType">
            <summary>Sets the shim of EdmModel.ValidateSpace(EdmType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel._get_NamespaceNamesb__0EdmType">
            <summary>Sets the shim of EdmModel.&lt;get_NamespaceNames&gt;b__0(EdmType t)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AddItemAssociationType">
            <summary>Sets the shim of EdmModel.AddItem(AssociationType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AddItemComplexType">
            <summary>Sets the shim of EdmModel.AddItem(ComplexType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AddItemEdmFunction">
            <summary>Sets the shim of EdmModel.AddItem(EdmFunction item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AddItemEntityType">
            <summary>Sets the shim of EdmModel.AddItem(EntityType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AddItemEnumType">
            <summary>Sets the shim of EdmModel.AddItem(EnumType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.AssociationTypesGet">
            <summary>Sets the shim of EdmModel.get_AssociationTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmModel.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ComplexTypesGet">
            <summary>Sets the shim of EdmModel.get_ComplexTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ContainerGet">
            <summary>Sets the shim of EdmModel.get_Container()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ContainersGet">
            <summary>Sets the shim of EdmModel.get_Containers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.DataSpaceGet">
            <summary>Sets the shim of EdmModel.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.EntityTypesGet">
            <summary>Sets the shim of EdmModel.get_EntityTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.EnumTypesGet">
            <summary>Sets the shim of EdmModel.get_EnumTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.FunctionsGet">
            <summary>Sets the shim of EdmModel.get_Functions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.GlobalItemsGet">
            <summary>Sets the shim of EdmModel.get_GlobalItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.IdentityGet">
            <summary>Sets the shim of EdmModel.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.NamespaceItemsGet">
            <summary>Sets the shim of EdmModel.get_NamespaceItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.NamespaceNamesGet">
            <summary>Sets the shim of EdmModel.get_NamespaceNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ProviderInfoGet">
            <summary>Sets the shim of EdmModel.get_ProviderInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ProviderInfoSetDbProviderInfo">
            <summary>Sets the shim of EdmModel.set_ProviderInfo(DbProviderInfo value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of EdmModel.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of EdmModel.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.RemoveItemAssociationType">
            <summary>Sets the shim of EdmModel.RemoveItem(AssociationType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.RemoveItemComplexType">
            <summary>Sets the shim of EdmModel.RemoveItem(ComplexType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.RemoveItemEdmFunction">
            <summary>Sets the shim of EdmModel.RemoveItem(EdmFunction item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.RemoveItemEntityType">
            <summary>Sets the shim of EdmModel.RemoveItem(EntityType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.RemoveItemEnumType">
            <summary>Sets the shim of EdmModel.RemoveItem(EnumType item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.SchemaVersionGet">
            <summary>Sets the shim of EdmModel.get_SchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.SchemaVersionSetDouble">
            <summary>Sets the shim of EdmModel.set_SchemaVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.Validate">
            <summary>Sets the shim of EdmModel.Validate()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmModel.AllInstances.ValidateSpaceEdmType">
            <summary>Sets the shim of EdmModel.ValidateSpace(EdmType item)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmProperty</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CollectionKindGet">
            <summary>Sets the shim of EdmProperty.get_CollectionKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CollectionKindSetCollectionKind">
            <summary>Sets the shim of EdmProperty.set_CollectionKind(CollectionKind value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ComplexTypeGet">
            <summary>Sets the shim of EdmProperty.get_ComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ConcurrencyModeGet">
            <summary>Sets the shim of EdmProperty.get_ConcurrencyMode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ConcurrencyModeSetConcurrencyMode">
            <summary>Sets the shim of EdmProperty.set_ConcurrencyMode(ConcurrencyMode value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ConstructorString">
            <summary>Sets the shim of EdmProperty.EdmProperty(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ConstructorStringTypeUsage">
            <summary>Sets the shim of EdmProperty.EdmProperty(String name, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ConstructorStringTypeUsagePropertyInfoType">
            <summary>Sets the shim of EdmProperty.EdmProperty(String name, TypeUsage typeUsage, PropertyInfo propertyInfo, Type entityDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CreateComplexStringComplexType">
            <summary>Sets the shim of EdmProperty.CreateComplex(String name, ComplexType complexType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CreateEnumStringEnumType">
            <summary>Sets the shim of EdmProperty.CreateEnum(String name, EnumType enumType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CreatePrimitiveStringPrimitiveType">
            <summary>Sets the shim of EdmProperty.CreatePrimitive(String name, PrimitiveType primitiveType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CreatePropertyStringEdmType">
            <summary>Sets the shim of EdmProperty.CreateProperty(String name, EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.CreateStringTypeUsage">
            <summary>Sets the shim of EdmProperty.Create(String name, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.DefaultValueGet">
            <summary>Sets the shim of EdmProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.EntityDeclaringTypeGet">
            <summary>Sets the shim of EdmProperty.get_EntityDeclaringType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.EnumTypeGet">
            <summary>Sets the shim of EdmProperty.get_EnumType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsCollectionTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsCollectionType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsComplexTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsEnumTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsEnumType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsFixedLengthConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsFixedLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsFixedLengthGet">
            <summary>Sets the shim of EdmProperty.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the shim of EdmProperty.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsKeyMemberGet">
            <summary>Sets the shim of EdmProperty.get_IsKeyMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsMaxLengthConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsMaxLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsMaxLengthGet">
            <summary>Sets the shim of EdmProperty.get_IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsMaxLengthSetBoolean">
            <summary>Sets the shim of EdmProperty.set_IsMaxLength(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsPrecisionConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsPrecisionConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsScaleConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsScaleConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsUnderlyingPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsUnderlyingPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsUnicodeConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsUnicodeConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsUnicodeGet">
            <summary>Sets the shim of EdmProperty.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the shim of EdmProperty.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.MaxLengthGet">
            <summary>Sets the shim of EdmProperty.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.MaxLengthSetNullableOfInt32">
            <summary>Sets the shim of EdmProperty.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.NullableGet">
            <summary>Sets the shim of EdmProperty.get_Nullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.NullableSetBoolean">
            <summary>Sets the shim of EdmProperty.set_Nullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.PrecisionGet">
            <summary>Sets the shim of EdmProperty.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.PrecisionSetNullableOfByte">
            <summary>Sets the shim of EdmProperty.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.PrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_PrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.PrimitiveTypeSetPrimitiveType">
            <summary>Sets the shim of EdmProperty.set_PrimitiveType(PrimitiveType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.PropertyInfoGet">
            <summary>Sets the shim of EdmProperty.get_PropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ScaleGet">
            <summary>Sets the shim of EdmProperty.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ScaleSetNullableOfByte">
            <summary>Sets the shim of EdmProperty.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.SetMetadataPropertiesIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EdmProperty.SetMetadataProperties(IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.StoreGeneratedPatternGet">
            <summary>Sets the shim of EdmProperty.get_StoreGeneratedPattern()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.StoreGeneratedPatternSetStoreGeneratedPattern">
            <summary>Sets the shim of EdmProperty.set_StoreGeneratedPattern(StoreGeneratedPattern value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.TypeNameGet">
            <summary>Sets the shim of EdmProperty.get_TypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.UnderlyingPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_UnderlyingPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ValueGetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueGetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ValueGetterSetFuncOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueGetter(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ValueSetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueSetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.ValueSetterSetActionOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueSetter(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.CollectionKindGet">
            <summary>Sets the shim of EdmProperty.get_CollectionKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.CollectionKindSetCollectionKind">
            <summary>Sets the shim of EdmProperty.set_CollectionKind(CollectionKind value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ComplexTypeGet">
            <summary>Sets the shim of EdmProperty.get_ComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ConcurrencyModeGet">
            <summary>Sets the shim of EdmProperty.get_ConcurrencyMode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ConcurrencyModeSetConcurrencyMode">
            <summary>Sets the shim of EdmProperty.set_ConcurrencyMode(ConcurrencyMode value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.DefaultValueGet">
            <summary>Sets the shim of EdmProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.EntityDeclaringTypeGet">
            <summary>Sets the shim of EdmProperty.get_EntityDeclaringType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.EnumTypeGet">
            <summary>Sets the shim of EdmProperty.get_EnumType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsCollectionTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsCollectionType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsComplexTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsEnumTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsEnumType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsFixedLengthConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsFixedLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsFixedLengthGet">
            <summary>Sets the shim of EdmProperty.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the shim of EdmProperty.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsKeyMemberGet">
            <summary>Sets the shim of EdmProperty.get_IsKeyMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsMaxLengthConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsMaxLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsMaxLengthGet">
            <summary>Sets the shim of EdmProperty.get_IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsMaxLengthSetBoolean">
            <summary>Sets the shim of EdmProperty.set_IsMaxLength(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsPrecisionConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsPrecisionConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsScaleConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsScaleConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsUnderlyingPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_IsUnderlyingPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsUnicodeConstantGet">
            <summary>Sets the shim of EdmProperty.get_IsUnicodeConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsUnicodeGet">
            <summary>Sets the shim of EdmProperty.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the shim of EdmProperty.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.MaxLengthGet">
            <summary>Sets the shim of EdmProperty.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.MaxLengthSetNullableOfInt32">
            <summary>Sets the shim of EdmProperty.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.NullableGet">
            <summary>Sets the shim of EdmProperty.get_Nullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.NullableSetBoolean">
            <summary>Sets the shim of EdmProperty.set_Nullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.PrecisionGet">
            <summary>Sets the shim of EdmProperty.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.PrecisionSetNullableOfByte">
            <summary>Sets the shim of EdmProperty.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.PrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_PrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.PrimitiveTypeSetPrimitiveType">
            <summary>Sets the shim of EdmProperty.set_PrimitiveType(PrimitiveType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.PropertyInfoGet">
            <summary>Sets the shim of EdmProperty.get_PropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ScaleGet">
            <summary>Sets the shim of EdmProperty.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ScaleSetNullableOfByte">
            <summary>Sets the shim of EdmProperty.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.SetMetadataPropertiesIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EdmProperty.SetMetadataProperties(IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.StoreGeneratedPatternGet">
            <summary>Sets the shim of EdmProperty.get_StoreGeneratedPattern()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.StoreGeneratedPatternSetStoreGeneratedPattern">
            <summary>Sets the shim of EdmProperty.set_StoreGeneratedPattern(StoreGeneratedPattern value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.TypeNameGet">
            <summary>Sets the shim of EdmProperty.get_TypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.UnderlyingPrimitiveTypeGet">
            <summary>Sets the shim of EdmProperty.get_UnderlyingPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueGetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueGetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueGetterSetFuncOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueGetter(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueSetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueSetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueSetterSetActionOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueSetter(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmSchemaError</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmSchemaError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ColumnGet">
            <summary>Sets the shim of EdmSchemaError.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityException">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityStringInt32Int32">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityStringInt32Int32Exception">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ErrorCodeGet">
            <summary>Sets the shim of EdmSchemaError.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.GetNameFromSchemaLocationString">
            <summary>Sets the shim of EdmSchemaError.GetNameFromSchemaLocation(String schemaLocation)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.InitializeInt32EdmSchemaErrorSeverityStringInt32Int32Exception">
            <summary>Sets the shim of EdmSchemaError.Initialize(Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.LineGet">
            <summary>Sets the shim of EdmSchemaError.get_Line()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.SchemaLocationGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaLocation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.SchemaNameGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.SeverityGet">
            <summary>Sets the shim of EdmSchemaError.get_Severity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.SeveritySetEdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.set_Severity(EdmSchemaErrorSeverity value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.StackTraceGet">
            <summary>Sets the shim of EdmSchemaError.get_StackTrace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.ToString">
            <summary>Sets the shim of EdmSchemaError.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ColumnGet">
            <summary>Sets the shim of EdmSchemaError.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of EdmSchemaError.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.InitializeInt32EdmSchemaErrorSeverityStringInt32Int32Exception">
            <summary>Sets the shim of EdmSchemaError.Initialize(Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.LineGet">
            <summary>Sets the shim of EdmSchemaError.get_Line()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SchemaLocationGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaLocation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SchemaNameGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SeverityGet">
            <summary>Sets the shim of EdmSchemaError.get_Severity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SeveritySetEdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.set_Severity(EdmSchemaErrorSeverity value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.StackTraceGet">
            <summary>Sets the shim of EdmSchemaError.get_StackTrace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ToString01">
            <summary>Sets the shim of EdmSchemaError.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EdmType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.SafeTraverseHierarchyOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of EdmType.SafeTraverseHierarchy(!!0 startFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AbstractGet">
            <summary>Sets the shim of EdmType.get_Abstract()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AbstractSetBoolean">
            <summary>Sets the shim of EdmType.set_Abstract(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.BaseTypeGet">
            <summary>Sets the shim of EdmType.get_BaseType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.BaseTypeSetEdmType">
            <summary>Sets the shim of EdmType.set_BaseType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmType.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.CacheIdentityGet">
            <summary>Sets the shim of EdmType.get_CacheIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.CacheIdentitySetString">
            <summary>Sets the shim of EdmType.set_CacheIdentity(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.ClrTypeGet">
            <summary>Sets the shim of EdmType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.Constructor">
            <summary>Sets the shim of EdmType.EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EdmType.EdmType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.CreateEdmTypeIdentityStringString">
            <summary>Sets the shim of EdmType.CreateEdmTypeIdentity(String namespaceName, String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.FullNameGet">
            <summary>Sets the shim of EdmType.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of EdmType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.GetCollectionType">
            <summary>Sets the shim of EdmType.GetCollectionType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.IdentityGet">
            <summary>Sets the shim of EdmType.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EdmType.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.InitializeEdmTypeStringStringDataSpaceBooleanEdmType">
            <summary>Sets the shim of EdmType.Initialize(EdmType type, String name, String namespaceName, DataSpace dataSpace, Boolean isAbstract, EdmType baseType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.IsAssignableFromEdmType">
            <summary>Sets the shim of EdmType.IsAssignableFrom(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.IsBaseTypeOfEdmType">
            <summary>Sets the shim of EdmType.IsBaseTypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.IsSubtypeOfEdmType">
            <summary>Sets the shim of EdmType.IsSubtypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.NameGet">
            <summary>Sets the shim of EdmType.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.NameSetString">
            <summary>Sets the shim of EdmType.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.NamespaceNameGet">
            <summary>Sets the shim of EdmType.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.NamespaceNameSetString">
            <summary>Sets the shim of EdmType.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.SetReadOnly">
            <summary>Sets the shim of EdmType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.ToString">
            <summary>Sets the shim of EdmType.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.AbstractGet">
            <summary>Sets the shim of EdmType.get_Abstract()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.AbstractSetBoolean">
            <summary>Sets the shim of EdmType.set_Abstract(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BaseTypeGet">
            <summary>Sets the shim of EdmType.get_BaseType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BaseTypeSetEdmType">
            <summary>Sets the shim of EdmType.set_BaseType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmType.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.CacheIdentityGet">
            <summary>Sets the shim of EdmType.get_CacheIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.CacheIdentitySetString">
            <summary>Sets the shim of EdmType.set_CacheIdentity(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of EdmType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.FullNameGet">
            <summary>Sets the shim of EdmType.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of EdmType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.GetCollectionType">
            <summary>Sets the shim of EdmType.GetCollectionType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IdentityGet">
            <summary>Sets the shim of EdmType.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EdmType.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsAssignableFromEdmType">
            <summary>Sets the shim of EdmType.IsAssignableFrom(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsBaseTypeOfEdmType">
            <summary>Sets the shim of EdmType.IsBaseTypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsSubtypeOfEdmType">
            <summary>Sets the shim of EdmType.IsSubtypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NameGet">
            <summary>Sets the shim of EdmType.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NameSetString">
            <summary>Sets the shim of EdmType.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of EdmType.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of EdmType.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEdmType.AllInstances.ToString01">
            <summary>Sets the shim of EdmType.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EntityContainer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AddEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.AddEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AddFunctionImportEdmFunction">
            <summary>Sets the shim of EntityContainer.AddFunctionImport(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AssociationSetsGet">
            <summary>Sets the shim of EntityContainer.get_AssociationSets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.BaseEntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_BaseEntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityContainer.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.Constructor">
            <summary>Sets the shim of EntityContainer.EntityContainer()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.ConstructorStringDataSpace">
            <summary>Sets the shim of EntityContainer.EntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.CreateStringDataSpaceIEnumerableOfEntitySetBaseIEnumerableOfEdmFunctionIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EntityContainer.Create(String name, DataSpace dataSpace, IEnumerable`1&lt;EntitySetBase&gt; entitySets, IEnumerable`1&lt;EdmFunction&gt; functionImports, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.EntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.FunctionImportsGet">
            <summary>Sets the shim of EntityContainer.get_FunctionImports()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.GetEntitySetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetEntitySetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.GetRelationshipSetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetRelationshipSetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.IdentityGet">
            <summary>Sets the shim of EntityContainer.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.NameGet">
            <summary>Sets the shim of EntityContainer.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.NameSetString">
            <summary>Sets the shim of EntityContainer.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.NotifyItemIdentityChanged">
            <summary>Sets the shim of EntityContainer.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.RemoveEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.RemoveEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.SetReadOnly">
            <summary>Sets the shim of EntityContainer.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.ToString">
            <summary>Sets the shim of EntityContainer.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.TryGetEntitySetByNameStringBooleanEntitySetOut">
            <summary>Sets the shim of EntityContainer.TryGetEntitySetByName(String name, Boolean ignoreCase, EntitySet&amp; entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.TryGetRelationshipSetByNameStringBooleanRelationshipSetOut">
            <summary>Sets the shim of EntityContainer.TryGetRelationshipSetByName(String name, Boolean ignoreCase, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.AddEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.AddEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.AddFunctionImportEdmFunction">
            <summary>Sets the shim of EntityContainer.AddFunctionImport(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.AssociationSetsGet">
            <summary>Sets the shim of EntityContainer.get_AssociationSets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.BaseEntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_BaseEntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityContainer.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.EntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.FunctionImportsGet">
            <summary>Sets the shim of EntityContainer.get_FunctionImports()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.GetEntitySetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetEntitySetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.GetRelationshipSetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetRelationshipSetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.IdentityGet">
            <summary>Sets the shim of EntityContainer.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.NameGet">
            <summary>Sets the shim of EntityContainer.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.NameSetString">
            <summary>Sets the shim of EntityContainer.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.NotifyItemIdentityChanged">
            <summary>Sets the shim of EntityContainer.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.RemoveEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.RemoveEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntityContainer.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.ToString01">
            <summary>Sets the shim of EntityContainer.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.TryGetEntitySetByNameStringBooleanEntitySetOut">
            <summary>Sets the shim of EntityContainer.TryGetEntitySetByName(String name, Boolean ignoreCase, EntitySet&amp; entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.TryGetRelationshipSetByNameStringBooleanRelationshipSetOut">
            <summary>Sets the shim of EntityContainer.TryGetRelationshipSetByName(String name, Boolean ignoreCase, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EntitySet</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.Constructor">
            <summary>Sets the shim of EntitySet.EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.ConstructorStringStringStringStringEntityType">
            <summary>Sets the shim of EntitySet.EntitySet(String name, String schema, String table, String definingQuery, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.CreateStringStringStringStringEntityTypeIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EntitySet.Create(String name, String schema, String table, String definingQuery, EntityType entityType, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.ElementTypeGet">
            <summary>Sets the shim of EntitySet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.ForeignKeyDependentsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyDependents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.ForeignKeyPrincipalsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyPrincipals()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.HasForeignKeyRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasForeignKeyRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.HasIndependentRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasIndependentRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.InitializeForeignKeyLists">
            <summary>Sets the shim of EntitySet.InitializeForeignKeyLists()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of EntitySet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ForeignKeyDependentsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyDependents()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ForeignKeyPrincipalsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyPrincipals()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.HasForeignKeyRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasForeignKeyRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.HasIndependentRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasIndependentRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.InitializeForeignKeyLists">
            <summary>Sets the shim of EntitySet.InitializeForeignKeyLists()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EntitySetBase</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySetBase.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.ChangeEntityContainerWithoutCollectionFixupEntityContainer">
            <summary>Sets the shim of EntitySetBase.ChangeEntityContainerWithoutCollectionFixup(EntityContainer newEntityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.Constructor">
            <summary>Sets the shim of EntitySetBase.EntitySetBase()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.ConstructorStringStringStringStringEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.EntitySetBase(String name, String schema, String table, String definingQuery, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.DefiningQueryGet">
            <summary>Sets the shim of EntitySetBase.get_DefiningQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.DefiningQuerySetString">
            <summary>Sets the shim of EntitySetBase.set_DefiningQuery(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.ElementTypeGet">
            <summary>Sets the shim of EntitySetBase.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.ElementTypeSetEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.set_ElementType(EntityTypeBase value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.EntityContainerGet">
            <summary>Sets the shim of EntitySetBase.get_EntityContainer()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.IdentityGet">
            <summary>Sets the shim of EntitySetBase.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EntitySetBase.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.NameGet">
            <summary>Sets the shim of EntitySetBase.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.NameSetString">
            <summary>Sets the shim of EntitySetBase.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.SchemaGet">
            <summary>Sets the shim of EntitySetBase.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.SchemaSetString">
            <summary>Sets the shim of EntitySetBase.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.SetReadOnly">
            <summary>Sets the shim of EntitySetBase.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.TableGet">
            <summary>Sets the shim of EntitySetBase.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.TableSetString">
            <summary>Sets the shim of EntitySetBase.set_Table(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.ToString">
            <summary>Sets the shim of EntitySetBase.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySetBase.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ChangeEntityContainerWithoutCollectionFixupEntityContainer">
            <summary>Sets the shim of EntitySetBase.ChangeEntityContainerWithoutCollectionFixup(EntityContainer newEntityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.DefiningQueryGet">
            <summary>Sets the shim of EntitySetBase.get_DefiningQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.DefiningQuerySetString">
            <summary>Sets the shim of EntitySetBase.set_DefiningQuery(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ElementTypeGet">
            <summary>Sets the shim of EntitySetBase.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ElementTypeSetEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.set_ElementType(EntityTypeBase value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.EntityContainerGet">
            <summary>Sets the shim of EntitySetBase.get_EntityContainer()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.IdentityGet">
            <summary>Sets the shim of EntitySetBase.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of EntitySetBase.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.NameGet">
            <summary>Sets the shim of EntitySetBase.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.NameSetString">
            <summary>Sets the shim of EntitySetBase.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.SchemaGet">
            <summary>Sets the shim of EntitySetBase.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.SchemaSetString">
            <summary>Sets the shim of EntitySetBase.set_Schema(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntitySetBase.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.TableGet">
            <summary>Sets the shim of EntitySetBase.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.TableSetString">
            <summary>Sets the shim of EntitySetBase.set_Table(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ToString01">
            <summary>Sets the shim of EntitySetBase.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EntityType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AddNavigationPropertyNavigationProperty">
            <summary>Sets the shim of EntityType.AddNavigationProperty(NavigationProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EntityType.EntityType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.ConstructorStringStringDataSpaceIEnumerableOfStringIEnumerableOfEdmMember">
            <summary>Sets the shim of EntityType.EntityType(String name, String namespaceName, DataSpace dataSpace, IEnumerable`1&lt;String&gt; keyMemberNames, IEnumerable`1&lt;EdmMember&gt; members)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.CreateStringStringDataSpaceIEnumerableOfStringIEnumerableOfEdmMemberIEnumerableOfMetadataProperty">
            <summary>Sets the shim of EntityType.Create(String name, String namespaceName, DataSpace dataSpace, IEnumerable`1&lt;String&gt; keyMemberNames, IEnumerable`1&lt;EdmMember&gt; members, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.DeclaredMembersGet">
            <summary>Sets the shim of EntityType.get_DeclaredMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.DeclaredNavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_DeclaredNavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.DeclaredPropertiesGet">
            <summary>Sets the shim of EntityType.get_DeclaredProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.GetKeyRowType">
            <summary>Sets the shim of EntityType.GetKeyRowType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.GetReferenceType">
            <summary>Sets the shim of EntityType.GetReferenceType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.NavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_NavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.PropertiesGet">
            <summary>Sets the shim of EntityType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.TryGetNavigationPropertyStringStringStringNavigationPropertyOut">
            <summary>Sets the shim of EntityType.TryGetNavigationProperty(String relationshipType, String fromName, String toName, NavigationProperty&amp; navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of EntityType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType._GetKeyRowTypeb__0EdmMember">
            <summary>Sets the shim of EntityType.&lt;GetKeyRowType&gt;b__0(EdmMember keyMember)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.AddNavigationPropertyNavigationProperty">
            <summary>Sets the shim of EntityType.AddNavigationProperty(NavigationProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.DeclaredMembersGet">
            <summary>Sets the shim of EntityType.get_DeclaredMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.DeclaredNavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_DeclaredNavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.DeclaredPropertiesGet">
            <summary>Sets the shim of EntityType.get_DeclaredProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.GetKeyRowType">
            <summary>Sets the shim of EntityType.GetKeyRowType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.GetReferenceType">
            <summary>Sets the shim of EntityType.GetReferenceType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.NavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_NavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.PropertiesGet">
            <summary>Sets the shim of EntityType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.TryGetNavigationPropertyStringStringStringNavigationPropertyOut">
            <summary>Sets the shim of EntityType.TryGetNavigationProperty(String relationshipType, String fromName, String toName, NavigationProperty&amp; navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of EntityType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EntityTypeBase</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityTypeBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AddKeyMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.AddKeyMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.CheckAndAddKeyMembersIEnumerableOfString">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddKeyMembers(IEnumerable`1&lt;String&gt; keyMembers)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.CheckAndAddMembersIEnumerableOfEdmMemberEntityType">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddMembers(IEnumerable`1&lt;EdmMember&gt; members, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EntityTypeBase.EntityTypeBase(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.KeyMemberNamesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMemberNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.KeyMembersGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.KeyPropertiesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.NotifyItemIdentityChanged">
            <summary>Sets the shim of EntityTypeBase.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.RemoveMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.RemoveMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.SetReadOnly">
            <summary>Sets the shim of EntityTypeBase.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.AddKeyMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.AddKeyMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.CheckAndAddKeyMembersIEnumerableOfString">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddKeyMembers(IEnumerable`1&lt;String&gt; keyMembers)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.KeyMemberNamesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMemberNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.KeyMembersGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.KeyPropertiesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.NotifyItemIdentityChanged">
            <summary>Sets the shim of EntityTypeBase.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.RemoveMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.RemoveMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntityTypeBase.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EnumMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.#ctor(System.Data.Entity.Core.Metadata.Edm.EnumMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.ConstructorStringObject">
            <summary>Sets the shim of EnumMember.EnumMember(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.IdentityGet">
            <summary>Sets the shim of EnumMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.NameGet">
            <summary>Sets the shim of EnumMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.ToString">
            <summary>Sets the shim of EnumMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.ValueGet">
            <summary>Sets the shim of EnumMember.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.IdentityGet">
            <summary>Sets the shim of EnumMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.NameGet">
            <summary>Sets the shim of EnumMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.ToString01">
            <summary>Sets the shim of EnumMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.ValueGet">
            <summary>Sets the shim of EnumMember.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.EnumType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.#ctor(System.Data.Entity.Core.Metadata.Edm.EnumType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AddMemberEnumMember">
            <summary>Sets the shim of EnumType.AddMember(EnumMember enumMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.Constructor">
            <summary>Sets the shim of EnumType.EnumType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.ConstructorStringStringPrimitiveTypeBooleanDataSpace">
            <summary>Sets the shim of EnumType.EnumType(String name, String namespaceName, PrimitiveType underlyingType, Boolean isFlags, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.ConstructorType">
            <summary>Sets the shim of EnumType.EnumType(Type clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.IsFlagsGet">
            <summary>Sets the shim of EnumType.get_IsFlags()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.IsFlagsSetBoolean">
            <summary>Sets the shim of EnumType.set_IsFlags(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.MembersGet">
            <summary>Sets the shim of EnumType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.SetReadOnly">
            <summary>Sets the shim of EnumType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.UnderlyingTypeGet">
            <summary>Sets the shim of EnumType.get_UnderlyingType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.UnderlyingTypeSetPrimitiveType">
            <summary>Sets the shim of EnumType.set_UnderlyingType(PrimitiveType value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.AddMemberEnumMember">
            <summary>Sets the shim of EnumType.AddMember(EnumMember enumMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.IsFlagsGet">
            <summary>Sets the shim of EnumType.get_IsFlags()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.IsFlagsSetBoolean">
            <summary>Sets the shim of EnumType.set_IsFlags(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.MembersGet">
            <summary>Sets the shim of EnumType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.SetReadOnly">
            <summary>Sets the shim of EnumType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.UnderlyingTypeGet">
            <summary>Sets the shim of EnumType.get_UnderlyingType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimEnumType.AllInstances.UnderlyingTypeSetPrimitiveType">
            <summary>Sets the shim of EnumType.set_UnderlyingType(PrimitiveType value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.Facet</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.#ctor(System.Data.Entity.Core.Metadata.Edm.Facet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.BuiltInTypeKindGet">
            <summary>Sets the shim of Facet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.Constructor">
            <summary>Sets the shim of Facet.Facet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.ConstructorFacetDescriptionObject">
            <summary>Sets the shim of Facet.Facet(FacetDescription facetDescription, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.CreateFacetDescriptionObject">
            <summary>Sets the shim of Facet.Create(FacetDescription facetDescription, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.CreateFacetDescriptionObjectBoolean">
            <summary>Sets the shim of Facet.Create(FacetDescription facetDescription, Object value, Boolean bypassKnownValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.DescriptionGet">
            <summary>Sets the shim of Facet.get_Description()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.FacetTypeGet">
            <summary>Sets the shim of Facet.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.IdentityGet">
            <summary>Sets the shim of Facet.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.IsUnboundedGet">
            <summary>Sets the shim of Facet.get_IsUnbounded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.NameGet">
            <summary>Sets the shim of Facet.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.ToString">
            <summary>Sets the shim of Facet.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.ValueGet">
            <summary>Sets the shim of Facet.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of Facet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.DescriptionGet">
            <summary>Sets the shim of Facet.get_Description()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.FacetTypeGet">
            <summary>Sets the shim of Facet.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.IdentityGet">
            <summary>Sets the shim of Facet.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.IsUnboundedGet">
            <summary>Sets the shim of Facet.get_IsUnbounded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.NameGet">
            <summary>Sets the shim of Facet.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.ToString01">
            <summary>Sets the shim of Facet.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacet.AllInstances.ValueGet">
            <summary>Sets the shim of Facet.get_Value()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.FacetDescription</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.#ctor(System.Data.Entity.Core.Metadata.Edm.FacetDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.Constructor">
            <summary>Sets the shim of FacetDescription.FacetDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.ConstructorStringEdmTypeNullableOfInt32NullableOfInt32Object">
            <summary>Sets the shim of FacetDescription.FacetDescription(String facetName, EdmType facetType, Nullable`1&lt;Int32&gt; minValue, Nullable`1&lt;Int32&gt; maxValue, Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.ConstructorStringEdmTypeNullableOfInt32NullableOfInt32ObjectBooleanString">
            <summary>Sets the shim of FacetDescription.FacetDescription(String facetName, EdmType facetType, Nullable`1&lt;Int32&gt; minValue, Nullable`1&lt;Int32&gt; maxValue, Object defaultValue, Boolean isConstant, String declaringTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.DefaultValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValueFacet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.DefaultValueGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.FacetNameGet">
            <summary>Sets the shim of FacetDescription.get_FacetName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.FacetTypeGet">
            <summary>Sets the shim of FacetDescription.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.GetBooleanFacetBoolean">
            <summary>Sets the shim of FacetDescription.GetBooleanFacet(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.IsConstantGet">
            <summary>Sets the shim of FacetDescription.get_IsConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.IsNumericTypeEdmType">
            <summary>Sets the shim of FacetDescription.IsNumericType(EdmType facetType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.IsRequiredGet">
            <summary>Sets the shim of FacetDescription.get_IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.MaxValueGet">
            <summary>Sets the shim of FacetDescription.get_MaxValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.MinValueGet">
            <summary>Sets the shim of FacetDescription.get_MinValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.NullValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_NullValueFacet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.StaticConstructor">
            <summary>Sets the shim of FacetDescription.FacetDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.ToString">
            <summary>Sets the shim of FacetDescription.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.UpdateMinMaxValueForConstantStringEdmTypeNullableOfInt32RefNullableOfInt32RefObject">
            <summary>Sets the shim of FacetDescription.UpdateMinMaxValueForConstant(String facetName, EdmType facetType, Nullable`1&lt;Int32&gt;&amp; minValue, Nullable`1&lt;Int32&gt;&amp; maxValue, Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.ValidateString">
            <summary>Sets the shim of FacetDescription.Validate(String declaringTypeName)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.DefaultValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValueFacet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.DefaultValueGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.FacetNameGet">
            <summary>Sets the shim of FacetDescription.get_FacetName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.FacetTypeGet">
            <summary>Sets the shim of FacetDescription.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.GetBooleanFacetBoolean">
            <summary>Sets the shim of FacetDescription.GetBooleanFacet(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.IsConstantGet">
            <summary>Sets the shim of FacetDescription.get_IsConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.IsRequiredGet">
            <summary>Sets the shim of FacetDescription.get_IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.MaxValueGet">
            <summary>Sets the shim of FacetDescription.get_MaxValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.MinValueGet">
            <summary>Sets the shim of FacetDescription.get_MinValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.NullValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_NullValueFacet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.ToString01">
            <summary>Sets the shim of FacetDescription.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.ValidateString">
            <summary>Sets the shim of FacetDescription.Validate(String declaringTypeName)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.FunctionParameter</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.#ctor(System.Data.Entity.Core.Metadata.Edm.FunctionParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.BuiltInTypeKindGet">
            <summary>Sets the shim of FunctionParameter.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.Constructor">
            <summary>Sets the shim of FunctionParameter.FunctionParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.ConstructorStringTypeUsageParameterMode">
            <summary>Sets the shim of FunctionParameter.FunctionParameter(String name, TypeUsage typeUsage, ParameterMode parameterMode)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.CreateStringEdmTypeParameterMode">
            <summary>Sets the shim of FunctionParameter.Create(String name, EdmType edmType, ParameterMode parameterMode)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.DeclaringFunctionGet">
            <summary>Sets the shim of FunctionParameter.get_DeclaringFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IdentityGet">
            <summary>Sets the shim of FunctionParameter.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of FunctionParameter.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IsMaxLengthConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsMaxLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IsMaxLengthGet">
            <summary>Sets the shim of FunctionParameter.get_IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IsPrecisionConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsPrecisionConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.IsScaleConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsScaleConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.MaxLengthGet">
            <summary>Sets the shim of FunctionParameter.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.ModeGet">
            <summary>Sets the shim of FunctionParameter.get_Mode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.NameGet">
            <summary>Sets the shim of FunctionParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.NameSetString">
            <summary>Sets the shim of FunctionParameter.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.PrecisionGet">
            <summary>Sets the shim of FunctionParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.ScaleGet">
            <summary>Sets the shim of FunctionParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.SetNameString">
            <summary>Sets the shim of FunctionParameter.SetName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.SetReadOnly">
            <summary>Sets the shim of FunctionParameter.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.StaticConstructor">
            <summary>Sets the shim of FunctionParameter.FunctionParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.ToString">
            <summary>Sets the shim of FunctionParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.TypeNameGet">
            <summary>Sets the shim of FunctionParameter.get_TypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.TypeUsageGet">
            <summary>Sets the shim of FunctionParameter.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of FunctionParameter.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.DeclaringFunctionGet">
            <summary>Sets the shim of FunctionParameter.get_DeclaringFunction()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IdentityGet">
            <summary>Sets the shim of FunctionParameter.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IdentitySystemDataEntityCoreMetadataEdmINamedDataModelItemget">
            <summary>Sets the shim of FunctionParameter.System.Data.Entity.Core.Metadata.Edm.INamedDataModelItem.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IsMaxLengthConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsMaxLengthConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IsMaxLengthGet">
            <summary>Sets the shim of FunctionParameter.get_IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IsPrecisionConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsPrecisionConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IsScaleConstantGet">
            <summary>Sets the shim of FunctionParameter.get_IsScaleConstant()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.MaxLengthGet">
            <summary>Sets the shim of FunctionParameter.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.ModeGet">
            <summary>Sets the shim of FunctionParameter.get_Mode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.NameGet">
            <summary>Sets the shim of FunctionParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.NameSetString">
            <summary>Sets the shim of FunctionParameter.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.PrecisionGet">
            <summary>Sets the shim of FunctionParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.ScaleGet">
            <summary>Sets the shim of FunctionParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.SetNameString">
            <summary>Sets the shim of FunctionParameter.SetName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.SetReadOnly">
            <summary>Sets the shim of FunctionParameter.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.ToString01">
            <summary>Sets the shim of FunctionParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.TypeNameGet">
            <summary>Sets the shim of FunctionParameter.get_TypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.TypeUsageGet">
            <summary>Sets the shim of FunctionParameter.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.GlobalItem</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.#ctor(System.Data.Entity.Core.Metadata.Edm.GlobalItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.Constructor">
            <summary>Sets the shim of GlobalItem.GlobalItem()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.DataSpaceGet">
            <summary>Sets the shim of GlobalItem.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.DataSpaceSetDataSpace">
            <summary>Sets the shim of GlobalItem.set_DataSpace(DataSpace value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances.DataSpaceGet">
            <summary>Sets the shim of GlobalItem.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances.DataSpaceSetDataSpace">
            <summary>Sets the shim of GlobalItem.set_DataSpace(DataSpace value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.ItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GenericGetItemsOf1ItemCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ItemCollection.GenericGetItems(ItemCollection collection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetItemOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetItemOf1StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetItemOf1StringBooleanM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Boolean,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, Boolean ignoreCase, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetItemOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AddInternalGlobalItem">
            <summary>Sets the shim of ItemCollection.AddInternal(GlobalItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AtomicAddRangeListOfGlobalItem">
            <summary>Sets the shim of ItemCollection.AtomicAddRange(List`1&lt;GlobalItem&gt; items)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.Constructor">
            <summary>Sets the shim of ItemCollection.ItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.ConstructorDataSpace">
            <summary>Sets the shim of ItemCollection.ItemCollection(DataSpace dataspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.DataSpaceGet">
            <summary>Sets the shim of ItemCollection.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.FunctionLookUpTableGet">
            <summary>Sets the shim of ItemCollection.get_FunctionLookUpTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetCaseSensitiveFunctionsReadOnlyCollectionOfEdmFunctionString">
            <summary>Sets the shim of ItemCollection.GetCaseSensitiveFunctions(ReadOnlyCollection`1&lt;EdmFunction&gt; functionOverloads, String functionName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetEntityContainerString">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetEntityContainerStringBoolean">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsDictionaryOfStringReadOnlyCollectionOfEdmFunctionStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(Dictionary`2&lt;String,ReadOnlyCollection`1&lt;EdmFunction&gt;&gt; functionCollection, String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsString">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetTypeStringString">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.GetTypeStringStringBoolean">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.InternalGetItemsType">
            <summary>Sets the shim of ItemCollection.InternalGetItems(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.MetadataEqualsItemCollection">
            <summary>Sets the shim of ItemCollection.MetadataEquals(ItemCollection other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.PopulateFunctionLookUpTableItemCollection">
            <summary>Sets the shim of ItemCollection.PopulateFunctionLookUpTable(ItemCollection itemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetEntityContainerStringBooleanEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, Boolean ignoreCase, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetEntityContainerStringEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetFunctionStringTypeUsageArrayBooleanEdmFunctionOut">
            <summary>Sets the shim of ItemCollection.TryGetFunction(String functionName, TypeUsage[] parameterTypes, Boolean ignoreCase, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetTypeStringStringBooleanEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, Boolean ignoreCase, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.TryGetTypeStringStringEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.String,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemOf1StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.String,System.Boolean,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetItemOf1StringBooleanM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.String,System.Boolean,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, Boolean ignoreCase, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetItemOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.ItemCollection,System.String,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.AddInternalGlobalItem">
            <summary>Sets the shim of ItemCollection.AddInternal(GlobalItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.AtomicAddRangeListOfGlobalItem">
            <summary>Sets the shim of ItemCollection.AtomicAddRange(List`1&lt;GlobalItem&gt; items)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.DataSpaceGet">
            <summary>Sets the shim of ItemCollection.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.FunctionLookUpTableGet">
            <summary>Sets the shim of ItemCollection.get_FunctionLookUpTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetEntityContainerString">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetEntityContainerStringBoolean">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetFunctionsString">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetFunctionsStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetTypeStringString">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetTypeStringStringBoolean">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.InternalGetItemsType">
            <summary>Sets the shim of ItemCollection.InternalGetItems(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.MetadataEqualsItemCollection">
            <summary>Sets the shim of ItemCollection.MetadataEquals(ItemCollection other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetEntityContainerStringBooleanEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, Boolean ignoreCase, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetEntityContainerStringEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetFunctionStringTypeUsageArrayBooleanEdmFunctionOut">
            <summary>Sets the shim of ItemCollection.TryGetFunction(String functionName, TypeUsage[] parameterTypes, Boolean ignoreCase, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetTypeStringStringBooleanEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, Boolean ignoreCase, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetTypeStringStringEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.MetadataItem</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AddAnnotationStringObject">
            <summary>Sets the shim of MetadataItem.AddAnnotation(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AddBuiltInTypePropertiesBuiltInTypeKindEdmPropertyArray">
            <summary>Sets the shim of MetadataItem.AddBuiltInTypeProperties(BuiltInTypeKind builtInTypeKind, EdmProperty[] properties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AddMetadataPropertiesListOfMetadataProperty">
            <summary>Sets the shim of MetadataItem.AddMetadataProperties(List`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AnnotationsGet">
            <summary>Sets the shim of MetadataItem.get_Annotations()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.BuildIdentityStringBuilder">
            <summary>Sets the shim of MetadataItem.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.CollectionKindFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_CollectionKindFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.Constructor">
            <summary>Sets the shim of MetadataItem.MetadataItem()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.DefaultValueFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_DefaultValueFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.DocumentationGet">
            <summary>Sets the shim of MetadataItem.get_Documentation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.DocumentationSetDocumentation">
            <summary>Sets the shim of MetadataItem.set_Documentation(Documentation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.EdmEqualsMetadataItem">
            <summary>Sets the shim of MetadataItem.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.GetBuiltInTypeBuiltInTypeKind">
            <summary>Sets the shim of MetadataItem.GetBuiltInType(BuiltInTypeKind builtInTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.GetDataSpace">
            <summary>Sets the shim of MetadataItem.GetDataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.GetGeneralFacetDescriptions">
            <summary>Sets the shim of MetadataItem.GetGeneralFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.GetParameterMode">
            <summary>Sets the shim of MetadataItem.GetParameterMode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.InitializeBuiltInTypesComplexTypeStringBooleanComplexType">
            <summary>Sets the shim of MetadataItem.InitializeBuiltInTypes(ComplexType builtInType, String name, Boolean isAbstract, ComplexType baseType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.InitializeEnumTypeBuiltInTypeKindStringStringArray">
            <summary>Sets the shim of MetadataItem.InitializeEnumType(BuiltInTypeKind builtInTypeKind, String name, String[] enumMemberNames)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.IsReadOnlyGet">
            <summary>Sets the shim of MetadataItem.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.MetadataPropertiesGet">
            <summary>Sets the shim of MetadataItem.get_MetadataProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.NullableFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_NullableFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.RemoveAnnotationString">
            <summary>Sets the shim of MetadataItem.RemoveAnnotation(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.SetDataSpaceDataSpace">
            <summary>Sets the shim of MetadataItem.SetDataSpace(DataSpace space)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.SetParameterModeParameterMode">
            <summary>Sets the shim of MetadataItem.SetParameterMode(ParameterMode mode)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.SetReadOnly">
            <summary>Sets the shim of MetadataItem.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.StaticConstructor">
            <summary>Sets the shim of MetadataItem.MetadataItem()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.AddAnnotationStringObject">
            <summary>Sets the shim of MetadataItem.AddAnnotation(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.AddMetadataPropertiesListOfMetadataProperty">
            <summary>Sets the shim of MetadataItem.AddMetadataProperties(List`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.AnnotationsGet">
            <summary>Sets the shim of MetadataItem.get_Annotations()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of MetadataItem.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.DocumentationGet">
            <summary>Sets the shim of MetadataItem.get_Documentation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.DocumentationSetDocumentation">
            <summary>Sets the shim of MetadataItem.set_Documentation(Documentation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of MetadataItem.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.GetDataSpace">
            <summary>Sets the shim of MetadataItem.GetDataSpace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.GetParameterMode">
            <summary>Sets the shim of MetadataItem.GetParameterMode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of MetadataItem.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.MetadataPropertiesGet">
            <summary>Sets the shim of MetadataItem.get_MetadataProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.RemoveAnnotationString">
            <summary>Sets the shim of MetadataItem.RemoveAnnotation(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetDataSpaceDataSpace">
            <summary>Sets the shim of MetadataItem.SetDataSpace(DataSpace space)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetParameterModeParameterMode">
            <summary>Sets the shim of MetadataItem.SetParameterMode(ParameterMode mode)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetReadOnly">
            <summary>Sets the shim of MetadataItem.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.MetadataProperty</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of MetadataProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.Constructor">
            <summary>Sets the shim of MetadataProperty.MetadataProperty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.ConstructorStringEdmTypeBooleanObject">
            <summary>Sets the shim of MetadataProperty.MetadataProperty(String name, EdmType edmType, Boolean isCollectionType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.ConstructorStringObject">
            <summary>Sets the shim of MetadataProperty.MetadataProperty(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.ConstructorStringTypeUsageObject">
            <summary>Sets the shim of MetadataProperty.MetadataProperty(String name, TypeUsage typeUsage, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.CreateAnnotationStringObject">
            <summary>Sets the shim of MetadataProperty.CreateAnnotation(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.CreateStringTypeUsageObject">
            <summary>Sets the shim of MetadataProperty.Create(String name, TypeUsage typeUsage, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.IdentityGet">
            <summary>Sets the shim of MetadataProperty.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.IsAnnotationGet">
            <summary>Sets the shim of MetadataProperty.get_IsAnnotation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.NameGet">
            <summary>Sets the shim of MetadataProperty.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.PropertyKindGet">
            <summary>Sets the shim of MetadataProperty.get_PropertyKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.SetReadOnly">
            <summary>Sets the shim of MetadataProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.TypeUsageGet">
            <summary>Sets the shim of MetadataProperty.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.ValueGet">
            <summary>Sets the shim of MetadataProperty.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.ValueSetObject">
            <summary>Sets the shim of MetadataProperty.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of MetadataProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.IdentityGet">
            <summary>Sets the shim of MetadataProperty.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.IsAnnotationGet">
            <summary>Sets the shim of MetadataProperty.get_IsAnnotation()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.NameGet">
            <summary>Sets the shim of MetadataProperty.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.PropertyKindGet">
            <summary>Sets the shim of MetadataProperty.get_PropertyKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.SetReadOnly">
            <summary>Sets the shim of MetadataProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.TypeUsageGet">
            <summary>Sets the shim of MetadataProperty.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.ValueGet">
            <summary>Sets the shim of MetadataProperty.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.ValueSetObject">
            <summary>Sets the shim of MetadataProperty.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEdmSpaceTypeOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(!!0 objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemOf1StringBooleanDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemOf1StringDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemsOf1DataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetObjectSpaceTypeOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(!!0 edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.LoadAndCheckItemCollectionOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of MetadataWorkspace.LoadAndCheckItemCollection(Func`1&lt;!!0&gt; itemCollectionLoader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryDetermineCSpaceModelTypeOf1EdmTypeOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.EdmType,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryDetermineCSpaceModelType(EdmType&amp; modelEdmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEdmSpaceTypeOf1M0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(!!0 objectSpaceType, !!0&amp; edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemOf1StringBooleanDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemOf1StringDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetObjectSpaceTypeOf1M0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(!!0 edmSpaceType, !!0&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.CheckAndSetItemCollectionVersionInWorkSpaceItemCollection">
            <summary>Sets the shim of MetadataWorkspace.CheckAndSetItemCollectionVersionInWorkSpace(ItemCollection itemCollectionToRegister)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ClearCache">
            <summary>Sets the shim of MetadataWorkspace.ClearCache()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.Constructor">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ConstructorFuncOfEdmItemCollectionFuncOfStoreItemCollectionFuncOfStorageMappingItemCollection">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace(Func`1&lt;EdmItemCollection&gt; cSpaceLoader, Func`1&lt;StoreItemCollection&gt; sSpaceLoader, Func`1&lt;StorageMappingItemCollection&gt; csMappingLoader)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ConstructorFuncOfEdmItemCollectionFuncOfStoreItemCollectionFuncOfStorageMappingItemCollectionFuncOfObjectItemCollection">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace(Func`1&lt;EdmItemCollection&gt; cSpaceLoader, Func`1&lt;StoreItemCollection&gt; sSpaceLoader, Func`1&lt;StorageMappingItemCollection&gt; csMappingLoader, Func`1&lt;ObjectItemCollection&gt; oSpaceLoader)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ConstructorIEnumerableOfStringIEnumerableOfAssembly">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace(IEnumerable`1&lt;String&gt; paths, IEnumerable`1&lt;Assembly&gt; assembliesToConsider)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.CreateEntitySqlParser">
            <summary>Sets the shim of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.CreateMetadataWorkspaceWithResolverIEnumerableOfStringFuncOfIEnumerableOfAssemblyFuncOfAssemblyNameAssembly">
            <summary>Sets the shim of MetadataWorkspace.CreateMetadataWorkspaceWithResolver(IEnumerable`1&lt;String&gt; paths, Func`1&lt;IEnumerable`1&lt;Assembly&gt;&gt; wildcardAssemblies, Func`2&lt;AssemblyName,Assembly&gt; resolveReference)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.CreateQueryCommandTreeDbExpression">
            <summary>Sets the shim of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ExplicitLoadFromAssemblyAssemblyObjectItemCollectionActionOfString">
            <summary>Sets the shim of MetadataWorkspace.ExplicitLoadFromAssembly(Assembly assembly, ObjectItemCollection collection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetCanonicalModelTypeUsagePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetCanonicalModelTypeUsage(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetCqtViewEntitySetBase">
            <summary>Sets the shim of MetadataWorkspace.GetCqtView(EntitySetBase extent)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEdmSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEdmSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEntityContainerStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEntityContainerStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetFunctionsStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetFunctionsStringStringDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of MetadataWorkspace.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemCollectionDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemCollectionDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace, Boolean required)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemsDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetMappedPrimitiveTypePrimitiveTypeKindDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetModelPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetModelPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetOSpaceTypeUsageTypeUsage">
            <summary>Sets the shim of MetadataWorkspace.GetOSpaceTypeUsage(TypeUsage edmSpaceTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetObjectSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetObjectSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetPrimitiveTypesDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetRelevantMembersForUpdateEntitySetBaseEntityTypeBaseBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetRequiredOriginalValueMembersEntitySetBaseEntityTypeBase">
            <summary>Sets the shim of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetTypeStringStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetTypeStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ImplicitLoadAssemblyForTypeTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadAssemblyForType(Type type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ImplicitLoadFromAssemblyAssemblyObjectItemCollection">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromAssembly(Assembly assembly, ObjectItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.ImplicitLoadFromEntityTypeEntityTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromEntityType(EntityType type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.IsItemCollectionAlreadyRegisteredDataSpace">
            <summary>Sets the shim of MetadataWorkspace.IsItemCollectionAlreadyRegistered(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.IsMetadataWorkspaceCSCompatibleMetadataWorkspace">
            <summary>Sets the shim of MetadataWorkspace.IsMetadataWorkspaceCSCompatible(MetadataWorkspace other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.LoadFromAssemblyAssembly">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.LoadFromAssemblyAssemblyActionOfString">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.MaximumEdmVersionSupportedGet">
            <summary>Sets the shim of MetadataWorkspace.get_MaximumEdmVersionSupported()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.MetadataWorkspaceIdGet">
            <summary>Sets the shim of MetadataWorkspace.get_MetadataWorkspaceId()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.RegisterItemCollectionItemCollection">
            <summary>Sets the shim of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.StaticConstructor">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.SupportedEdmVersionsGet">
            <summary>Sets the shim of MetadataWorkspace.get_SupportedEdmVersions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryDetermineCSpaceModelTypeTypeEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryDetermineCSpaceModelType(Type type, EdmType&amp; modelEdmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEdmSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEdmSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEntityContainerStringBooleanDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEntityContainerStringDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetFunctionStringStringTypeUsageArrayBooleanDataSpaceEdmFunctionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetFunction(String name, String namespaceName, TypeUsage[] parameterTypes, Boolean ignoreCase, DataSpace dataSpace, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemCollectionDataSpaceItemCollectionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetObjectSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetObjectSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetTypeStringStringBooleanDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetTypeStringStringDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace._CreateMetadataWorkspaceWithResolverb__1e">
            <summary>Sets the shim of MetadataWorkspace.&lt;CreateMetadataWorkspaceWithResolver&gt;b__1e()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace._RegisterItemCollectionb__2dDouble">
            <summary>Sets the shim of MetadataWorkspace.&lt;RegisterItemCollection&gt;b__2d(Double e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace._RegisterItemCollectionb__2eDouble">
            <summary>Sets the shim of MetadataWorkspace.&lt;RegisterItemCollection&gt;b__2e(Double e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace._ctorb__0">
            <summary>Sets the shim of MetadataWorkspace.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace._ctorb__e">
            <summary>Sets the shim of MetadataWorkspace.&lt;.ctor&gt;b__e()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEdmSpaceTypeOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,``0,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(!!0 objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemOf1StringBooleanDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemOf1StringDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemsOf1DataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetObjectSpaceTypeOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,``0,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(!!0 edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.LoadAndCheckItemCollectionOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Func{``0},``0})">
            <summary>Sets the shim of MetadataWorkspace.LoadAndCheckItemCollection(Func`1&lt;!!0&gt; itemCollectionLoader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryDetermineCSpaceModelTypeOf1EdmTypeOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.EdmType,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryDetermineCSpaceModelType(EdmType&amp; modelEdmType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEdmSpaceTypeOf1M0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,``0,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(!!0 objectSpaceType, !!0&amp; edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemOf1StringBooleanDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemOf1StringDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetObjectSpaceTypeOf1M0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,``0,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(!!0 edmSpaceType, !!0&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CheckAndSetItemCollectionVersionInWorkSpaceItemCollection">
            <summary>Sets the shim of MetadataWorkspace.CheckAndSetItemCollectionVersionInWorkSpace(ItemCollection itemCollectionToRegister)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CreateEntitySqlParser">
            <summary>Sets the shim of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CreateMetadataWorkspaceWithResolverIEnumerableOfStringFuncOfIEnumerableOfAssemblyFuncOfAssemblyNameAssembly">
            <summary>Sets the shim of MetadataWorkspace.CreateMetadataWorkspaceWithResolver(IEnumerable`1&lt;String&gt; paths, Func`1&lt;IEnumerable`1&lt;Assembly&gt;&gt; wildcardAssemblies, Func`2&lt;AssemblyName,Assembly&gt; resolveReference)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CreateQueryCommandTreeDbExpression">
            <summary>Sets the shim of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ExplicitLoadFromAssemblyAssemblyObjectItemCollectionActionOfString">
            <summary>Sets the shim of MetadataWorkspace.ExplicitLoadFromAssembly(Assembly assembly, ObjectItemCollection collection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetCqtViewEntitySetBase">
            <summary>Sets the shim of MetadataWorkspace.GetCqtView(EntitySetBase extent)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEdmSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEdmSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEntityContainerStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEntityContainerStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetFunctionsStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetFunctionsStringStringDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of MetadataWorkspace.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemCollectionDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemCollectionDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace, Boolean required)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemsDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKindDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetOSpaceTypeUsageTypeUsage">
            <summary>Sets the shim of MetadataWorkspace.GetOSpaceTypeUsage(TypeUsage edmSpaceTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetObjectSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetObjectSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetPrimitiveTypesDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetRelevantMembersForUpdateEntitySetBaseEntityTypeBaseBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetRequiredOriginalValueMembersEntitySetBaseEntityTypeBase">
            <summary>Sets the shim of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetTypeStringStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetTypeStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ImplicitLoadAssemblyForTypeTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadAssemblyForType(Type type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ImplicitLoadFromAssemblyAssemblyObjectItemCollection">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromAssembly(Assembly assembly, ObjectItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ImplicitLoadFromEntityTypeEntityTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromEntityType(EntityType type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.IsItemCollectionAlreadyRegisteredDataSpace">
            <summary>Sets the shim of MetadataWorkspace.IsItemCollectionAlreadyRegistered(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.IsMetadataWorkspaceCSCompatibleMetadataWorkspace">
            <summary>Sets the shim of MetadataWorkspace.IsMetadataWorkspaceCSCompatible(MetadataWorkspace other)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.LoadFromAssemblyAssembly">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.LoadFromAssemblyAssemblyActionOfString">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.MetadataWorkspaceIdGet">
            <summary>Sets the shim of MetadataWorkspace.get_MetadataWorkspaceId()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.RegisterItemCollectionItemCollection">
            <summary>Sets the shim of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryDetermineCSpaceModelTypeTypeEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryDetermineCSpaceModelType(Type type, EdmType&amp; modelEdmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEdmSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEdmSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEntityContainerStringBooleanDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEntityContainerStringDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetFunctionStringStringTypeUsageArrayBooleanDataSpaceEdmFunctionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetFunction(String name, String namespaceName, TypeUsage[] parameterTypes, Boolean ignoreCase, DataSpace dataSpace, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemCollectionDataSpaceItemCollectionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetObjectSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetObjectSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetTypeStringStringBooleanDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetTypeStringStringDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.NavigationProperty</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.#ctor(System.Data.Entity.Core.Metadata.Edm.NavigationProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AssociationGet">
            <summary>Sets the shim of NavigationProperty.get_Association()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of NavigationProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.ConstructorStringTypeUsage">
            <summary>Sets the shim of NavigationProperty.NavigationProperty(String name, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.CreateStringTypeUsageRelationshipTypeRelationshipEndMemberRelationshipEndMemberIEnumerableOfMetadataProperty">
            <summary>Sets the shim of NavigationProperty.Create(String name, TypeUsage typeUsage, RelationshipType relationshipType, RelationshipEndMember from, RelationshipEndMember to, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.FromEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.FromEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_FromEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.GetDependentProperties">
            <summary>Sets the shim of NavigationProperty.GetDependentProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.RelationshipTypeGet">
            <summary>Sets the shim of NavigationProperty.get_RelationshipType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.RelationshipTypeSetRelationshipType">
            <summary>Sets the shim of NavigationProperty.set_RelationshipType(RelationshipType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.ResultEndGet">
            <summary>Sets the shim of NavigationProperty.get_ResultEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.SetReadOnly">
            <summary>Sets the shim of NavigationProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.ToEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.ToEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_ToEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.AssociationGet">
            <summary>Sets the shim of NavigationProperty.get_Association()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of NavigationProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.FromEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.FromEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_FromEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.GetDependentProperties">
            <summary>Sets the shim of NavigationProperty.GetDependentProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.RelationshipTypeGet">
            <summary>Sets the shim of NavigationProperty.get_RelationshipType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.RelationshipTypeSetRelationshipType">
            <summary>Sets the shim of NavigationProperty.set_RelationshipType(RelationshipType value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.ResultEndGet">
            <summary>Sets the shim of NavigationProperty.get_ResultEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.SetReadOnly">
            <summary>Sets the shim of NavigationProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.ToEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.ToEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_ToEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ObjectItemCollection.GetItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AddLoadedTypesDictionaryOfStringEdmType">
            <summary>Sets the shim of ObjectItemCollection.AddLoadedTypes(Dictionary`2&lt;String,EdmType&gt; typesInLoading)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.Constructor">
            <summary>Sets the shim of ObjectItemCollection.ObjectItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.ExplicitLoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.ExplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetClrTypeEdmType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(EdmType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetClrTypeEnumType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetClrTypeStructuralType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ObjectItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind modelType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of ObjectItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.GetRelationshipTypeString">
            <summary>Sets the shim of ObjectItemCollection.GetRelationshipType(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadAllReferencedAssembliesAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAllReferencedAssemblies(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadAssemblyForTypeTypeEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAssemblyForType(Type type, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadAssemblyFromCacheAssemblyBooleanEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadAssemblyFromCache(Assembly assembly, Boolean loadReferencedAssemblies, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadAssemblyLockGet">
            <summary>Sets the shim of ObjectItemCollection.get_LoadAssemblyLock()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssembly">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.OSpaceTypesLoadedGet">
            <summary>Sets the shim of ObjectItemCollection.get_OSpaceTypesLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.OSpaceTypesLoadedSetBoolean">
            <summary>Sets the shim of ObjectItemCollection.set_OSpaceTypesLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetClrTypeEdmTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(EdmType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetClrTypeEnumTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(EnumType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetClrTypeStructuralTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(StructuralType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetMappingCSpaceTypeIdentityEdmType">
            <summary>Sets the shim of ObjectItemCollection.TryGetMappingCSpaceTypeIdentity(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetOSpaceTypeEdmTypeEdmTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetOSpaceType(EdmType cspaceType, EdmType&amp; edmType)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ObjectItemCollection.GetItems()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.AddLoadedTypesDictionaryOfStringEdmType">
            <summary>Sets the shim of ObjectItemCollection.AddLoadedTypes(Dictionary`2&lt;String,EdmType&gt; typesInLoading)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ExplicitLoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.ExplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetClrTypeEnumType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetClrTypeStructuralType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ObjectItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind modelType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of ObjectItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetRelationshipTypeString">
            <summary>Sets the shim of ObjectItemCollection.GetRelationshipType(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadAllReferencedAssembliesAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAllReferencedAssemblies(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadAssemblyForTypeTypeEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAssemblyForType(Type type, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadAssemblyFromCacheAssemblyBooleanEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadAssemblyFromCache(Assembly assembly, Boolean loadReferencedAssemblies, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadAssemblyLockGet">
            <summary>Sets the shim of ObjectItemCollection.get_LoadAssemblyLock()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssembly">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.OSpaceTypesLoadedGet">
            <summary>Sets the shim of ObjectItemCollection.get_OSpaceTypesLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.OSpaceTypesLoadedSetBoolean">
            <summary>Sets the shim of ObjectItemCollection.set_OSpaceTypesLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetClrTypeEnumTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(EnumType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetClrTypeStructuralTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(StructuralType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetOSpaceTypeEdmTypeEdmTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetOSpaceType(EdmType cspaceType, EdmType&amp; edmType)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.PrimitiveType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.BuiltInTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ClrEquivalentTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrEquivalentType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ClrTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.Constructor">
            <summary>Sets the shim of PrimitiveType.PrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ConstructorStringStringDataSpacePrimitiveTypeDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.PrimitiveType(String name, String namespaceName, DataSpace dataSpace, PrimitiveType baseType, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ConstructorTypePrimitiveTypeDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.PrimitiveType(Type clrType, PrimitiveType baseType, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.FacetDescriptionsGet">
            <summary>Sets the shim of PrimitiveType.get_FacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of PrimitiveType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveType">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveTypes">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.InitializePrimitiveTypePrimitiveTypeKindDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.Initialize(PrimitiveType primitiveType, PrimitiveTypeKind primitiveTypeKind, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.PrimitiveTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_PrimitiveTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.PrimitiveTypeKindSetPrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.set_PrimitiveTypeKind(PrimitiveTypeKind value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ProviderManifestGet">
            <summary>Sets the shim of PrimitiveType.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ClrEquivalentTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrEquivalentType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.FacetDescriptionsGet">
            <summary>Sets the shim of PrimitiveType.get_FacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of PrimitiveType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.GetEdmPrimitiveType">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.PrimitiveTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_PrimitiveTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.PrimitiveTypeKindSetPrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.set_PrimitiveTypeKind(PrimitiveTypeKind value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of PrimitiveType.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.#ctor(System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Constructor">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.ReadOnlyMetadataCollection`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ConstructorListOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.ReadOnlyMetadataCollection`1(List`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ContainsString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.GetEnumerator">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.GetValueStringBoolean">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.IndexOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ItemGetString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.TryGetValueStringBooleanT0Out">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.ContainsString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.GetValueStringBoolean">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.ItemGetString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.TryGetValueStringBooleanT0Out">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.RefType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.#ctor(System.Data.Entity.Core.Metadata.Edm.RefType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.BuiltInTypeKindGet">
            <summary>Sets the shim of RefType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.Constructor">
            <summary>Sets the shim of RefType.RefType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.ConstructorEntityType">
            <summary>Sets the shim of RefType.RefType(EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.ElementTypeGet">
            <summary>Sets the shim of RefType.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.EqualsObject">
            <summary>Sets the shim of RefType.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.GetHashCode">
            <summary>Sets the shim of RefType.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.GetIdentityEntityTypeBase">
            <summary>Sets the shim of RefType.GetIdentity(EntityTypeBase entityTypeBase)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RefType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.AllInstances.ElementTypeGet">
            <summary>Sets the shim of RefType.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.AllInstances.EqualsObject">
            <summary>Sets the shim of RefType.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRefType.AllInstances.GetHashCode01">
            <summary>Sets the shim of RefType.GetHashCode()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.#ctor(System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.BuiltInTypeKindGet">
            <summary>Sets the shim of ReferentialConstraint.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.ConstructorRelationshipEndMemberRelationshipEndMemberIEnumerableOfEdmPropertyIEnumerableOfEdmProperty">
            <summary>Sets the shim of ReferentialConstraint.ReferentialConstraint(RelationshipEndMember fromRole, RelationshipEndMember toRole, IEnumerable`1&lt;EdmProperty&gt; fromProperties, IEnumerable`1&lt;EdmProperty&gt; toProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.DependentEndGet">
            <summary>Sets the shim of ReferentialConstraint.get_DependentEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.FromPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.FromRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromRole()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.FromRoleSetRelationshipEndMember">
            <summary>Sets the shim of ReferentialConstraint.set_FromRole(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.IdentityGet">
            <summary>Sets the shim of ReferentialConstraint.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.SetReadOnly">
            <summary>Sets the shim of ReferentialConstraint.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.ToPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.ToRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToRole()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.ToRoleSetRelationshipEndMember">
            <summary>Sets the shim of ReferentialConstraint.set_ToRole(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.ToString">
            <summary>Sets the shim of ReferentialConstraint.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint._get_FromPropertiesb__0EdmMember">
            <summary>Sets the shim of ReferentialConstraint.&lt;get_FromProperties&gt;b__0(EdmMember p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of ReferentialConstraint.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.DependentEndGet">
            <summary>Sets the shim of ReferentialConstraint.get_DependentEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.FromPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.FromRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromRole()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.FromRoleSetRelationshipEndMember">
            <summary>Sets the shim of ReferentialConstraint.set_FromRole(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.IdentityGet">
            <summary>Sets the shim of ReferentialConstraint.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.SetReadOnly">
            <summary>Sets the shim of ReferentialConstraint.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToRole()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToRoleSetRelationshipEndMember">
            <summary>Sets the shim of ReferentialConstraint.set_ToRole(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToString01">
            <summary>Sets the shim of ReferentialConstraint.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances._get_FromPropertiesb__0EdmMember">
            <summary>Sets the shim of ReferentialConstraint.&lt;get_FromProperties&gt;b__0(EdmMember p)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.#ctor(System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.ConstructorStringRefTypeRelationshipMultiplicity">
            <summary>Sets the shim of RelationshipEndMember.RelationshipEndMember(String name, RefType endRefType, RelationshipMultiplicity multiplicity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.DeleteBehaviorGet">
            <summary>Sets the shim of RelationshipEndMember.get_DeleteBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.DeleteBehaviorSetOperationAction">
            <summary>Sets the shim of RelationshipEndMember.set_DeleteBehavior(OperationAction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.GetEntityType">
            <summary>Sets the shim of RelationshipEndMember.GetEntityType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.RelationshipMultiplicityGet">
            <summary>Sets the shim of RelationshipEndMember.get_RelationshipMultiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.RelationshipMultiplicitySetRelationshipMultiplicity">
            <summary>Sets the shim of RelationshipEndMember.set_RelationshipMultiplicity(RelationshipMultiplicity value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.DeleteBehaviorGet">
            <summary>Sets the shim of RelationshipEndMember.get_DeleteBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.DeleteBehaviorSetOperationAction">
            <summary>Sets the shim of RelationshipEndMember.set_DeleteBehavior(OperationAction value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.GetEntityType">
            <summary>Sets the shim of RelationshipEndMember.GetEntityType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.RelationshipMultiplicityGet">
            <summary>Sets the shim of RelationshipEndMember.get_RelationshipMultiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.RelationshipMultiplicitySetRelationshipMultiplicity">
            <summary>Sets the shim of RelationshipEndMember.set_RelationshipMultiplicity(RelationshipMultiplicity value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.RelationshipSet</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.#ctor(System.Data.Entity.Core.Metadata.Edm.RelationshipSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.BuiltInTypeKindGet">
            <summary>Sets the shim of RelationshipSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.ConstructorStringStringStringStringRelationshipType">
            <summary>Sets the shim of RelationshipSet.RelationshipSet(String name, String schema, String table, String definingQuery, RelationshipType relationshipType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.ElementTypeGet">
            <summary>Sets the shim of RelationshipSet.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RelationshipSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of RelationshipSet.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.RelationshipType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.#ctor(System.Data.Entity.Core.Metadata.Edm.RelationshipType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of RelationshipType.RelationshipType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.RelationshipEndMembersGet">
            <summary>Sets the shim of RelationshipType.get_RelationshipEndMembers()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRelationshipType.AllInstances.RelationshipEndMembersGet">
            <summary>Sets the shim of RelationshipType.get_RelationshipEndMembers()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.RowType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.#ctor(System.Data.Entity.Core.Metadata.Edm.RowType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AddPropertyEdmProperty">
            <summary>Sets the shim of RowType.AddProperty(EdmProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.BuiltInTypeKindGet">
            <summary>Sets the shim of RowType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.CheckPropertiesIEnumerableOfEdmProperty">
            <summary>Sets the shim of RowType.CheckProperties(IEnumerable`1&lt;EdmProperty&gt; properties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.Constructor">
            <summary>Sets the shim of RowType.RowType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.ConstructorIEnumerableOfEdmProperty">
            <summary>Sets the shim of RowType.RowType(IEnumerable`1&lt;EdmProperty&gt; properties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.CreateIEnumerableOfEdmPropertyIEnumerableOfMetadataProperty">
            <summary>Sets the shim of RowType.Create(IEnumerable`1&lt;EdmProperty&gt; properties, IEnumerable`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.DeclaredPropertiesGet">
            <summary>Sets the shim of RowType.get_DeclaredProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.EdmEqualsMetadataItem">
            <summary>Sets the shim of RowType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.PropertiesGet">
            <summary>Sets the shim of RowType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of RowType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.AddPropertyEdmProperty">
            <summary>Sets the shim of RowType.AddProperty(EdmProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RowType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.DeclaredPropertiesGet">
            <summary>Sets the shim of RowType.get_DeclaredProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of RowType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.PropertiesGet">
            <summary>Sets the shim of RowType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimRowType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of RowType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.SimpleType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.#ctor(System.Data.Entity.Core.Metadata.Edm.SimpleType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.Constructor">
            <summary>Sets the shim of SimpleType.SimpleType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of SimpleType.SimpleType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSimpleType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.SsdlSerializer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.#ctor(System.Data.Entity.Core.Metadata.Edm.SsdlSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.Constructor">
            <summary>Sets the shim of SsdlSerializer.SsdlSerializer()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.OnErrorAddEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of SsdlSerializer.add_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.OnErrorRemoveEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of SsdlSerializer.remove_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.SerializeEdmModelStringStringStringXmlWriterBoolean">
            <summary>Sets the shim of SsdlSerializer.Serialize(EdmModel dbDatabase, String namespaceName, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.SerializeEdmModelStringStringXmlWriterBoolean">
            <summary>Sets the shim of SsdlSerializer.Serialize(EdmModel dbDatabase, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.ValidateModelEdmModel">
            <summary>Sets the shim of SsdlSerializer.ValidateModel(EdmModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances.OnErrorAddEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of SsdlSerializer.add_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances.OnErrorRemoveEventHandlerOfDataModelErrorEventArgs">
            <summary>Sets the shim of SsdlSerializer.remove_OnError(EventHandler`1&lt;DataModelErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances.SerializeEdmModelStringStringStringXmlWriterBoolean">
            <summary>Sets the shim of SsdlSerializer.Serialize(EdmModel dbDatabase, String namespaceName, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances.SerializeEdmModelStringStringXmlWriterBoolean">
            <summary>Sets the shim of SsdlSerializer.Serialize(EdmModel dbDatabase, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimSsdlSerializer.AllInstances.ValidateModelEdmModel">
            <summary>Sets the shim of SsdlSerializer.ValidateModel(EdmModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.StoreItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.Constructor">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorDbProviderFactoryDbProviderManifestStringString">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(DbProviderFactory factory, DbProviderManifest manifest, String providerInvariantName, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorEdmModel">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(EdmModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReader">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReaderIEnumerableOfString">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReaderReadOnlyCollectionOfStringIDbDependencyResolverIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IDbDependencyResolver resolver, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorStringArray">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConvertFunctionSignatureToCTypeEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertFunctionSignatureToCType(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConvertToCTypeFunctionEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunction(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ConvertToCTypeFunctionsReadOnlyCollectionOfEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunctions(ReadOnlyCollection`1&lt;EdmFunction&gt; functionOverloads)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.CreateIEnumerableOfXmlReaderReadOnlyCollectionOfStringIDbDependencyResolverIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StoreItemCollection.Create(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IDbDependencyResolver resolver, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.GetCTypeFunctionsStringBoolean">
            <summary>Sets the shim of StoreItemCollection.GetCTypeFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of StoreItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.LoadProviderManifestDbProviderManifest">
            <summary>Sets the shim of StoreItemCollection.LoadProviderManifest(DbProviderManifest storeManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ProviderFactoryGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ProviderInvariantNameGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ProviderManifestGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.ProviderManifestTokenGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderManifestToken()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreSchemaVersionGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreSchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreSchemaVersionSetDouble">
            <summary>Sets the shim of StoreItemCollection.set_StoreSchemaVersion(Double value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ConvertFunctionSignatureToCTypeEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertFunctionSignatureToCType(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ConvertToCTypeFunctionEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunction(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ConvertToCTypeFunctionsReadOnlyCollectionOfEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunctions(ReadOnlyCollection`1&lt;EdmFunction&gt; functionOverloads)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetCTypeFunctionsStringBoolean">
            <summary>Sets the shim of StoreItemCollection.GetCTypeFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of StoreItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.LoadProviderManifestDbProviderManifest">
            <summary>Sets the shim of StoreItemCollection.LoadProviderManifest(DbProviderManifest storeManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ProviderFactoryGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ProviderInvariantNameGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ProviderManifestTokenGet">
            <summary>Sets the shim of StoreItemCollection.get_ProviderManifestToken()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreSchemaVersionGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreSchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreSchemaVersionSetDouble">
            <summary>Sets the shim of StoreItemCollection.set_StoreSchemaVersion(Double value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.StructuralType</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.#ctor(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.GetDeclaredOnlyMembersOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection{``0}})">
            <summary>Sets the shim of StructuralType.GetDeclaredOnlyMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AddMemberEdmMember">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AddMemberEdmMemberBoolean">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member, Boolean forceAdd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.Constructor">
            <summary>Sets the shim of StructuralType.StructuralType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of StructuralType.StructuralType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.HasMemberEdmMember">
            <summary>Sets the shim of StructuralType.HasMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.MembersGet">
            <summary>Sets the shim of StructuralType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.NotifyItemIdentityChanged">
            <summary>Sets the shim of StructuralType.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.RemoveMemberEdmMember">
            <summary>Sets the shim of StructuralType.RemoveMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.SetReadOnly">
            <summary>Sets the shim of StructuralType.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.GetDeclaredOnlyMembersOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection{``0}})">
            <summary>Sets the shim of StructuralType.GetDeclaredOnlyMembers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.AddMemberEdmMember">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.AddMemberEdmMemberBoolean">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member, Boolean forceAdd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.HasMemberEdmMember">
            <summary>Sets the shim of StructuralType.HasMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.MembersGet">
            <summary>Sets the shim of StructuralType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.NotifyItemIdentityChanged">
            <summary>Sets the shim of StructuralType.NotifyItemIdentityChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.RemoveMemberEdmMember">
            <summary>Sets the shim of StructuralType.RemoveMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.SetReadOnly">
            <summary>Sets the shim of StructuralType.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage">
            <summary>Shim type of System.Data.Entity.Core.Metadata.Edm.TypeUsage</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.#ctor(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.BuildIdentityStringBuilder">
            <summary>Sets the shim of TypeUsage.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.BuiltInTypeKindGet">
            <summary>Sets the shim of TypeUsage.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.Constructor">
            <summary>Sets the shim of TypeUsage.TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ConstructorEdmType">
            <summary>Sets the shim of TypeUsage.TypeUsage(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ConstructorEdmTypeIEnumerableOfFacet">
            <summary>Sets the shim of TypeUsage.TypeUsage(EdmType edmType, IEnumerable`1&lt;Facet&gt; facets)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateBinaryTypeUsagePrimitiveTypeBoolean">
            <summary>Sets the shim of TypeUsage.CreateBinaryTypeUsage(PrimitiveType primitiveType, Boolean isFixedLength)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateBinaryTypeUsagePrimitiveTypeBooleanInt32">
            <summary>Sets the shim of TypeUsage.CreateBinaryTypeUsage(PrimitiveType primitiveType, Boolean isFixedLength, Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateDateTimeOffsetTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateDateTimeOffsetTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateDateTimeTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateDateTimeTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateDecimalTypeUsagePrimitiveType">
            <summary>Sets the shim of TypeUsage.CreateDecimalTypeUsage(PrimitiveType primitiveType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateDecimalTypeUsagePrimitiveTypeByteByte">
            <summary>Sets the shim of TypeUsage.CreateDecimalTypeUsage(PrimitiveType primitiveType, Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateDefaultTypeUsageEdmType">
            <summary>Sets the shim of TypeUsage.CreateDefaultTypeUsage(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateEdmType">
            <summary>Sets the shim of TypeUsage.Create(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateEdmTypeIEnumerableOfFacet">
            <summary>Sets the shim of TypeUsage.Create(EdmType edmType, IEnumerable`1&lt;Facet&gt; facets)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateStringTypeUsagePrimitiveTypeBooleanBoolean">
            <summary>Sets the shim of TypeUsage.CreateStringTypeUsage(PrimitiveType primitiveType, Boolean isUnicode, Boolean isFixedLength)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateStringTypeUsagePrimitiveTypeBooleanBooleanInt32">
            <summary>Sets the shim of TypeUsage.CreateStringTypeUsage(PrimitiveType primitiveType, Boolean isUnicode, Boolean isFixedLength, Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.CreateTimeTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateTimeTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.EdmEqualsMetadataItem">
            <summary>Sets the shim of TypeUsage.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.EdmTypeGet">
            <summary>Sets the shim of TypeUsage.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.FacetsGet">
            <summary>Sets the shim of TypeUsage.get_Facets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.GetFacets">
            <summary>Sets the shim of TypeUsage.GetFacets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.IdentityGet">
            <summary>Sets the shim of TypeUsage.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.IsSubtypeOfTypeUsage">
            <summary>Sets the shim of TypeUsage.IsSubtypeOf(TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ModelTypeUsageGet">
            <summary>Sets the shim of TypeUsage.get_ModelTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.OverrideFacetValuesIEnumerableOfFacetIEnumerableOfFacet">
            <summary>Sets the shim of TypeUsage.OverrideFacetValues(IEnumerable`1&lt;Facet&gt; facets, IEnumerable`1&lt;Facet&gt; facetValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.SetReadOnly">
            <summary>Sets the shim of TypeUsage.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ShallowCopyFacetArray">
            <summary>Sets the shim of TypeUsage.ShallowCopy(Facet[] facetValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.StaticConstructor">
            <summary>Sets the shim of TypeUsage.TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ToString">
            <summary>Sets the shim of TypeUsage.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.ValidateMaxLengthInt32">
            <summary>Sets the shim of TypeUsage.ValidateMaxLength(Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._GetDefaultFacetDescriptionsAndOverrideFacetValuesb__eFacetDescription">
            <summary>Sets the shim of TypeUsage.&lt;GetDefaultFacetDescriptionsAndOverrideFacetValues&gt;b__e(FacetDescription fd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._GetDefaultFacetDescriptionsAndOverrideFacetValuesb__fFacetDescription">
            <summary>Sets the shim of TypeUsage.&lt;GetDefaultFacetDescriptionsAndOverrideFacetValues&gt;b__f(FacetDescription fd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._GetFacetsb__cFacetDescription">
            <summary>Sets the shim of TypeUsage.&lt;GetFacets&gt;b__c(FacetDescription facetDescription)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._OverrideFacetValuesb__0FacetFacet">
            <summary>Sets the shim of TypeUsage.&lt;OverrideFacetValues&gt;b__0(Facet f1, Facet f2)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._OverrideFacetValuesb__12Facet">
            <summary>Sets the shim of TypeUsage.&lt;OverrideFacetValues&gt;b__12(Facet f)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage._OverrideFacetValuesb__13Facet">
            <summary>Sets the shim of TypeUsage.&lt;OverrideFacetValues&gt;b__13(Facet f)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of TypeUsage.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of TypeUsage.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of TypeUsage.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.EdmTypeGet">
            <summary>Sets the shim of TypeUsage.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.FacetsGet">
            <summary>Sets the shim of TypeUsage.get_Facets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.GetFacets">
            <summary>Sets the shim of TypeUsage.GetFacets()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.IdentityGet">
            <summary>Sets the shim of TypeUsage.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.IsSubtypeOfTypeUsage">
            <summary>Sets the shim of TypeUsage.IsSubtypeOf(TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.ModelTypeUsageGet">
            <summary>Sets the shim of TypeUsage.get_ModelTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.SetReadOnly">
            <summary>Sets the shim of TypeUsage.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.ShallowCopyFacetArray">
            <summary>Sets the shim of TypeUsage.ShallowCopy(Facet[] facetValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.ToString01">
            <summary>Sets the shim of TypeUsage.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.CsdlSerializer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubCsdlSerializer</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubCsdlSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDataModelErrorEventArgs</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubDataModelErrorEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload.InitializeStub">
            <summary>Initializes a new instance of type StubEdmFunctionPayload</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubEdmFunctionPayload.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter.#ctor">
            <summary>Initializes a new instance of type StubIEdmModelAdapter</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter.ConceptualModelGet">
            <summary>Sets the stub of IEdmModelAdapter.get_ConceptualModel()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter.StoreModelGet">
            <summary>Sets the stub of IEdmModelAdapter.get_StoreModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter.ef::System#Data#Entity#Core#Metadata#Edm#IEdmModelAdapter#ConceptualModel">
            <summary>Sets the stub of IEdmModelAdapter.get_ConceptualModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubIEdmModelAdapter.ef::System#Data#Entity#Core#Metadata#Edm#IEdmModelAdapter#StoreModel">
            <summary>Sets the stub of IEdmModelAdapter.get_StoreModel()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.#ctor(System.Func{System.Data.Entity.Core.Metadata.Edm.EdmItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection},System.Func{System.Data.Entity.Core.Mapping.StorageMappingItemCollection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.#ctor(System.Func{System.Data.Entity.Core.Metadata.Edm.EdmItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection},System.Func{System.Data.Entity.Core.Mapping.StorageMappingItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.CreateEntitySqlParser">
            <summary>Sets the stub of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.CreateEntitySqlParser01">
            <summary>Sets the stub of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.CreateQueryCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.CreateQueryCommandTreeDbExpression">
            <summary>Sets the stub of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType)">
            <summary>Sets the stub of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
            <summary>Sets the stub of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEdmSpaceTypeEnumType">
            <summary>Sets the stub of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEdmSpaceTypeStructuralType">
            <summary>Sets the stub of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEntityContainer(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEntityContainerStringBooleanDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetEntityContainerStringDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Boolean)">
            <summary>Sets the stub of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetFunctionsStringStringDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetFunctionsStringStringDataSpaceBoolean">
            <summary>Sets the stub of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItem``1(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemCollection(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemCollectionDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemOf1StringBooleanDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets stubs of GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemOf1StringDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0})">
            <summary>Sets stubs of GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItems``1(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItems(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemsDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetItemsOf1DataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets stubs of GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType)">
            <summary>Sets the stub of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
            <summary>Sets the stub of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetObjectSpaceTypeEnumType">
            <summary>Sets the stub of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetObjectSpaceTypeStructuralType">
            <summary>Sets the stub of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetPrimitiveTypes(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetPrimitiveTypesDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Entity.Core.Metadata.Edm.EntitySetBase,System.Data.Entity.Core.Metadata.Edm.EntityTypeBase,System.Boolean)">
            <summary>Sets the stub of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetRelevantMembersForUpdateEntitySetBaseEntityTypeBaseBoolean">
            <summary>Sets the stub of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Entity.Core.Metadata.Edm.EntitySetBase,System.Data.Entity.Core.Metadata.Edm.EntityTypeBase)">
            <summary>Sets the stub of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetRequiredOriginalValueMembersEntitySetBaseEntityTypeBase">
            <summary>Sets the stub of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetType(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
            <summary>Sets the stub of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetTypeStringStringBooleanDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.GetTypeStringStringDataSpace">
            <summary>Sets the stub of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.InitializeStub">
            <summary>Initializes a new instance of type StubMetadataWorkspace</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)">
            <summary>Sets the stub of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})">
            <summary>Sets the stub of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.LoadFromAssemblyAssembly">
            <summary>Sets the stub of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.LoadFromAssemblyAssemblyActionOfString">
            <summary>Sets the stub of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.RegisterItemCollection(System.Data.Entity.Core.Metadata.Edm.ItemCollection)">
            <summary>Sets the stub of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.RegisterItemCollectionItemCollection">
            <summary>Sets the stub of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType,System.Data.Entity.Core.Metadata.Edm.EnumType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Data.Entity.Core.Metadata.Edm.StructuralType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEdmSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEdmSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEntityContainerStringBooleanDataSpaceEntityContainerOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetEntityContainerStringDataSpaceEntityContainerOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItem``1(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItemCollection(System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.ItemCollection@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItemCollectionDataSpaceItemCollectionOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItemOf1StringBooleanDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets stubs of TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetItemOf1StringDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets stubs of TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType,System.Data.Entity.Core.Metadata.Edm.EnumType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Data.Entity.Core.Metadata.Edm.StructuralType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetObjectSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetObjectSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetType(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
            <summary>Sets the stub of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetTypeStringStringBooleanDataSpaceEdmTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.TryGetTypeStringStringDataSpaceEdmTypeOut">
            <summary>Sets the stub of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubMetadataWorkspace.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.Contains(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.ContainsString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.GetItems``1">
            <summary>Sets the stub of ObjectItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets stubs of GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.GetValue(System.String,System.Boolean)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.GetValueStringBoolean">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.InitializeStub">
            <summary>Initializes a new instance of type StubObjectItemCollection</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.ItemGetString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.TryGetValue(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.GlobalItem@)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.TryGetValueStringBooleanGlobalItemOut">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubObjectItemCollection.Item(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.SsdlSerializer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubSsdlSerializer</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.Serialize(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.String,System.String,System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of SsdlSerializer.Serialize(EdmModel dbDatabase, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.Serialize(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.String,System.String,System.String,System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of SsdlSerializer.Serialize(EdmModel dbDatabase, String namespaceName, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.SerializeEdmModelStringStringStringXmlWriterBoolean">
            <summary>Sets the stub of SsdlSerializer.Serialize(EdmModel dbDatabase, String namespaceName, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.SerializeEdmModelStringStringXmlWriterBoolean">
            <summary>Sets the stub of SsdlSerializer.Serialize(EdmModel dbDatabase, String provider, String providerManifestToken, XmlWriter xmlWriter, Boolean serializeDefaultNullability)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubSsdlSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection">
            <summary>Stub type of System.Data.Entity.Core.Metadata.Edm.StoreItemCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmModel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.Contains(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ContainsString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetItems``1">
            <summary>Sets the stub of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets stubs of GetItems()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetPrimitiveTypes">
            <summary>Sets the stub of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetPrimitiveTypes01">
            <summary>Sets the stub of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetValue(System.String,System.Boolean)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.GetValueStringBoolean">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.InitializeStub">
            <summary>Initializes a new instance of type StubStoreItemCollection</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ItemGetString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderFactoryGet">
            <summary>Sets the stub of StoreItemCollection.get_ProviderFactory()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderInvariantNameGet">
            <summary>Sets the stub of StoreItemCollection.get_ProviderInvariantName()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderManifestGet">
            <summary>Sets the stub of StoreItemCollection.get_ProviderManifest()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderManifestTokenGet">
            <summary>Sets the stub of StoreItemCollection.get_ProviderManifestToken()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.TryGetValue(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.GlobalItem@)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.TryGetValueStringBooleanGlobalItemOut">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.Item(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderFactory">
            <summary>Sets the stub of StoreItemCollection.get_ProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderInvariantName">
            <summary>Sets the stub of StoreItemCollection.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderManifest">
            <summary>Sets the stub of StoreItemCollection.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Metadata.Edm.Fakes.StubStoreItemCollection.ProviderManifestToken">
            <summary>Sets the stub of StoreItemCollection.get_ProviderManifestToken()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.ComplexObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.#ctor(System.Data.Entity.Core.Objects.DataClasses.ComplexObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AttachToParentStructuralObjectString">
            <summary>Sets the shim of ComplexObject.AttachToParent(StructuralObject parent, String parentPropertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.Constructor">
            <summary>Sets the shim of ComplexObject.ComplexObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.DetachFromParent">
            <summary>Sets the shim of ComplexObject.DetachFromParent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.IsChangeTrackedGet">
            <summary>Sets the shim of ComplexObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.ReportPropertyChangedString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.ReportPropertyChangingString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.AttachToParentStructuralObjectString">
            <summary>Sets the shim of ComplexObject.AttachToParent(StructuralObject parent, String parentPropertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.DetachFromParent">
            <summary>Sets the shim of ComplexObject.DetachFromParent()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.IsChangeTrackedGet">
            <summary>Sets the shim of ComplexObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmComplexPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmComplexPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmComplexPropertyAttribute.EdmComplexPropertyAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmComplexTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmComplexTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.Constructor">
            <summary>Sets the shim of EdmComplexTypeAttribute.EdmComplexTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmEntityTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmEntityTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.Constructor">
            <summary>Sets the shim of EdmEntityTypeAttribute.EdmEntityTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmEnumTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmEnumTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.Constructor">
            <summary>Sets the shim of EdmEnumTypeAttribute.EdmEnumTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmPropertyAttribute.EdmPropertyAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.ConstructorStringStringStringRelationshipMultiplicityTypeStringRelationshipMultiplicityType">
            <summary>Sets the shim of EdmRelationshipAttribute.EdmRelationshipAttribute(String relationshipNamespaceName, String relationshipName, String role1Name, RelationshipMultiplicity role1Multiplicity, Type role1Type, String role2Name, RelationshipMultiplicity role2Multiplicity, Type role2Type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.ConstructorStringStringStringRelationshipMultiplicityTypeStringRelationshipMultiplicityTypeBoolean">
            <summary>Sets the shim of EdmRelationshipAttribute.EdmRelationshipAttribute(String relationshipNamespaceName, String relationshipName, String role1Name, RelationshipMultiplicity role1Multiplicity, Type role1Type, String role2Name, RelationshipMultiplicity role2Multiplicity, Type role2Type, Boolean isForeignKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.IsForeignKeyGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Type()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Type()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.ConstructorStringStringString">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.EdmRelationshipNavigationPropertyAttribute(String relationshipNamespaceName, String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.TargetRoleNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.TargetRoleNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmScalarPropertyAttribute.EdmScalarPropertyAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.EntityKeyPropertyGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_EntityKeyProperty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.EntityKeyPropertySetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_EntityKeyProperty(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.IsNullableGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.IsNullableSetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.EntityKeyPropertyGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_EntityKeyProperty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.EntityKeyPropertySetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_EntityKeyProperty(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.IsNullableGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.Constructor">
            <summary>Sets the shim of EdmSchemaAttribute.EdmSchemaAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.ConstructorString">
            <summary>Sets the shim of EdmSchemaAttribute.EdmSchemaAttribute(String assemblyGuid)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EdmTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.#ctor(System.Data.Entity.Core.Objects.DataClasses.EdmTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.Constructor">
            <summary>Sets the shim of EdmTypeAttribute.EdmTypeAttribute()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NamespaceNameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NamespaceNameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_NamespaceName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_NamespaceName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.#ctor(System.Data.Entity.Core.Objects.DataClasses.EntityCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AddT0">
            <summary>Sets the shim of EntityCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AttachIEnumerableOfT0">
            <summary>Sets the shim of EntityCollection`1.Attach(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AttachT0">
            <summary>Sets the shim of EntityCollection`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.BulkDeleteAllListOfObject">
            <summary>Sets the shim of EntityCollection`1.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Clear">
            <summary>Sets the shim of EntityCollection`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.ClearWrappedValues">
            <summary>Sets the shim of EntityCollection`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Constructor">
            <summary>Sets the shim of EntityCollection`1.EntityCollection`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.ContainsT0">
            <summary>Sets the shim of EntityCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntityCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.CountGet">
            <summary>Sets the shim of EntityCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.CountInternalGet">
            <summary>Sets the shim of EntityCollection`1.get_CountInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.CreateSourceQuery">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.Exclude">
            <summary>Sets the shim of EntityCollection`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.GetEnumerator">
            <summary>Sets the shim of EntityCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.GetInternalEnumerable">
            <summary>Sets the shim of EntityCollection`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityCollection`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.IsEmpty">
            <summary>Sets the shim of EntityCollection`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.IsReadOnlyGet">
            <summary>Sets the shim of EntityCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.LoadMergeOption">
            <summary>Sets the shim of EntityCollection`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of EntityCollection`1.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnCollectionDeserializedStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnCollectionDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnRelatedEndClear">
            <summary>Sets the shim of EntityCollection`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.RemoveInternalT0">
            <summary>Sets the shim of EntityCollection`1.RemoveInternal(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.RemoveT0">
            <summary>Sets the shim of EntityCollection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntityCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityCollection`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AddT0">
            <summary>Sets the shim of EntityCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AttachIEnumerableOfT0">
            <summary>Sets the shim of EntityCollection`1.Attach(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AttachT0">
            <summary>Sets the shim of EntityCollection`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.BulkDeleteAllListOfObject">
            <summary>Sets the shim of EntityCollection`1.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.Clear">
            <summary>Sets the shim of EntityCollection`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ClearWrappedValues">
            <summary>Sets the shim of EntityCollection`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of EntityCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntityCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of EntityCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CountInternalGet">
            <summary>Sets the shim of EntityCollection`1.get_CountInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CreateSourceQuery">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.Exclude">
            <summary>Sets the shim of EntityCollection`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.GetInternalEnumerable">
            <summary>Sets the shim of EntityCollection`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityCollection`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IsEmpty">
            <summary>Sets the shim of EntityCollection`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EntityCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.LoadMergeOption">
            <summary>Sets the shim of EntityCollection`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of EntityCollection`1.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnCollectionDeserializedStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnCollectionDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnRelatedEndClear">
            <summary>Sets the shim of EntityCollection`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.RemoveInternalT0">
            <summary>Sets the shim of EntityCollection`1.RemoveInternal(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of EntityCollection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntityCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityCollection`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EntityObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.#ctor(System.Data.Entity.Core.Objects.DataClasses.EntityObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.Constructor">
            <summary>Sets the shim of EntityObject.EntityObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.EntityChangeTrackerGet">
            <summary>Sets the shim of EntityObject.get_EntityChangeTracker()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.EntityChangeTrackerSetIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.set_EntityChangeTracker(IEntityChangeTracker value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.EntityKeyGet">
            <summary>Sets the shim of EntityObject.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityObject.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.EntityStateGet">
            <summary>Sets the shim of EntityObject.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.IsChangeTrackedGet">
            <summary>Sets the shim of EntityObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.RelationshipManagerSystemDataEntityCoreObjectsDataClassesIEntityWithRelationshipsget">
            <summary>Sets the shim of EntityObject.System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.ReportPropertyChangedString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.ReportPropertyChangingString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.StaticConstructor">
            <summary>Sets the shim of EntityObject.EntityObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.SystemDataEntityCoreObjectsDataClassesIEntityWithChangeTrackerSetChangeTrackerIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityChangeTrackerGet">
            <summary>Sets the shim of EntityObject.get_EntityChangeTracker()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityChangeTrackerSetIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.set_EntityChangeTracker(IEntityChangeTracker value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityObject.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityObject.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityStateGet">
            <summary>Sets the shim of EntityObject.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.IsChangeTrackedGet">
            <summary>Sets the shim of EntityObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.RelationshipManagerSystemDataEntityCoreObjectsDataClassesIEntityWithRelationshipsget">
            <summary>Sets the shim of EntityObject.System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.SystemDataEntityCoreObjectsDataClassesIEntityWithChangeTrackerSetChangeTrackerIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EntityReference</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.#ctor(System.Data.Entity.Core.Objects.DataClasses.EntityReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.Bind(System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AddToNavigationPropertyIfCompatibleRelatedEnd">
            <summary>Sets the shim of EntityReference.AddToNavigationPropertyIfCompatible(RelatedEnd otherRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AttachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_AttachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AttemptToNullFKsOnRefOrKeySetToNull">
            <summary>Sets the shim of EntityReference.AttemptToNullFKsOnRefOrKeySetToNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.CachedForeignKeyGet">
            <summary>Sets the shim of EntityReference.get_CachedForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.CachedForeignKeyIsConceptualNull">
            <summary>Sets the shim of EntityReference.CachedForeignKeyIsConceptualNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.CanDeferredLoadGet">
            <summary>Sets the shim of EntityReference.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.Constructor">
            <summary>Sets the shim of EntityReference.EntityReference()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.DetachAllEntityState">
            <summary>Sets the shim of EntityReference.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.DetachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_DetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.DetachedEntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_DetachedEntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.EntityKeyGet">
            <summary>Sets the shim of EntityReference.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.GetAllKeyValues">
            <summary>Sets the shim of EntityReference.GetAllKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.GetDependentEndOfReferentialConstraintObject">
            <summary>Sets the shim of EntityReference.GetDependentEndOfReferentialConstraint(Object relatedValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.NavigationPropertyIsNullOrMissing">
            <summary>Sets the shim of EntityReference.NavigationPropertyIsNullOrMissing()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.NullAllForeignKeys">
            <summary>Sets the shim of EntityReference.NullAllForeignKeys()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.SetEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityReference.SetEntityKey(EntityKey value, Boolean forceFixup)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.UpdateDependentEndForeignKeyRelatedEndBoolean">
            <summary>Sets the shim of EntityReference.UpdateDependentEndForeignKey(RelatedEnd targetRelatedEnd, Boolean forceForeignKeyChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.ValidateDetachedEntityKey">
            <summary>Sets the shim of EntityReference.ValidateDetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.VerifyDetachedKeyMatchesEntityKey">
            <summary>Sets the shim of EntityReference.VerifyDetachedKeyMatches(EntityKey entityKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference._UpdateForeignKeyValuesb__3Object">
            <summary>Sets the shim of EntityReference.&lt;UpdateForeignKeyValues&gt;b__3(Object v)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.AddToNavigationPropertyIfCompatibleRelatedEnd">
            <summary>Sets the shim of EntityReference.AddToNavigationPropertyIfCompatible(RelatedEnd otherRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.AttachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_AttachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.AttemptToNullFKsOnRefOrKeySetToNull">
            <summary>Sets the shim of EntityReference.AttemptToNullFKsOnRefOrKeySetToNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.CachedForeignKeyGet">
            <summary>Sets the shim of EntityReference.get_CachedForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.CachedForeignKeyIsConceptualNull">
            <summary>Sets the shim of EntityReference.CachedForeignKeyIsConceptualNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.CanDeferredLoadGet">
            <summary>Sets the shim of EntityReference.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.DetachAllEntityState">
            <summary>Sets the shim of EntityReference.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.DetachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_DetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.DetachedEntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_DetachedEntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityReference.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.GetAllKeyValues">
            <summary>Sets the shim of EntityReference.GetAllKeyValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.GetDependentEndOfReferentialConstraintObject">
            <summary>Sets the shim of EntityReference.GetDependentEndOfReferentialConstraint(Object relatedValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.NavigationPropertyIsNullOrMissing">
            <summary>Sets the shim of EntityReference.NavigationPropertyIsNullOrMissing()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.NullAllForeignKeys">
            <summary>Sets the shim of EntityReference.NullAllForeignKeys()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.SetEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityReference.SetEntityKey(EntityKey value, Boolean forceFixup)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.UpdateDependentEndForeignKeyRelatedEndBoolean">
            <summary>Sets the shim of EntityReference.UpdateDependentEndForeignKey(RelatedEnd targetRelatedEnd, Boolean forceForeignKeyChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.ValidateDetachedEntityKey">
            <summary>Sets the shim of EntityReference.ValidateDetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.VerifyDetachedKeyMatchesEntityKey">
            <summary>Sets the shim of EntityReference.VerifyDetachedKeyMatches(EntityKey entityKey)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.EntityReference`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.#ctor(System.Data.Entity.Core.Objects.DataClasses.EntityReference{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.Bind(System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AttachT0">
            <summary>Sets the shim of EntityReference`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.ClearWrappedValues">
            <summary>Sets the shim of EntityReference`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.Constructor">
            <summary>Sets the shim of EntityReference`1.EntityReference`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.CreateSourceQuery">
            <summary>Sets the shim of EntityReference`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityReference`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.Exclude">
            <summary>Sets the shim of EntityReference`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.ExcludeEntityKey">
            <summary>Sets the shim of EntityReference`1.ExcludeEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.GetInternalEnumerable">
            <summary>Sets the shim of EntityReference`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.HandleRefreshedValueMergeOptionIListOfT0">
            <summary>Sets the shim of EntityReference`1.HandleRefreshedValue(MergeOption mergeOption, IList`1&lt;!0&gt; refreshedValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityReference`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.IncludeEntityKeyBoolean">
            <summary>Sets the shim of EntityReference`1.IncludeEntityKey(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.InitializeWithValueRelatedEnd">
            <summary>Sets the shim of EntityReference`1.InitializeWithValue(RelatedEnd relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.IsEmpty">
            <summary>Sets the shim of EntityReference`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.LoadMergeOption">
            <summary>Sets the shim of EntityReference`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.OnRefDeserializedStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnRefDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.OnRelatedEndClear">
            <summary>Sets the shim of EntityReference`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.ValueGet">
            <summary>Sets the shim of EntityReference`1.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.ValueSetT0">
            <summary>Sets the shim of EntityReference`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityReference`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.AttachT0">
            <summary>Sets the shim of EntityReference`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ClearWrappedValues">
            <summary>Sets the shim of EntityReference`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.CreateSourceQuery">
            <summary>Sets the shim of EntityReference`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityReference`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.Exclude">
            <summary>Sets the shim of EntityReference`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ExcludeEntityKey">
            <summary>Sets the shim of EntityReference`1.ExcludeEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.GetInternalEnumerable">
            <summary>Sets the shim of EntityReference`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.HandleRefreshedValueMergeOptionIListOfT0">
            <summary>Sets the shim of EntityReference`1.HandleRefreshedValue(MergeOption mergeOption, IList`1&lt;!0&gt; refreshedValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityReference`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.IncludeEntityKeyBoolean">
            <summary>Sets the shim of EntityReference`1.IncludeEntityKey(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.InitializeWithValueRelatedEnd">
            <summary>Sets the shim of EntityReference`1.InitializeWithValue(RelatedEnd relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.IsEmpty">
            <summary>Sets the shim of EntityReference`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.LoadMergeOption">
            <summary>Sets the shim of EntityReference`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnRefDeserializedStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnRefDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnRelatedEndClear">
            <summary>Sets the shim of EntityReference`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ValueGet">
            <summary>Sets the shim of EntityReference`1.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of EntityReference`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityReference`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.RelatedEnd</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.#ctor(System.Data.Entity.Core.Objects.DataClasses.RelatedEnd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AddQueryParametersOf1ObjectQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectQuery{``0},System.Boolean})">
            <summary>Sets the shim of RelatedEnd.AddQueryParameters(ObjectQuery`1&lt;!!0&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.Bind(System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CreateSourceQueryOf1MergeOptionBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Objects.MergeOption,System.Boolean,System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.CreateSourceQuery(MergeOption mergeOption, Boolean&amp; hasResults)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.MergeOf1IEnumerableOfM0MergeOptionBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Data.Entity.Core.Objects.MergeOption,System.Boolean})">
            <summary>Sets the shim of RelatedEnd.Merge(IEnumerable`1&lt;!!0&gt; collection, MergeOption mergeOption, Boolean setIsLoaded)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateLoadOf1MergeOptionStringBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Objects.MergeOption,System.String,System.Boolean,System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.ValidateLoad(MergeOption mergeOption, String relatedEndName, Boolean&amp; hasResults)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AddToNavigationPropertyIfCompatibleRelatedEnd">
            <summary>Sets the shim of RelatedEnd.AddToNavigationPropertyIfCompatible(RelatedEnd otherRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AppendEntitySetStringBuilderEntitySetEntityTypeBoolean">
            <summary>Sets the shim of RelatedEnd.AppendEntitySet(StringBuilder sourceBuilder, EntitySet targetEntitySet, EntityType targetEntityType, Boolean ofTypeRequired)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AppendKeyParameterRowStringBuilderIListOfEdmMember">
            <summary>Sets the shim of RelatedEnd.AppendKeyParameterRow(StringBuilder sourceBuilder, IList`1&lt;EdmMember&gt; keyMembers)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AttachContextObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AttachContextObjectContextMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CachedForeignKeyIsConceptualNull">
            <summary>Sets the shim of RelatedEnd.CachedForeignKeyIsConceptualNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CanDeferredLoadGet">
            <summary>Sets the shim of RelatedEnd.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckCascadeDeleteFlagRelationshipEndMember">
            <summary>Sets the shim of RelatedEnd.CheckCascadeDeleteFlag(RelationshipEndMember relationEndProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckIfAllPropertiesAreKeyPropertiesStringArrayReadOnlyMetadataCollectionOfEdmProperty">
            <summary>Sets the shim of RelatedEnd.CheckIfAllPropertiesAreKeyProperties(String[] keyMemberNames, ReadOnlyMetadataCollection`1&lt;EdmProperty&gt; toProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckOwnerNull">
            <summary>Sets the shim of RelatedEnd.CheckOwnerNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckRelationEntitySetEntitySet">
            <summary>Sets the shim of RelatedEnd.CheckRelationEntitySet(EntitySet set)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.Constructor">
            <summary>Sets the shim of RelatedEnd.RelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.DefaultMergeOptionGet">
            <summary>Sets the shim of RelatedEnd.get_DefaultMergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.DeferredLoad">
            <summary>Sets the shim of RelatedEnd.DeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.DetachAllEntityState">
            <summary>Sets the shim of RelatedEnd.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.DetachContext">
            <summary>Sets the shim of RelatedEnd.DetachContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.EnsureRelationshipNavigationAccessorsInitialized">
            <summary>Sets the shim of RelatedEnd.EnsureRelationshipNavigationAccessorsInitialized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.FindRelationshipSetObjectContextEntitySetEdmTypeOutRelationshipSetOut">
            <summary>Sets the shim of RelatedEnd.FindRelationshipSet(ObjectContext context, EntitySet entitySet, EdmType&amp; relationshipType, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.FromEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.GenerateQueryText">
            <summary>Sets the shim of RelatedEnd.GenerateQueryText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.GetCurrentValueFromEntityEdmMember">
            <summary>Sets the shim of RelatedEnd.GetCurrentValueFromEntity(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.GetEnumerator">
            <summary>Sets the shim of RelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.GetTargetEntitySetFromRelationshipSet">
            <summary>Sets the shim of RelatedEnd.GetTargetEntitySetFromRelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsDependentEndOfReferentialConstraintBoolean">
            <summary>Sets the shim of RelatedEnd.IsDependentEndOfReferentialConstraint(Boolean checkIdentifying)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsForeignKeyGet">
            <summary>Sets the shim of RelatedEnd.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsLoadedGet">
            <summary>Sets the shim of RelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsLoadedSetBoolean">
            <summary>Sets the shim of RelatedEnd.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsPrincipalEndOfReferentialConstraint">
            <summary>Sets the shim of RelatedEnd.IsPrincipalEndOfReferentialConstraint()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.IsValidEntityKeyTypeEntityKey">
            <summary>Sets the shim of RelatedEnd.IsValidEntityKeyType(EntityKey entityKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.Load">
            <summary>Sets the shim of RelatedEnd.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.MarkForeignKeyPropertiesModified">
            <summary>Sets the shim of RelatedEnd.MarkForeignKeyPropertiesModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.NavigationPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_NavigationProperty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ObjectContextGet">
            <summary>Sets the shim of RelatedEnd.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of RelatedEnd.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelatedEnd.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationMetadataGet">
            <summary>Sets the shim of RelatedEnd.get_RelationMetadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationshipNameGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationshipSetGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.RemoveAll">
            <summary>Sets the shim of RelatedEnd.RemoveAll()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SourceRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SynchronizeContextsRelatedEndBooleanBoolean">
            <summary>Sets the shim of RelatedEnd.SynchronizeContexts(RelatedEnd targetRelatedEnd, Boolean relationshipAlreadyExists, Boolean addRelationshipAsUnchanged)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndAddIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndAddObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndAttachIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndAttachObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndCreateSourceQuery">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndRemoveIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataEntityCoreObjectsDataClassesIRelatedEndRemoveObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.TargetRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ToEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.UpdateDependentEndForeignKeyRelatedEndBoolean">
            <summary>Sets the shim of RelatedEnd.UpdateDependentEndForeignKey(RelatedEnd targetRelatedEnd, Boolean forceForeignKeyChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.UsingNoTrackingGet">
            <summary>Sets the shim of RelatedEnd.get_UsingNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateContextsAreCompatibleRelatedEnd">
            <summary>Sets the shim of RelatedEnd.ValidateContextsAreCompatible(RelatedEnd targetRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateDetachedEntityKey">
            <summary>Sets the shim of RelatedEnd.ValidateDetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateOwnerForAttach">
            <summary>Sets the shim of RelatedEnd.ValidateOwnerForAttach()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.VerifyDetachedKeyMatchesEntityKey">
            <summary>Sets the shim of RelatedEnd.VerifyDetachedKeyMatches(EntityKey entityKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.VerifyRIConstraintsWithRelatedEntryReferentialConstraintFuncOfStringObjectEntityKey">
            <summary>Sets the shim of RelatedEnd.VerifyRIConstraintsWithRelatedEntry(ReferentialConstraint constraint, Func`2&lt;String,Object&gt; getDependentPropertyValue, EntityKey principalKey)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AddQueryParametersOf1ObjectQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.DataClasses.RelatedEnd,System.Data.Entity.Core.Objects.ObjectQuery{``0},System.Boolean})">
            <summary>Sets the shim of RelatedEnd.AddQueryParameters(ObjectQuery`1&lt;!!0&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CreateSourceQueryOf1MergeOptionBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Objects.DataClasses.RelatedEnd,System.Data.Entity.Core.Objects.MergeOption,System.Boolean,System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.CreateSourceQuery(MergeOption mergeOption, Boolean&amp; hasResults)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.MergeOf1IEnumerableOfM0MergeOptionBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.DataClasses.RelatedEnd,System.Collections.Generic.IEnumerable{``0},System.Data.Entity.Core.Objects.MergeOption,System.Boolean})">
            <summary>Sets the shim of RelatedEnd.Merge(IEnumerable`1&lt;!!0&gt; collection, MergeOption mergeOption, Boolean setIsLoaded)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateLoadOf1MergeOptionStringBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Entity.Core.Objects.DataClasses.RelatedEnd,System.Data.Entity.Core.Objects.MergeOption,System.String,System.Boolean,System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.ValidateLoad(MergeOption mergeOption, String relatedEndName, Boolean&amp; hasResults)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AddToNavigationPropertyIfCompatibleRelatedEnd">
            <summary>Sets the shim of RelatedEnd.AddToNavigationPropertyIfCompatible(RelatedEnd otherRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AttachContextObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AttachContextObjectContextMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CachedForeignKeyIsConceptualNull">
            <summary>Sets the shim of RelatedEnd.CachedForeignKeyIsConceptualNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CanDeferredLoadGet">
            <summary>Sets the shim of RelatedEnd.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CheckOwnerNull">
            <summary>Sets the shim of RelatedEnd.CheckOwnerNull()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CheckRelationEntitySetEntitySet">
            <summary>Sets the shim of RelatedEnd.CheckRelationEntitySet(EntitySet set)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DefaultMergeOptionGet">
            <summary>Sets the shim of RelatedEnd.get_DefaultMergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DeferredLoad">
            <summary>Sets the shim of RelatedEnd.DeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DetachAllEntityState">
            <summary>Sets the shim of RelatedEnd.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DetachContext">
            <summary>Sets the shim of RelatedEnd.DetachContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.EnsureRelationshipNavigationAccessorsInitialized">
            <summary>Sets the shim of RelatedEnd.EnsureRelationshipNavigationAccessorsInitialized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.FindRelationshipSetObjectContextEntitySetEdmTypeOutRelationshipSetOut">
            <summary>Sets the shim of RelatedEnd.FindRelationshipSet(ObjectContext context, EntitySet entitySet, EdmType&amp; relationshipType, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.FromEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GenerateQueryText">
            <summary>Sets the shim of RelatedEnd.GenerateQueryText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GetCurrentValueFromEntityEdmMember">
            <summary>Sets the shim of RelatedEnd.GetCurrentValueFromEntity(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GetEnumerator">
            <summary>Sets the shim of RelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GetTargetEntitySetFromRelationshipSet">
            <summary>Sets the shim of RelatedEnd.GetTargetEntitySetFromRelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsDependentEndOfReferentialConstraintBoolean">
            <summary>Sets the shim of RelatedEnd.IsDependentEndOfReferentialConstraint(Boolean checkIdentifying)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of RelatedEnd.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsLoadedGet">
            <summary>Sets the shim of RelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of RelatedEnd.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsPrincipalEndOfReferentialConstraint">
            <summary>Sets the shim of RelatedEnd.IsPrincipalEndOfReferentialConstraint()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.Load">
            <summary>Sets the shim of RelatedEnd.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.MarkForeignKeyPropertiesModified">
            <summary>Sets the shim of RelatedEnd.MarkForeignKeyPropertiesModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.NavigationPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_NavigationProperty()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ObjectContextGet">
            <summary>Sets the shim of RelatedEnd.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of RelatedEnd.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelatedEnd.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationMetadataGet">
            <summary>Sets the shim of RelatedEnd.get_RelationMetadata()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationshipSetGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RemoveAll">
            <summary>Sets the shim of RelatedEnd.RemoveAll()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SourceRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SynchronizeContextsRelatedEndBooleanBoolean">
            <summary>Sets the shim of RelatedEnd.SynchronizeContexts(RelatedEnd targetRelatedEnd, Boolean relationshipAlreadyExists, Boolean addRelationshipAsUnchanged)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndAddIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndAddObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndAttachIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndAttachObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndCreateSourceQuery">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndRemoveIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataEntityCoreObjectsDataClassesIRelatedEndRemoveObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.TargetRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ToEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.UpdateDependentEndForeignKeyRelatedEndBoolean">
            <summary>Sets the shim of RelatedEnd.UpdateDependentEndForeignKey(RelatedEnd targetRelatedEnd, Boolean forceForeignKeyChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.UsingNoTrackingGet">
            <summary>Sets the shim of RelatedEnd.get_UsingNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateContextsAreCompatibleRelatedEnd">
            <summary>Sets the shim of RelatedEnd.ValidateContextsAreCompatible(RelatedEnd targetRelatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateDetachedEntityKey">
            <summary>Sets the shim of RelatedEnd.ValidateDetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateOwnerForAttach">
            <summary>Sets the shim of RelatedEnd.ValidateOwnerForAttach()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.VerifyDetachedKeyMatchesEntityKey">
            <summary>Sets the shim of RelatedEnd.VerifyDetachedKeyMatches(EntityKey entityKey)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.RelationshipManager</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.#ctor(System.Data.Entity.Core.Objects.DataClasses.RelationshipManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedCollectionOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedCollection(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedReferenceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedReference(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.InitializeRelatedCollectionOf1StringStringEntityCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedCollection(String relationshipName, String targetRoleName, EntityCollection`1&lt;!!0&gt; entityCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.InitializeRelatedReferenceOf1StringStringEntityReferenceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedReference(String relationshipName, String targetRoleName, EntityReference`1&lt;!!0&gt; entityReference)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.RemergeCollectionsOf1EntityCollectionOfM0EntityCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0},System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.RemergeCollections(EntityCollection`1&lt;!!0&gt; previousCollection, EntityCollection`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AddRelatedEntitiesToObjectStateManagerBoolean">
            <summary>Sets the shim of RelationshipManager.AddRelatedEntitiesToObjectStateManager(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AttachContextToRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.AttachContextToRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.ClearRelatedEndWrappers">
            <summary>Sets the shim of RelationshipManager.ClearRelatedEndWrappers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.Constructor">
            <summary>Sets the shim of RelationshipManager.RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.Create">
            <summary>Sets the shim of RelationshipManager.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.CreateIEntityWithRelationships">
            <summary>Sets the shim of RelationshipManager.Create(IEntityWithRelationships owner)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.DetachContextFromRelatedEnds">
            <summary>Sets the shim of RelationshipManager.DetachContextFromRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.DetachEntityFromRelationshipsEntityState">
            <summary>Sets the shim of RelationshipManager.DetachEntityFromRelationships(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.EnsureRelationshipsInitialized">
            <summary>Sets the shim of RelationshipManager.EnsureRelationshipsInitialized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetAllRelatedEnds">
            <summary>Sets the shim of RelationshipManager.GetAllRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetAllTargetEndsEntityTypeEntitySet">
            <summary>Sets the shim of RelationshipManager.GetAllTargetEnds(EntityType ownerEntityType, EntitySet ownerEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetAllTargetEndsType">
            <summary>Sets the shim of RelationshipManager.GetAllTargetEnds(Type entityClrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndInternalStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndInternalStringStringRelatedEndAssociationType">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName, RelatedEnd existingRelatedEnd, AssociationType relationship)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndInternalStringStringRelatedEndAssociationTypeBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName, RelatedEnd existingRelatedEnd, AssociationType relationship, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndStringBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String navigationProperty, Boolean throwArgumentException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelationshipTypeString">
            <summary>Sets the shim of RelationshipManager.GetRelationshipType(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.HasRelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_HasRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.NodeVisitedGet">
            <summary>Sets the shim of RelationshipManager.get_NodeVisited()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.NodeVisitedSetBoolean">
            <summary>Sets the shim of RelationshipManager.set_NodeVisited(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal">
            <summary>Sets the shim of RelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.OnSerializingStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.PrependNamespaceToRelationshipNameString">
            <summary>Sets the shim of RelationshipManager.PrependNamespaceToRelationshipName(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.RelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_Relationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.RemoveEntityFromRelationships">
            <summary>Sets the shim of RelationshipManager.RemoveEntityFromRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.ResetContextOnRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.ResetContextOnRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.TryGetCachedRelatedEndStringStringRelatedEndOut">
            <summary>Sets the shim of RelationshipManager.TryGetCachedRelatedEnd(String relationshipName, String targetRoleName, RelatedEnd&amp; relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.TryGetOwnerEntityTypeEntityTypeOut">
            <summary>Sets the shim of RelationshipManager.TryGetOwnerEntityType(EntityType&amp; entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.VerifyIsNotRelated">
            <summary>Sets the shim of RelationshipManager.VerifyIsNotRelated()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.VerifyRelationshipAssociationTypeStringBoolean">
            <summary>Sets the shim of RelationshipManager.VerifyRelationship(AssociationType relationship, String sourceEndName, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager._GetRelationshipTypeb__7RelatedEnd">
            <summary>Sets the shim of RelationshipManager.&lt;GetRelationshipType&gt;b__7(RelatedEnd e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager._PrependNamespaceToRelationshipNameb__0RelatedEnd">
            <summary>Sets the shim of RelationshipManager.&lt;PrependNamespaceToRelationshipName&gt;b__0(RelatedEnd r)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedCollectionOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedCollection(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedReferenceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedReference(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.InitializeRelatedCollectionOf1StringStringEntityCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedCollection(String relationshipName, String targetRoleName, EntityCollection`1&lt;!!0&gt; entityCollection)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.InitializeRelatedReferenceOf1StringStringEntityReferenceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedReference(String relationshipName, String targetRoleName, EntityReference`1&lt;!!0&gt; entityReference)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.AddRelatedEntitiesToObjectStateManagerBoolean">
            <summary>Sets the shim of RelationshipManager.AddRelatedEntitiesToObjectStateManager(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.AttachContextToRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.AttachContextToRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.ClearRelatedEndWrappers">
            <summary>Sets the shim of RelationshipManager.ClearRelatedEndWrappers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.DetachContextFromRelatedEnds">
            <summary>Sets the shim of RelationshipManager.DetachContextFromRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.DetachEntityFromRelationshipsEntityState">
            <summary>Sets the shim of RelationshipManager.DetachEntityFromRelationships(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.EnsureRelationshipsInitialized">
            <summary>Sets the shim of RelationshipManager.EnsureRelationshipsInitialized()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.FindNamesOfReferentialConstraintPropertiesListOfStringOutBooleanOutBoolean">
            <summary>Sets the shim of RelationshipManager.FindNamesOfReferentialConstraintProperties(List`1&lt;String&gt;&amp; propertiesToRetrieve, Boolean&amp; propertiesToPropagateExist, Boolean skipFK)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetAllRelatedEnds">
            <summary>Sets the shim of RelationshipManager.GetAllRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetAllTargetEndsEntityTypeEntitySet">
            <summary>Sets the shim of RelationshipManager.GetAllTargetEnds(EntityType ownerEntityType, EntitySet ownerEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetAllTargetEndsType">
            <summary>Sets the shim of RelationshipManager.GetAllTargetEnds(Type entityClrType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndInternalStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndInternalStringStringRelatedEndAssociationType">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName, RelatedEnd existingRelatedEnd, AssociationType relationship)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndInternalStringStringRelatedEndAssociationTypeBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName, RelatedEnd existingRelatedEnd, AssociationType relationship, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndStringBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String navigationProperty, Boolean throwArgumentException)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelationshipTypeString">
            <summary>Sets the shim of RelationshipManager.GetRelationshipType(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.HasRelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_HasRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NodeVisitedGet">
            <summary>Sets the shim of RelationshipManager.get_NodeVisited()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NodeVisitedSetBoolean">
            <summary>Sets the shim of RelationshipManager.set_NodeVisited(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NullAllFKsInDependentsForWhichThisIsThePrincipal">
            <summary>Sets the shim of RelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.PrependNamespaceToRelationshipNameString">
            <summary>Sets the shim of RelationshipManager.PrependNamespaceToRelationshipName(String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.RelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_Relationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.RemoveEntityFromRelationships">
            <summary>Sets the shim of RelationshipManager.RemoveEntityFromRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.ResetContextOnRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.ResetContextOnRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.TryGetCachedRelatedEndStringStringRelatedEndOut">
            <summary>Sets the shim of RelationshipManager.TryGetCachedRelatedEnd(String relationshipName, String targetRoleName, RelatedEnd&amp; relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.TryGetOwnerEntityTypeEntityTypeOut">
            <summary>Sets the shim of RelationshipManager.TryGetOwnerEntityType(EntityType&amp; entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.VerifyIsNotRelated">
            <summary>Sets the shim of RelationshipManager.VerifyIsNotRelated()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.VerifyRelationshipAssociationTypeStringBoolean">
            <summary>Sets the shim of RelationshipManager.VerifyRelationship(AssociationType relationship, String sourceEndName, Boolean throwOnError)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject">
            <summary>Shim type of System.Data.Entity.Core.Objects.DataClasses.StructuralObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.#ctor(System.Data.Entity.Core.Objects.DataClasses.StructuralObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.GetValidValueOf1M0StringBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of StructuralObject.GetValidValue(!!0 currentValue, String property, Boolean isNullable, Boolean isInitialized)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueOf1M0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.SetValidValue(!!0 oldValue, !!0 newValue, String property)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.VerifyComplexObjectIsNotNullOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.VerifyComplexObjectIsNotNull(!!0 complexObject, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.BinaryEqualsByteArrayByteArray">
            <summary>Sets the shim of StructuralObject.BinaryEquals(Byte[] first, Byte[] second)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.Constructor">
            <summary>Sets the shim of StructuralObject.StructuralObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.DefaultDateTimeValue">
            <summary>Sets the shim of StructuralObject.DefaultDateTimeValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.GetValidValueByteArray">
            <summary>Sets the shim of StructuralObject.GetValidValue(Byte[] currentValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.OnPropertyChangedString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.OnPropertyChangingString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.ReportPropertyChangedString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.ReportPropertyChangingString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Boolean value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteArrayBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte[] value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteArrayBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte[] value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTime">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTime value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeOffset">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTimeOffset value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeOffsetString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTimeOffset value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTime value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeographyBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeography value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeographyBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeography value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeometryBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeometry value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeometryBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeometry value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDecimal">
            <summary>Sets the shim of StructuralObject.SetValidValue(Decimal value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDecimalString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Decimal value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDouble">
            <summary>Sets the shim of StructuralObject.SetValidValue(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDoubleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Double value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueGuid">
            <summary>Sets the shim of StructuralObject.SetValidValue(Guid value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueGuidString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Guid value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int16 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int16 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int32 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int64 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Boolean&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Byte&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTime">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeOffset">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeOffsetString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTimeOffset&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTime&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDecimal">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDecimalString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Decimal&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDouble">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDoubleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Double&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfGuid">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfGuidString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Guid&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int16&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int32&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int64&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;SByte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;SByte&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSingle">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSingleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Single&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfTimeSpan">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfTimeSpanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;TimeSpan&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt16&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt32&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt64&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(SByte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(SByte value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSingle">
            <summary>Sets the shim of StructuralObject.SetValidValue(Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSingleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Single value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueStringBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(String value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueStringBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(String value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueTimeSpan">
            <summary>Sets the shim of StructuralObject.SetValidValue(TimeSpan value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueTimeSpanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(TimeSpan value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt16 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt16 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt32 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt64 value, String propertyName)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.GetValidValueOf1M0StringBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.DataClasses.StructuralObject,``0,System.String,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of StructuralObject.GetValidValue(!!0 currentValue, String property, Boolean isNullable, Boolean isInitialized)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.SetValidValueOf1M0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.DataClasses.StructuralObject,``0,``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.SetValidValue(!!0 oldValue, !!0 newValue, String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.OnPropertyChangedString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.OnPropertyChangingString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.ComplexObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.InitializeStub">
            <summary>Initializes a new instance of type StubComplexObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChanged(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChangedString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChanging(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChangingString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubComplexObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.EntityObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.InitializeStub">
            <summary>Initializes a new instance of type StubEntityObject</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChanged(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChangedString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChanging(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChangingString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubEntityObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.#ctor">
            <summary>Initializes a new instance of type StubIEntityChangeTracker</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityComplexMemberChangedStringObjectString">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityComplexMemberChangingStringObjectString">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityMemberChangedString">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityMemberChangingString">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityStateGet">
            <summary>Sets the stub of IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanged(System.String,System.Object,System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanging(System.String,System.Object,System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanged(System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanging(System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityState">
            <summary>Sets the stub of IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithChangeTracker</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.SetChangeTrackerIEntityChangeTracker">
            <summary>Sets the stub of IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker)">
            <summary>Sets the stub of IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithKey</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey.AttachBackingFieldToEntityKey">
            <summary>Attaches delegates to emulate StubIEntityWithKey.EntityKey as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey.EntityKeyGet">
            <summary>Sets the stub of IEntityWithKey.get_EntityKey()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey.EntityKeySetEntityKey">
            <summary>Sets the stub of IEntityWithKey.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithKey.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityWithKey#EntityKey">
            <summary>Sets the stub of IEntityWithKey.get_EntityKey()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithRelationships">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithRelationships.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithRelationships</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithRelationships.RelationshipManagerGet">
            <summary>Sets the stub of IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIEntityWithRelationships.ef::System#Data#Entity#Core#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
            <summary>Sets the stub of IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd">
            <summary>Stub type of System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.#ctor">
            <summary>Initializes a new instance of type StubIRelatedEnd</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.AddIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.AddObject">
            <summary>Sets the stub of IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.AttachBackingFieldToIsLoaded">
            <summary>Attaches delegates to emulate StubIRelatedEnd.IsLoaded as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.AttachIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.AttachObject">
            <summary>Sets the stub of IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.CreateSourceQuery">
            <summary>Sets the stub of IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.GetEnumerator">
            <summary>Sets the stub of IRelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.IsLoadedGet">
            <summary>Sets the stub of IRelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.IsLoadedSetBoolean">
            <summary>Sets the stub of IRelatedEnd.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.Load">
            <summary>Sets the stub of IRelatedEnd.Load()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.LoadMergeOption">
            <summary>Sets the stub of IRelatedEnd.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.RelationshipNameGet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.RelationshipSetGet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.RemoveIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.RemoveObject">
            <summary>Sets the stub of IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.SourceRoleNameGet">
            <summary>Sets the stub of IRelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Add(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Add(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Attach(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
            <summary>Sets the stub of IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#GetEnumerator">
            <summary>Sets the stub of IRelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Load">
            <summary>Sets the stub of IRelatedEnd.Load()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Load(System.Data.Entity.Core.Objects.MergeOption)">
            <summary>Sets the stub of IRelatedEnd.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Remove(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.TargetRoleNameGet">
            <summary>Sets the stub of IRelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#IsLoaded">
            <summary>Sets the stub of IRelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#RelationshipName">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#RelationshipSet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#SourceRoleName">
            <summary>Sets the stub of IRelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.DataClasses.Fakes.StubIRelatedEnd.ef::System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#TargetRoleName">
            <summary>Sets the stub of IRelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery">
            <summary>Shim type of System.Data.Entity.Core.Objects.CompiledQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.#ctor(System.Data.Entity.Core.Objects.CompiledQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf10ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`10&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf11ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10``11(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`11&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf12ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11``12(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`12&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf13ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12``13(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`13&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf14ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13``14(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`14&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf15ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14``15(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`15&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf16ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15``16(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`16&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf17ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15M16``17(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`17&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15,!!16&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf3ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Func{``0,``1,``2}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf4ExpressionOfFuncOfM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Func{``0,``1,``2,``3}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`4&lt;!!0,!!1,!!2,!!3&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf5ExpressionOfFuncOfM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}},System.Func{``0,``1,``2,``3,``4}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`5&lt;!!0,!!1,!!2,!!3,!!4&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf6ExpressionOfFuncOfM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}},System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`6&lt;!!0,!!1,!!2,!!3,!!4,!!5&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf7ExpressionOfFuncOfM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}},System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`7&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf8ExpressionOfFuncOfM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`8&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.CompileOf9ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`9&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.ExecuteQueryOf1ObjectContextObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Object[],``0})">
            <summary>Sets the shim of CompiledQuery.ExecuteQuery(ObjectContext context, Object[] parameterValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf10M0M1M2M3M4M5M6M7M8``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf11M0M1M2M3M4M5M6M7M8M9``11(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf12M0M1M2M3M4M5M6M7M8M9M10``12(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf13M0M1M2M3M4M5M6M7M8M9M10M11``13(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf14M0M1M2M3M4M5M6M7M8M9M10M11M12``14(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf15M0M1M2M3M4M5M6M7M8M9M10M11M12M13``15(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf16M0M1M2M3M4M5M6M7M8M9M10M11M12M13M14``16(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13, !!14 arg14)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf17M0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15``17(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13, !!14 arg14, !!15 arg15)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf3M0M1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf4M0M1M2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf5M0M1M2M3``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf6M0M1M2M3M4``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf7M0M1M2M3M4M5``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf8M0M1M2M3M4M5M6``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.InvokeOf9M0M1M2M3M4M5M6M7``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.ConstructorLambdaExpression">
            <summary>Sets the shim of CompiledQuery.CompiledQuery(LambdaExpression query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.GetElementTypeTypeBooleanOut">
            <summary>Sets the shim of CompiledQuery.GetElementType(Type resultType, Boolean&amp; isSingleton)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.ExecuteQueryOf1ObjectContextObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,System.Data.Entity.Core.Objects.ObjectContext,System.Object[],``0})">
            <summary>Sets the shim of CompiledQuery.ExecuteQuery(ObjectContext context, Object[] parameterValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf10M0M1M2M3M4M5M6M7M8``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf11M0M1M2M3M4M5M6M7M8M9``11(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf12M0M1M2M3M4M5M6M7M8M9M10``12(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf13M0M1M2M3M4M5M6M7M8M9M10M11``13(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf14M0M1M2M3M4M5M6M7M8M9M10M11M12``14(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf15M0M1M2M3M4M5M6M7M8M9M10M11M12M13``15(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf16M0M1M2M3M4M5M6M7M8M9M10M11M12M13M14``16(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13, !!14 arg14)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf17M0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15``17(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7, !!8 arg8, !!9 arg9, !!10 arg10, !!11 arg11, !!12 arg12, !!13 arg13, !!14 arg14, !!15 arg15)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf3M0M1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf4M0M1M2``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf5M0M1M2M3``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf6M0M1M2M3M4``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf7M0M1M2M3M4M5``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf8M0M1M2M3M4M5M6``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCompiledQuery.AllInstances.InvokeOf9M0M1M2M3M4M5M6M7``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.CompiledQuery,``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>Sets the shim of CompiledQuery.Invoke(!!0 arg0, !!1 arg1, !!2 arg2, !!3 arg3, !!4 arg4, !!5 arg5, !!6 arg6, !!7 arg7)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord">
            <summary>Shim type of System.Data.Entity.Core.Objects.CurrentValueRecord</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.#ctor(System.Data.Entity.Core.Objects.CurrentValueRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.Bind(System.Data.Entity.Core.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.ConstructorObjectStateEntry">
            <summary>Sets the shim of CurrentValueRecord.CurrentValueRecord(ObjectStateEntry cacheEntry)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimCurrentValueRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord">
            <summary>Shim type of System.Data.Entity.Core.Objects.DbUpdatableDataRecord</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.#ctor(System.Data.Entity.Core.Objects.DbUpdatableDataRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.Data.Entity.Core.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.ConstructorObjectStateEntry">
            <summary>Sets the shim of DbUpdatableDataRecord.DbUpdatableDataRecord(ObjectStateEntry cacheEntry)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.DataRecordInfoGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.FieldCountGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetBooleanInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetByteInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBytes(Int32 i, Int64 dataIndex, Byte[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetCharInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChars(Int32 i, Int64 dataIndex, Char[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataRecordInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataTypeNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDateTimeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDbDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDbDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDecimalInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetDoubleInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetFieldTypeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetFloatInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetGuidInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt16Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt64Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetOrdinalString">
            <summary>Sets the shim of DbUpdatableDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetStringInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetValueInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.GetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.IsDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.ItemGetInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.ItemGetString">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetBooleanInt32Boolean">
            <summary>Sets the shim of DbUpdatableDataRecord.SetBoolean(Int32 ordinal, Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetByteInt32Byte">
            <summary>Sets the shim of DbUpdatableDataRecord.SetByte(Int32 ordinal, Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetCharInt32Char">
            <summary>Sets the shim of DbUpdatableDataRecord.SetChar(Int32 ordinal, Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetDataRecordInt32IDataRecord">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDataRecord(Int32 ordinal, IDataRecord value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetDateTimeInt32DateTime">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDateTime(Int32 ordinal, DateTime value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetDecimalInt32Decimal">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDecimal(Int32 ordinal, Decimal value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetDoubleInt32Double">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDouble(Int32 ordinal, Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetFloatInt32Single">
            <summary>Sets the shim of DbUpdatableDataRecord.SetFloat(Int32 ordinal, Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetGuidInt32Guid">
            <summary>Sets the shim of DbUpdatableDataRecord.SetGuid(Int32 ordinal, Guid value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt16Int32Int16">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt16(Int32 ordinal, Int16 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt32Int32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt32(Int32 ordinal, Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt64Int32Int64">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt64(Int32 ordinal, Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetStringInt32String">
            <summary>Sets the shim of DbUpdatableDataRecord.SetString(Int32 ordinal, String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetValueInt32Object">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValue(Int32 ordinal, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.SystemDataIDataRecordGetDataInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.System.Data.IDataRecord.GetData(Int32 ordinal)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.DataRecordInfoGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.FieldCountGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetByteInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBytes(Int32 i, Int64 dataIndex, Byte[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetCharInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChars(Int32 i, Int64 dataIndex, Char[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataRecordInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDbDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDbDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetFieldTypeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetFloatInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetGuidInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt16Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt64Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetOrdinalString">
            <summary>Sets the shim of DbUpdatableDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetStringInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetValueInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.ItemGetString">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetBooleanInt32Boolean">
            <summary>Sets the shim of DbUpdatableDataRecord.SetBoolean(Int32 ordinal, Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetByteInt32Byte">
            <summary>Sets the shim of DbUpdatableDataRecord.SetByte(Int32 ordinal, Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetCharInt32Char">
            <summary>Sets the shim of DbUpdatableDataRecord.SetChar(Int32 ordinal, Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDataRecordInt32IDataRecord">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDataRecord(Int32 ordinal, IDataRecord value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDateTimeInt32DateTime">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDateTime(Int32 ordinal, DateTime value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDecimalInt32Decimal">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDecimal(Int32 ordinal, Decimal value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDoubleInt32Double">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDouble(Int32 ordinal, Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetFloatInt32Single">
            <summary>Sets the shim of DbUpdatableDataRecord.SetFloat(Int32 ordinal, Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetGuidInt32Guid">
            <summary>Sets the shim of DbUpdatableDataRecord.SetGuid(Int32 ordinal, Guid value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt16Int32Int16">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt16(Int32 ordinal, Int16 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt32Int32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt32(Int32 ordinal, Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt64Int32Int64">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt64(Int32 ordinal, Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetStringInt32String">
            <summary>Sets the shim of DbUpdatableDataRecord.SetString(Int32 ordinal, String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetValueInt32Object">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValue(Int32 ordinal, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SystemDataIDataRecordGetDataInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.System.Data.IDataRecord.GetData(Int32 ordinal)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions">
            <summary>Shim type of System.Data.Entity.Core.Objects.ExecutionOptions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.#ctor(System.Data.Entity.Core.Objects.ExecutionOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.ConstructorMergeOption">
            <summary>Sets the shim of ExecutionOptions.ExecutionOptions(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.ConstructorMergeOptionBoolean">
            <summary>Sets the shim of ExecutionOptions.ExecutionOptions(MergeOption mergeOption, Boolean streaming)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.ConstructorMergeOptionNullableOfBoolean">
            <summary>Sets the shim of ExecutionOptions.ExecutionOptions(MergeOption mergeOption, Nullable`1&lt;Boolean&gt; streaming)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.EqualityOpExecutionOptionsExecutionOptions">
            <summary>Sets the shim of ExecutionOptions.op_Equality(ExecutionOptions left, ExecutionOptions right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.EqualsObject">
            <summary>Sets the shim of ExecutionOptions.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.GetHashCode">
            <summary>Sets the shim of ExecutionOptions.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.InequalityOpExecutionOptionsExecutionOptions">
            <summary>Sets the shim of ExecutionOptions.op_Inequality(ExecutionOptions left, ExecutionOptions right)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.MergeOptionGet">
            <summary>Sets the shim of ExecutionOptions.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.MergeOptionSetMergeOption">
            <summary>Sets the shim of ExecutionOptions.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.StaticConstructor">
            <summary>Sets the shim of ExecutionOptions.ExecutionOptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.StreamingGet">
            <summary>Sets the shim of ExecutionOptions.get_Streaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.UserSpecifiedStreamingGet">
            <summary>Sets the shim of ExecutionOptions.get_UserSpecifiedStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.UserSpecifiedStreamingSetNullableOfBoolean">
            <summary>Sets the shim of ExecutionOptions.set_UserSpecifiedStreaming(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.EqualsObject">
            <summary>Sets the shim of ExecutionOptions.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.GetHashCode01">
            <summary>Sets the shim of ExecutionOptions.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.MergeOptionGet">
            <summary>Sets the shim of ExecutionOptions.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.MergeOptionSetMergeOption">
            <summary>Sets the shim of ExecutionOptions.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.StreamingGet">
            <summary>Sets the shim of ExecutionOptions.get_Streaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.UserSpecifiedStreamingGet">
            <summary>Sets the shim of ExecutionOptions.get_UserSpecifiedStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimExecutionOptions.AllInstances.UserSpecifiedStreamingSetNullableOfBoolean">
            <summary>Sets the shim of ExecutionOptions.set_UserSpecifiedStreaming(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectContext</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.#ctor(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ApplyCurrentValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ApplyOriginalValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateFunctionObjectResultOf1EntityCommandReadOnlyCollectionOfEntitySetEdmTypeArrayExecutionOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.EntityClient.EntityCommand,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Metadata.Edm.EntitySet},System.Data.Entity.Core.Metadata.Edm.EdmType[],System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.CreateFunctionObjectResult(EntityCommand entityCommand, ReadOnlyCollection`1&lt;EntitySet&gt; entitySets, EdmType[] edmTypes, ExecutionOptions executionOptions)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ObjectContext.CreateObject()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateObjectSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateObjectSetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateQueryOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectContext.CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.EnsureContextIsEnlistedInCurrentTransactionOf1TransactionFuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Transactions.Transaction,System.Func{``0},``0,``0})">
            <summary>Sets the shim of ObjectContext.EnsureContextIsEnlistedInCurrentTransaction(Transaction currentTransaction, Func`1&lt;!!0&gt; openConnection, !!0 defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteFunctionOf1StringExecutionOptionsObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ExecutionOptions executionOptions, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteFunctionOf1StringMergeOptionObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteFunctionOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteInTransactionOf1FuncOfM0IDbExecutionStrategyBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Data.Entity.Infrastructure.IDbExecutionStrategy,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of ObjectContext.ExecuteInTransaction(Func`1&lt;!!0&gt; func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryInternalOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQueryInternal(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringStringMergeOptionObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryReliablyOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQueryReliably(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0ObjectMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.Core.Objects.MergeOption})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ParsePropertySelectorExpressionOf1ExpressionOfFuncOfM0ObjectBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String})">
            <summary>Sets the shim of ObjectContext.ParsePropertySelectorExpression(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, Boolean&amp; removedConvert)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.TranslateOf1DbDataReaderStringMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AcceptAllChanges">
            <summary>Sets the shim of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AddObjectStringObject">
            <summary>Sets the shim of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ApplyPropertyChangesStringObject">
            <summary>Sets the shim of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AttachIEntityWithKey">
            <summary>Sets the shim of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AttachToStringObject">
            <summary>Sets the shim of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CommandTimeoutGet">
            <summary>Sets the shim of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of ObjectContext.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConnectionGet">
            <summary>Sets the shim of ObjectContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConnectionStateChangeObjectStateChangeEventArgs">
            <summary>Sets the shim of ObjectContext.ConnectionStateChange(Object sender, StateChangeEventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConstructorEntityConnection">
            <summary>Sets the shim of ObjectContext.ObjectContext(EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConstructorEntityConnectionBoolean">
            <summary>Sets the shim of ObjectContext.ObjectContext(EntityConnection connection, Boolean contextOwnsConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConstructorEntityConnectionString">
            <summary>Sets the shim of ObjectContext.ObjectContext(EntityConnection connection, String defaultContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConstructorString">
            <summary>Sets the shim of ObjectContext.ObjectContext(String connectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ConstructorStringString">
            <summary>Sets the shim of ObjectContext.ObjectContext(String connectionString, String defaultContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ContextOptionsGet">
            <summary>Sets the shim of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ContextOwnsConnectionSetBoolean">
            <summary>Sets the shim of ObjectContext.set_ContextOwnsConnection(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateDatabase">
            <summary>Sets the shim of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateDatabaseScript">
            <summary>Sets the shim of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateEntityConnectionString">
            <summary>Sets the shim of ObjectContext.CreateEntityConnection(String connectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateEntityKeyStringObject">
            <summary>Sets the shim of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateProxyTypesIEnumerableOfType">
            <summary>Sets the shim of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.CreateStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.CreateStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DatabaseExists">
            <summary>Sets the shim of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DefaultContainerNameGet">
            <summary>Sets the shim of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DefaultContainerNameSetString">
            <summary>Sets the shim of ObjectContext.set_DefaultContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DeleteDatabase">
            <summary>Sets the shim of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DeleteObjectObject">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DeleteObjectObjectEntitySet">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DetachObject">
            <summary>Sets the shim of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DetachObjectEntitySet">
            <summary>Sets the shim of ObjectContext.Detach(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DetectChanges">
            <summary>Sets the shim of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.Dispose">
            <summary>Sets the shim of ObjectContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.DisposeBoolean">
            <summary>Sets the shim of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.EnsureConnection">
            <summary>Sets the shim of ObjectContext.EnsureConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteFunctionCommandEntityCommand">
            <summary>Sets the shim of ObjectContext.ExecuteFunctionCommand(EntityCommand entityCommand)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteFunctionStringObjectParameterArray">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ExecuteStoreCommandTransactionalBehaviorStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(TransactionalBehavior transactionalBehavior, String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.FindParameterMetadataEdmFunctionObjectParameterArrayInt32">
            <summary>Sets the shim of ObjectContext.FindParameterMetadata(EdmFunction functionImport, ObjectParameter[] parameters, Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetForNameAndTypeStringTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetForNameAndType(String entitySetName, Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetForTypeTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetForType(Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetFromContainerEntityContainerTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromContainer(EntityContainer container, Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetFromNameString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetNameStringStringObjectContextStringOutStringOut">
            <summary>Sets the shim of ObjectContext.GetEntitySetName(String qualifiedName, String parameterName, ObjectContext context, String&amp; entityset, String&amp; container)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetEntitySetStringString">
            <summary>Sets the shim of ObjectContext.GetEntitySet(String entitySetName, String entityContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetKnownProxyTypes">
            <summary>Sets the shim of ObjectContext.GetKnownProxyTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetObjectByKeyEntityKey">
            <summary>Sets the shim of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetObjectTypeType">
            <summary>Sets the shim of ObjectContext.GetObjectType(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetStoreItemCollection">
            <summary>Sets the shim of ObjectContext.GetStoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.GetTypeUsageType">
            <summary>Sets the shim of ObjectContext.GetTypeUsage(Type entityCLRType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.InMaterializationGet">
            <summary>Sets the shim of ObjectContext.get_InMaterialization()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.InMaterializationSetBoolean">
            <summary>Sets the shim of ObjectContext.set_InMaterialization(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.InitializeMappingViewCacheFactoryDbContext">
            <summary>Sets the shim of ObjectContext.InitializeMappingViewCacheFactory(DbContext owner)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.InterceptionContextGet">
            <summary>Sets the shim of ObjectContext.get_InterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.InterceptionContextSetDbInterceptionContext">
            <summary>Sets the shim of ObjectContext.set_InterceptionContext(DbInterceptionContext value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.IsDisposedGet">
            <summary>Sets the shim of ObjectContext.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.LoadPropertyObjectString">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.LoadPropertyObjectStringMergeOption">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ObjectContextSystemDataEntityInfrastructureIObjectContextAdapterget">
            <summary>Sets the shim of ObjectContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ObjectMaterializedAddObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.add_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ObjectMaterializedRemoveObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.remove_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.OnMaterializedHasHandlersGet">
            <summary>Sets the shim of ObjectContext.get_OnMaterializedHasHandlers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.OnObjectMaterializedObject">
            <summary>Sets the shim of ObjectContext.OnObjectMaterialized(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.OnSavingChanges">
            <summary>Sets the shim of ObjectContext.OnSavingChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.PopulateFunctionImportEntityCommandParametersObjectParameterArrayEdmFunctionEntityCommand">
            <summary>Sets the shim of ObjectContext.PopulateFunctionImportEntityCommandParameters(ObjectParameter[] parameters, EdmFunction functionImport, EntityCommand command)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.PrepareToSaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.PrepareToSaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.QueryProviderGet">
            <summary>Sets the shim of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.RefreshEntitiesRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.RefreshEntities(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.RefreshEntitiesSizeIEnumerable">
            <summary>Sets the shim of ObjectContext.RefreshEntitiesSize(IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.RefreshRefreshModeObject">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ReleaseConnection">
            <summary>Sets the shim of ObjectContext.ReleaseConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.RetrieveMetadataWorkspaceFromConnection">
            <summary>Sets the shim of ObjectContext.RetrieveMetadataWorkspaceFromConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SaveChanges">
            <summary>Sets the shim of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SaveChangesBoolean">
            <summary>Sets the shim of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SaveChangesToStoreSaveOptionsIDbExecutionStrategy">
            <summary>Sets the shim of ObjectContext.SaveChangesToStore(SaveOptions options, IDbExecutionStrategy executionStrategy)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SavingChangesAddEventHandler">
            <summary>Sets the shim of ObjectContext.add_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.SavingChangesRemoveEventHandler">
            <summary>Sets the shim of ObjectContext.remove_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.StaticConstructor">
            <summary>Sets the shim of ObjectContext.ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.TryGetObjectByKeyEntityKeyObjectOut">
            <summary>Sets the shim of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.ValidateEntitySetEntitySetType">
            <summary>Sets the shim of ObjectContext.ValidateEntitySet(EntitySet entitySet, Type entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext._CreateProxyTypesb__1aEntityType">
            <summary>Sets the shim of ObjectContext.&lt;CreateProxyTypes&gt;b__1a(EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext._CreateStoreCommandb__26Object">
            <summary>Sets the shim of ObjectContext.&lt;CreateStoreCommand&gt;b__26(Object p)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext._CreateStoreCommandb__27Object">
            <summary>Sets the shim of ObjectContext.&lt;CreateStoreCommand&gt;b__27(Object p)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext._EnsureConnectionb__0">
            <summary>Sets the shim of ObjectContext.&lt;EnsureConnection&gt;b__0()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext._SaveChangesToStoreb__b">
            <summary>Sets the shim of ObjectContext.&lt;SaveChangesToStore&gt;b__b()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ApplyCurrentValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ApplyOriginalValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateFunctionObjectResultOf1EntityCommandReadOnlyCollectionOfEntitySetEdmTypeArrayExecutionOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.EntityClient.EntityCommand,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Metadata.Edm.EntitySet},System.Data.Entity.Core.Metadata.Edm.EdmType[],System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.CreateFunctionObjectResult(EntityCommand entityCommand, ReadOnlyCollection`1&lt;EntitySet&gt; entitySets, EdmType[] edmTypes, ExecutionOptions executionOptions)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,``0})">
            <summary>Sets the shim of ObjectContext.CreateObject()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectSetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateQueryOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectContext.CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.EnsureContextIsEnlistedInCurrentTransactionOf1TransactionFuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Transactions.Transaction,System.Func{``0},``0,``0})">
            <summary>Sets the shim of ObjectContext.EnsureContextIsEnlistedInCurrentTransaction(Transaction currentTransaction, Func`1&lt;!!0&gt; openConnection, !!0 defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionOf1StringExecutionOptionsObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ExecutionOptions executionOptions, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionOf1StringMergeOptionObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteInTransactionOf1FuncOfM0IDbExecutionStrategyBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Func{``0},System.Data.Entity.Infrastructure.IDbExecutionStrategy,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of ObjectContext.ExecuteInTransaction(Func`1&lt;!!0&gt; func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryInternalOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQueryInternal(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringStringMergeOptionObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryReliablyOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQueryReliably(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.ObjectContext,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyOf1M0ExpressionOfFuncOfM0ObjectMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Core.Objects.ObjectContext,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.Core.Objects.MergeOption})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Data.Common.DbDataReader,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.TranslateOf1DbDataReaderStringMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectContext,System.Data.Common.DbDataReader,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.AcceptAllChanges">
            <summary>Sets the shim of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.AddObjectStringObject">
            <summary>Sets the shim of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ApplyPropertyChangesStringObject">
            <summary>Sets the shim of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.AttachIEntityWithKey">
            <summary>Sets the shim of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.AttachToStringObject">
            <summary>Sets the shim of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of ObjectContext.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ConnectionGet">
            <summary>Sets the shim of ObjectContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ConnectionStateChangeObjectStateChangeEventArgs">
            <summary>Sets the shim of ObjectContext.ConnectionStateChange(Object sender, StateChangeEventArgs e)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ContextOptionsGet">
            <summary>Sets the shim of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ContextOwnsConnectionSetBoolean">
            <summary>Sets the shim of ObjectContext.set_ContextOwnsConnection(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateDatabase">
            <summary>Sets the shim of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateDatabaseScript">
            <summary>Sets the shim of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateEntityCommandForFunctionImportStringEdmFunctionOutObjectParameterArray">
            <summary>Sets the shim of ObjectContext.CreateEntityCommandForFunctionImport(String functionName, EdmFunction&amp; functionImport, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateEntityKeyStringObject">
            <summary>Sets the shim of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateProxyTypesIEnumerableOfType">
            <summary>Sets the shim of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.CreateStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.CreateStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DatabaseExists">
            <summary>Sets the shim of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DefaultContainerNameGet">
            <summary>Sets the shim of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DefaultContainerNameSetString">
            <summary>Sets the shim of ObjectContext.set_DefaultContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DeleteDatabase">
            <summary>Sets the shim of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DeleteObjectObject">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DeleteObjectObjectEntitySet">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DetachObject">
            <summary>Sets the shim of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DetachObjectEntitySet">
            <summary>Sets the shim of ObjectContext.Detach(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DetectChanges">
            <summary>Sets the shim of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.Dispose">
            <summary>Sets the shim of ObjectContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.EnsureConnection">
            <summary>Sets the shim of ObjectContext.EnsureConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionStringObjectParameterArray">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreCommandTransactionalBehaviorStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(TransactionalBehavior transactionalBehavior, String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetForNameAndTypeStringTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetForNameAndType(String entitySetName, Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetForTypeTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetForType(Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetFromContainerEntityContainerTypeString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromContainer(EntityContainer container, Type entityCLRType, String exceptionParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetFromNameString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetStringString">
            <summary>Sets the shim of ObjectContext.GetEntitySet(String entitySetName, String entityContainerName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetObjectByKeyEntityKey">
            <summary>Sets the shim of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetStoreItemCollection">
            <summary>Sets the shim of ObjectContext.GetStoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.GetTypeUsageType">
            <summary>Sets the shim of ObjectContext.GetTypeUsage(Type entityCLRType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.InMaterializationGet">
            <summary>Sets the shim of ObjectContext.get_InMaterialization()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.InMaterializationSetBoolean">
            <summary>Sets the shim of ObjectContext.set_InMaterialization(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.InitializeMappingViewCacheFactoryDbContext">
            <summary>Sets the shim of ObjectContext.InitializeMappingViewCacheFactory(DbContext owner)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.InterceptionContextGet">
            <summary>Sets the shim of ObjectContext.get_InterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.InterceptionContextSetDbInterceptionContext">
            <summary>Sets the shim of ObjectContext.set_InterceptionContext(DbInterceptionContext value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.IsDisposedGet">
            <summary>Sets the shim of ObjectContext.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyObjectString">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyObjectStringMergeOption">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ObjectContextSystemDataEntityInfrastructureIObjectContextAdapterget">
            <summary>Sets the shim of ObjectContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ObjectMaterializedAddObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.add_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ObjectMaterializedRemoveObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.remove_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.OnMaterializedHasHandlersGet">
            <summary>Sets the shim of ObjectContext.get_OnMaterializedHasHandlers()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.OnObjectMaterializedObject">
            <summary>Sets the shim of ObjectContext.OnObjectMaterialized(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.OnSavingChanges">
            <summary>Sets the shim of ObjectContext.OnSavingChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.PopulateFunctionImportEntityCommandParametersObjectParameterArrayEdmFunctionEntityCommand">
            <summary>Sets the shim of ObjectContext.PopulateFunctionImportEntityCommandParameters(ObjectParameter[] parameters, EdmFunction functionImport, EntityCommand command)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.PrepareToSaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.PrepareToSaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.QueryProviderGet">
            <summary>Sets the shim of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.RefreshEntitiesRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.RefreshEntities(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.RefreshRefreshModeObject">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ReleaseConnection">
            <summary>Sets the shim of ObjectContext.ReleaseConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.RetrieveMetadataWorkspaceFromConnection">
            <summary>Sets the shim of ObjectContext.RetrieveMetadataWorkspaceFromConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SaveChanges">
            <summary>Sets the shim of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SaveChangesBoolean">
            <summary>Sets the shim of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SaveChangesToStoreSaveOptionsIDbExecutionStrategy">
            <summary>Sets the shim of ObjectContext.SaveChangesToStore(SaveOptions options, IDbExecutionStrategy executionStrategy)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SavingChangesAddEventHandler">
            <summary>Sets the shim of ObjectContext.add_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.SavingChangesRemoveEventHandler">
            <summary>Sets the shim of ObjectContext.remove_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.TryGetObjectByKeyEntityKeyObjectOut">
            <summary>Sets the shim of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances.ValidateEntitySetEntitySetType">
            <summary>Sets the shim of ObjectContext.ValidateEntitySet(EntitySet entitySet, Type entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances._EnsureConnectionb__0">
            <summary>Sets the shim of ObjectContext.&lt;EnsureConnection&gt;b__0()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContext.AllInstances._SaveChangesToStoreb__b">
            <summary>Sets the shim of ObjectContext.&lt;SaveChangesToStore&gt;b__b()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectContextOptions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.#ctor(System.Data.Entity.Core.Objects.ObjectContextOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.Constructor">
            <summary>Sets the shim of ObjectContextOptions.ObjectContextOptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.LazyLoadingEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.ProxyCreationEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseCSharpNullComparisonBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseCSharpNullComparisonBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseCSharpNullComparisonBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseCSharpNullComparisonBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseConsistentNullReferenceBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseConsistentNullReferenceBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseConsistentNullReferenceBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseConsistentNullReferenceBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseLegacyPreserveChangesBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseLegacyPreserveChangesBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.UseLegacyPreserveChangesBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseLegacyPreserveChangesBehavior(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.LazyLoadingEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.ProxyCreationEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseCSharpNullComparisonBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseCSharpNullComparisonBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseCSharpNullComparisonBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseCSharpNullComparisonBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseConsistentNullReferenceBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseConsistentNullReferenceBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseConsistentNullReferenceBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseConsistentNullReferenceBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseLegacyPreserveChangesBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseLegacyPreserveChangesBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseLegacyPreserveChangesBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseLegacyPreserveChangesBehavior(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectMaterializedEventArgs</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.#ctor(System.Data.Entity.Core.Objects.ObjectMaterializedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.ConstructorObject">
            <summary>Sets the shim of ObjectMaterializedEventArgs.ObjectMaterializedEventArgs(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.EntityGet">
            <summary>Sets the shim of ObjectMaterializedEventArgs.get_Entity()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectMaterializedEventArgs.AllInstances.EntityGet">
            <summary>Sets the shim of ObjectMaterializedEventArgs.get_Entity()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectParameter</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.#ctor(System.Data.Entity.Core.Objects.ObjectParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ConstructorObjectParameter">
            <summary>Sets the shim of ObjectParameter.ObjectParameter(ObjectParameter template)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ConstructorStringObject">
            <summary>Sets the shim of ObjectParameter.ObjectParameter(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ConstructorStringType">
            <summary>Sets the shim of ObjectParameter.ObjectParameter(String name, Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.MappableTypeGet">
            <summary>Sets the shim of ObjectParameter.get_MappableType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.NameGet">
            <summary>Sets the shim of ObjectParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ParameterTypeGet">
            <summary>Sets the shim of ObjectParameter.get_ParameterType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ShallowCopy">
            <summary>Sets the shim of ObjectParameter.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.TypeUsageGet">
            <summary>Sets the shim of ObjectParameter.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.TypeUsageSetTypeUsage">
            <summary>Sets the shim of ObjectParameter.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ValidateParameterNameString">
            <summary>Sets the shim of ObjectParameter.ValidateParameterName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ValueGet">
            <summary>Sets the shim of ObjectParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.ValueSetObject">
            <summary>Sets the shim of ObjectParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.MappableTypeGet">
            <summary>Sets the shim of ObjectParameter.get_MappableType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.NameGet">
            <summary>Sets the shim of ObjectParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.ParameterTypeGet">
            <summary>Sets the shim of ObjectParameter.get_ParameterType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.ShallowCopy">
            <summary>Sets the shim of ObjectParameter.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.TypeUsageGet">
            <summary>Sets the shim of ObjectParameter.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.TypeUsageSetTypeUsage">
            <summary>Sets the shim of ObjectParameter.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.ValueGet">
            <summary>Sets the shim of ObjectParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of ObjectParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectParameterCollection</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.#ctor(System.Data.Entity.Core.Objects.ObjectParameterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.Generic.ICollection{System.Data.Entity.Core.Objects.ObjectParameter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectParameter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AddObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Add(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.CheckUnlocked">
            <summary>Sets the shim of ObjectParameterCollection.CheckUnlocked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.Clear">
            <summary>Sets the shim of ObjectParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.ContainsObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Contains(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.ContainsString">
            <summary>Sets the shim of ObjectParameterCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.CopyToObjectParameterArrayInt32">
            <summary>Sets the shim of ObjectParameterCollection.CopyTo(ObjectParameter[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.CountGet">
            <summary>Sets the shim of ObjectParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.DeepCopyObjectParameterCollection">
            <summary>Sets the shim of ObjectParameterCollection.DeepCopy(ObjectParameterCollection copyParams)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.GetCacheKey">
            <summary>Sets the shim of ObjectParameterCollection.GetCacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.GetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.IndexOfString">
            <summary>Sets the shim of ObjectParameterCollection.IndexOf(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.IsReadOnlySystemCollectionsGenericICollectionSystemDataEntityCoreObjectsObjectParameterget">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Objects.ObjectParameter&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.ItemGetString">
            <summary>Sets the shim of ObjectParameterCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.RemoveObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Remove(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.SetReadOnlyBoolean">
            <summary>Sets the shim of ObjectParameterCollection.SetReadOnly(Boolean isReadOnly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.AddObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Add(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.CheckUnlocked">
            <summary>Sets the shim of ObjectParameterCollection.CheckUnlocked()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.Clear">
            <summary>Sets the shim of ObjectParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ContainsObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Contains(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ObjectParameterCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.CopyToObjectParameterArrayInt32">
            <summary>Sets the shim of ObjectParameterCollection.CopyTo(ObjectParameter[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.CountGet">
            <summary>Sets the shim of ObjectParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.GetCacheKey">
            <summary>Sets the shim of ObjectParameterCollection.GetCacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of ObjectParameterCollection.IndexOf(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemDataEntityCoreObjectsObjectParameterget">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Objects.ObjectParameter&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ObjectParameterCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.RemoveObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Remove(ObjectParameter item)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.SetReadOnlyBoolean">
            <summary>Sets the shim of ObjectParameterCollection.SetReadOnly(Boolean isReadOnly)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectParameterCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.#ctor(System.Data.Entity.Core.Objects.ObjectQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.CommandTextGet">
            <summary>Sets the shim of ObjectQuery.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.Constructor">
            <summary>Sets the shim of ObjectQuery.ObjectQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ContextGet">
            <summary>Sets the shim of ObjectQuery.get_Context()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.EnablePlanCachingGet">
            <summary>Sets the shim of ObjectQuery.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.GetResultType">
            <summary>Sets the shim of ObjectQuery.GetResultType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.MergeOptionGet">
            <summary>Sets the shim of ObjectQuery.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.MergeOptionSetMergeOption">
            <summary>Sets the shim of ObjectQuery.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ParametersGet">
            <summary>Sets the shim of ObjectQuery.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.StreamingGet">
            <summary>Sets the shim of ObjectQuery.get_Streaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.StreamingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_Streaming(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.ToTraceString">
            <summary>Sets the shim of ObjectQuery.ToTraceString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.CommandTextGet">
            <summary>Sets the shim of ObjectQuery.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ContextGet">
            <summary>Sets the shim of ObjectQuery.get_Context()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.EnablePlanCachingGet">
            <summary>Sets the shim of ObjectQuery.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.GetResultType">
            <summary>Sets the shim of ObjectQuery.GetResultType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.MergeOptionGet">
            <summary>Sets the shim of ObjectQuery.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.MergeOptionSetMergeOption">
            <summary>Sets the shim of ObjectQuery.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ParametersGet">
            <summary>Sets the shim of ObjectQuery.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.StreamingGet">
            <summary>Sets the shim of ObjectQuery.get_Streaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.StreamingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_Streaming(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery.AllInstances.ToTraceString">
            <summary>Sets the shim of ObjectQuery.ToTraceString()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectQuery`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.#ctor(System.Data.Entity.Core.Objects.ObjectQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.OfType()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.SelectValueOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.SelectValue(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.BuildScanEntitySetEsqlEntitySetBase">
            <summary>Sets the shim of ObjectQuery`1.BuildScanEntitySetEsql(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Constructor">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ConstructorEntitySetBaseObjectContextMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(EntitySetBase entitySet, ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ConstructorStringObjectContext">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(String commandText, ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ConstructorStringObjectContextMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(String commandText, ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.Distinct">
            <summary>Sets the shim of ObjectQuery`1.Distinct()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ExceptObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Except(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ExecuteInternalMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ExecuteInternal(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery`1.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectQuery`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.GetExpression">
            <summary>Sets the shim of ObjectQuery`1.GetExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectQuery`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.GetResultsNullableOfMergeOption">
            <summary>Sets the shim of ObjectQuery`1.GetResults(Nullable`1&lt;MergeOption&gt; forMergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.GroupByStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.GroupBy(String keys, String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.IncludeString">
            <summary>Sets the shim of ObjectQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.IntersectObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Intersect(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.IsLinqQueryObjectQuery">
            <summary>Sets the shim of ObjectQuery`1.IsLinqQuery(ObjectQuery query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.MergeAsMergeOption">
            <summary>Sets the shim of ObjectQuery`1.MergeAs(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.NameGet">
            <summary>Sets the shim of ObjectQuery`1.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.NameSetString">
            <summary>Sets the shim of ObjectQuery`1.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.OrderByStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.OrderBy(String keys, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.SelectStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Select(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.SkipStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Skip(String keys, String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.TopStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Top(String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.UnionAllObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.UnionAll(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.UnionObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Union(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.WhereStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Where(String predicate, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1._SystemCollectionsGenericIEnumerableTGetEnumeratorb__0">
            <summary>Sets the shim of ObjectQuery`1.&lt;System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectQuery{`0},System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.OfType()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.SelectValueOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectQuery{`0},System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.SelectValue(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.Distinct">
            <summary>Sets the shim of ObjectQuery`1.Distinct()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExceptObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Except(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExecuteInternalMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ExecuteInternal(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery`1.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectQuery`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetExpression">
            <summary>Sets the shim of ObjectQuery`1.GetExpression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectQuery`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetResultsNullableOfMergeOption">
            <summary>Sets the shim of ObjectQuery`1.GetResults(Nullable`1&lt;MergeOption&gt; forMergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.GroupByStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.GroupBy(String keys, String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.IncludeString">
            <summary>Sets the shim of ObjectQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.IntersectObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Intersect(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.MergeAsMergeOption">
            <summary>Sets the shim of ObjectQuery`1.MergeAs(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.NameGet">
            <summary>Sets the shim of ObjectQuery`1.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.NameSetString">
            <summary>Sets the shim of ObjectQuery`1.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.OrderByStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.OrderBy(String keys, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.SelectStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Select(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.SkipStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Skip(String keys, String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.TopStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Top(String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.UnionAllObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.UnionAll(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.UnionObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Union(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances.WhereStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Where(String predicate, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectQuery`1.AllInstances._SystemCollectionsGenericIEnumerableTGetEnumeratorb__0">
            <summary>Sets the shim of ObjectQuery`1.&lt;System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectResult</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.#ctor(System.Data.Entity.Core.Objects.ObjectResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.GetNextResultOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult.GetNextResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Constructor">
            <summary>Sets the shim of ObjectResult.ObjectResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.Dispose">
            <summary>Sets the shim of ObjectResult.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectResult.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances.GetNextResultOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectResult,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult.GetNextResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances.Dispose">
            <summary>Sets the shim of ObjectResult.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectResult.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectResult`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.#ctor(System.Data.Entity.Core.Objects.ObjectResult{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.GetNextResultInternalOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult`1.GetNextResultInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.DisposeBoolean">
            <summary>Sets the shim of ObjectResult`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.ElementTypeGet">
            <summary>Sets the shim of ObjectResult`1.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.EnsureCanEnumerateResults">
            <summary>Sets the shim of ObjectResult`1.EnsureCanEnumerateResults()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.GetEnumerator">
            <summary>Sets the shim of ObjectResult`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectResult`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectResult`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.GetNextResultInternalOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectResult{`0},System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult`1.GetNextResultInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ObjectResult`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ObjectResult`1.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.EnsureCanEnumerateResults">
            <summary>Sets the shim of ObjectResult`1.EnsureCanEnumerateResults()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ObjectResult`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectResult`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectResult`1.AllInstances.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectResult`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectSet`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.#ctor(System.Data.Entity.Core.Objects.ObjectSet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Data.Entity.Core.Objects.IObjectSet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AddObjectT0">
            <summary>Sets the shim of ObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.ApplyCurrentValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyCurrentValues(!0 currentEntity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.ApplyOriginalValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyOriginalValues(!0 originalEntity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AttachT0">
            <summary>Sets the shim of ObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.ConstructorEntitySetObjectContext">
            <summary>Sets the shim of ObjectSet`1.ObjectSet`1(EntitySet entitySet, ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.CreateObject">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.DeleteObjectT0">
            <summary>Sets the shim of ObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.DetachT0">
            <summary>Sets the shim of ObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.EntitySetGet">
            <summary>Sets the shim of ObjectSet`1.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.FullyQualifiedEntitySetNameGet">
            <summary>Sets the shim of ObjectSet`1.get_FullyQualifiedEntitySetName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectSet{`0},``0})">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.AddObjectT0">
            <summary>Sets the shim of ObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.ApplyCurrentValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyCurrentValues(!0 currentEntity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.ApplyOriginalValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyOriginalValues(!0 originalEntity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.AttachT0">
            <summary>Sets the shim of ObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.CreateObject">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.DeleteObjectT0">
            <summary>Sets the shim of ObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.DetachT0">
            <summary>Sets the shim of ObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.EntitySetGet">
            <summary>Sets the shim of ObjectSet`1.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectSet`1.AllInstances.FullyQualifiedEntitySetNameGet">
            <summary>Sets the shim of ObjectSet`1.get_FullyQualifiedEntitySetName()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectStateEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.#ctor(System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.Bind(System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.Constructor">
            <summary>Sets the shim of ObjectStateEntry.ObjectStateEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.ConstructorObjectStateManagerEntitySetEntityState">
            <summary>Sets the shim of ObjectStateEntry.ObjectStateEntry(ObjectStateManager cache, EntitySet entitySet, EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.EntitySetGet">
            <summary>Sets the shim of ObjectStateEntry.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.EntityStateSystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.IsKeyEntrySystemDataEntityCoreIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.IEntityStateEntry.get_IsKeyEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.ModifiedPropertiesSystemDataEntityCoreIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.IEntityStateEntry.get_ModifiedProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectStateEntry.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.Reset">
            <summary>Sets the shim of ObjectStateEntry.Reset()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.StateGet">
            <summary>Sets the shim of ObjectStateEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.StateSetEntityState">
            <summary>Sets the shim of ObjectStateEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangedStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangingStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityMemberChangedString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityMemberChangingString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.ValidateState">
            <summary>Sets the shim of ObjectStateEntry.ValidateState()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.EntitySetGet">
            <summary>Sets the shim of ObjectStateEntry.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.EntityStateSystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.IsKeyEntrySystemDataEntityCoreIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.IEntityStateEntry.get_IsKeyEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.ModifiedPropertiesSystemDataEntityCoreIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.IEntityStateEntry.get_ModifiedProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectStateEntry.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.Reset">
            <summary>Sets the shim of ObjectStateEntry.Reset()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.StateGet">
            <summary>Sets the shim of ObjectStateEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.StateSetEntityState">
            <summary>Sets the shim of ObjectStateEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangedStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangingStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityMemberChangedString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataEntityCoreObjectsDataClassesIEntityChangeTrackerEntityMemberChangingString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateEntry.AllInstances.ValidateState">
            <summary>Sets the shim of ObjectStateEntry.ValidateState()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager">
            <summary>Shim type of System.Data.Entity.Core.Objects.ObjectStateManager</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.#ctor(System.Data.Entity.Core.Objects.ObjectStateManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateOf1M0ObjectExpressionOfFuncOfM0ObjectEntityState``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.EntityState,System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid">
            <summary>Sets the shim of ObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangeObjectStateObjectEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateObjectObjectStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateObjectObjectStringStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingEntityMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingEntityMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingEntityMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingEntityMember(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingMember(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingObjectGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingObjectSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingObject(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingOldValueGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingOldValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingOldValueSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingOldValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingStateGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ChangingStateSetEntityState">
            <summary>Sets the shim of ObjectStateManager.set_ChangingState(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.Constructor">
            <summary>Sets the shim of ObjectStateManager.ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ConstructorMetadataWorkspace">
            <summary>Sets the shim of ObjectStateManager.ObjectStateManager(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.CreateEntityKeyEntitySetObject">
            <summary>Sets the shim of ObjectStateManager.CreateEntityKey(EntitySet entitySet, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.DegradePromotedRelationships">
            <summary>Sets the shim of ObjectStateManager.DegradePromotedRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.DetectChanges">
            <summary>Sets the shim of ObjectStateManager.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.Dispose">
            <summary>Sets the shim of ObjectStateManager.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.EntityDeletedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.EntityDeletedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.EntityInvokingFKSetterGet">
            <summary>Sets the shim of ObjectStateManager.get_EntityInvokingFKSetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.EntityInvokingFKSetterSetObject">
            <summary>Sets the shim of ObjectStateManager.set_EntityInvokingFKSetter(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetMaxEntityEntriesForDetectChanges">
            <summary>Sets the shim of ObjectStateManager.GetMaxEntityEntriesForDetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntriesCountEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesCount(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntriesEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntriesInternalEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesInternal(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntryEntityKey">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntryObject">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.GetRelationshipManagerObject">
            <summary>Sets the shim of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.HasChanges">
            <summary>Sets the shim of ObjectStateManager.HasChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.InRelationshipFixupGet">
            <summary>Sets the shim of ObjectStateManager.get_InRelationshipFixup()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.IsDisposedGet">
            <summary>Sets the shim of ObjectStateManager.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ObjectStateManagerChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ObjectStateManagerChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.OnEntityDeletedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnEntityDeleted(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.OnObjectStateManagerChangedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnObjectStateManagerChanged(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.RemoveForeignKeyFromIndexEntityKey">
            <summary>Sets the shim of ObjectStateManager.RemoveForeignKeyFromIndex(EntityKey foreignKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.RemoveRelationshipsMergeOptionAssociationSetEntityKeyAssociationEndMember">
            <summary>Sets the shim of ObjectStateManager.RemoveRelationships(MergeOption mergeOption, AssociationSet associationSet, EntityKey sourceKey, AssociationEndMember sourceMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.SaveOriginalValuesGet">
            <summary>Sets the shim of ObjectStateManager.get_SaveOriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.SaveOriginalValuesSetBoolean">
            <summary>Sets the shim of ObjectStateManager.set_SaveOriginalValues(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.SomeEntryWithConceptualNullExists">
            <summary>Sets the shim of ObjectStateManager.SomeEntryWithConceptualNullExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.SystemDataEntityCoreIEntityStateManagerTryGetReferenceKeyEntityKeyAssociationEndMemberEntityKeyOut">
            <summary>Sets the shim of ObjectStateManager.System.Data.Entity.Core.IEntityStateManager.TryGetReferenceKey(EntityKey dependentKey, AssociationEndMember principalRole, EntityKey&amp; principalKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.TryGetObjectStateEntryEntityKeyObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.TryGetObjectStateEntryObjectObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.TryGetRelationshipManagerObjectRelationshipManagerOut">
            <summary>Sets the shim of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.ValidateKeylessEntityStore">
            <summary>Sets the shim of ObjectStateManager.ValidateKeylessEntityStore()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateOf1M0ObjectExpressionOfFuncOfM0ObjectEntityState``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectStateManager,``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.EntityState,System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.AssertAllForeignKeyIndexEntriesAreValid">
            <summary>Sets the shim of ObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeObjectStateObjectEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateObjectObjectStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateObjectObjectStringStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingEntityMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingEntityMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingEntityMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingEntityMember(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingMember()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingMember(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingObjectGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingObjectSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingObject(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingOldValueGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingOldValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingOldValueSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingOldValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingStateGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingState()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingStateSetEntityState">
            <summary>Sets the shim of ObjectStateManager.set_ChangingState(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.CreateEntityKeyEntitySetObject">
            <summary>Sets the shim of ObjectStateManager.CreateEntityKey(EntitySet entitySet, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.DegradePromotedRelationships">
            <summary>Sets the shim of ObjectStateManager.DegradePromotedRelationships()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.DetectChanges">
            <summary>Sets the shim of ObjectStateManager.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.Dispose">
            <summary>Sets the shim of ObjectStateManager.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityDeletedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityDeletedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityInvokingFKSetterGet">
            <summary>Sets the shim of ObjectStateManager.get_EntityInvokingFKSetter()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityInvokingFKSetterSetObject">
            <summary>Sets the shim of ObjectStateManager.set_EntityInvokingFKSetter(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetMaxEntityEntriesForDetectChanges">
            <summary>Sets the shim of ObjectStateManager.GetMaxEntityEntriesForDetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntriesCountEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesCount(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntriesEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntriesInternalEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesInternal(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntryEntityKey">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntryObject">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.GetRelationshipManagerObject">
            <summary>Sets the shim of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.HasChanges">
            <summary>Sets the shim of ObjectStateManager.HasChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.InRelationshipFixupGet">
            <summary>Sets the shim of ObjectStateManager.get_InRelationshipFixup()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.IsDisposedGet">
            <summary>Sets the shim of ObjectStateManager.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ObjectStateManagerChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ObjectStateManagerChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.OnEntityDeletedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnEntityDeleted(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.OnObjectStateManagerChangedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnObjectStateManagerChanged(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.RemoveForeignKeyFromIndexEntityKey">
            <summary>Sets the shim of ObjectStateManager.RemoveForeignKeyFromIndex(EntityKey foreignKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.RemoveRelationshipsMergeOptionAssociationSetEntityKeyAssociationEndMember">
            <summary>Sets the shim of ObjectStateManager.RemoveRelationships(MergeOption mergeOption, AssociationSet associationSet, EntityKey sourceKey, AssociationEndMember sourceMember)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.SaveOriginalValuesGet">
            <summary>Sets the shim of ObjectStateManager.get_SaveOriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.SaveOriginalValuesSetBoolean">
            <summary>Sets the shim of ObjectStateManager.set_SaveOriginalValues(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.SomeEntryWithConceptualNullExists">
            <summary>Sets the shim of ObjectStateManager.SomeEntryWithConceptualNullExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.SystemDataEntityCoreIEntityStateManagerTryGetReferenceKeyEntityKeyAssociationEndMemberEntityKeyOut">
            <summary>Sets the shim of ObjectStateManager.System.Data.Entity.Core.IEntityStateManager.TryGetReferenceKey(EntityKey dependentKey, AssociationEndMember principalRole, EntityKey&amp; principalKey)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetObjectStateEntryEntityKeyObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetObjectStateEntryObjectObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetRelationshipManagerObjectRelationshipManagerOut">
            <summary>Sets the shim of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimObjectStateManager.AllInstances.ValidateKeylessEntityStore">
            <summary>Sets the shim of ObjectStateManager.ValidateKeylessEntityStore()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord">
            <summary>Shim type of System.Data.Entity.Core.Objects.OriginalValueRecord</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.#ctor(System.Data.Entity.Core.Objects.OriginalValueRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.Bind(System.Data.Entity.Core.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimOriginalValueRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver">
            <summary>Shim type of System.Data.Entity.Core.Objects.ProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.#ctor(System.Data.Entity.Core.Objects.ProxyDataContractResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.Constructor">
            <summary>Sets the shim of ProxyDataContractResolver.ProxyDataContractResolver()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the shim of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the shim of ProxyDataContractResolver.TryResolveType(Type type, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.AllInstances.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the shim of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.ShimProxyDataContractResolver.AllInstances.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the shim of ProxyDataContractResolver.TryResolveType(Type type, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions">
            <summary>Stub type of System.Data.Entity.Core.Objects.ExecutionOptions</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.Equals(System.Object)">
            <summary>Sets the stub of ExecutionOptions.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.EqualsObject">
            <summary>Sets the stub of ExecutionOptions.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.GetHashCode">
            <summary>Sets the stub of ExecutionOptions.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.GetHashCode01">
            <summary>Sets the stub of ExecutionOptions.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.InitializeStub">
            <summary>Initializes a new instance of type StubExecutionOptions</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubExecutionOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1">
            <summary>Stub type of System.Data.Entity.Core.Objects.IObjectSet`1</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.#ctor">
            <summary>Initializes a new instance of type StubIObjectSet</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.AddObjectT0">
            <summary>Sets the stub of IObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.AttachT0">
            <summary>Sets the stub of IObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.DeleteObjectT0">
            <summary>Sets the stub of IObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.DetachT0">
            <summary>Sets the stub of IObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.global::System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ef::System#Data#Entity#Core#Objects#IObjectSet{TEntity}#AddObject(`0)">
            <summary>Sets the stub of IObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ef::System#Data#Entity#Core#Objects#IObjectSet{TEntity}#Attach(`0)">
            <summary>Sets the stub of IObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ef::System#Data#Entity#Core#Objects#IObjectSet{TEntity}#DeleteObject(`0)">
            <summary>Sets the stub of IObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.ef::System#Data#Entity#Core#Objects#IObjectSet{TEntity}#Detach(`0)">
            <summary>Sets the stub of IObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.StubObjectContext">
            <summary>Stub type of System.Data.Entity.Core.Objects.ObjectContext</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AcceptAllChanges">
            <summary>Sets the stub of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AcceptAllChanges01">
            <summary>Sets the stub of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AddObject(System.String,System.Object)">
            <summary>Sets the stub of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AddObjectStringObject">
            <summary>Sets the stub of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyCurrentValues``1(System.String,``0)">
            <summary>Sets the stub of ObjectContext.ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyCurrentValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets stubs of ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyOriginalValues``1(System.String,``0)">
            <summary>Sets the stub of ObjectContext.ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyOriginalValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets stubs of ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyPropertyChanges(System.String,System.Object)">
            <summary>Sets the stub of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ApplyPropertyChangesStringObject">
            <summary>Sets the stub of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Attach(System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey)">
            <summary>Sets the stub of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AttachBackingFieldToCommandTimeout">
            <summary>Attaches delegates to emulate StubObjectContext.CommandTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AttachBackingFieldToDefaultContainerName">
            <summary>Attaches delegates to emulate StubObjectContext.DefaultContainerName as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AttachIEntityWithKey">
            <summary>Sets the stub of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AttachTo(System.String,System.Object)">
            <summary>Sets the stub of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.AttachToStringObject">
            <summary>Sets the stub of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CommandTimeoutGet">
            <summary>Sets the stub of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the stub of ObjectContext.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ConnectionGet">
            <summary>Sets the stub of ObjectContext.get_Connection()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ContextOptionsGet">
            <summary>Sets the stub of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateDatabase">
            <summary>Sets the stub of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateDatabase01">
            <summary>Sets the stub of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateDatabaseScript">
            <summary>Sets the stub of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateDatabaseScript01">
            <summary>Sets the stub of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateEntityKey(System.String,System.Object)">
            <summary>Sets the stub of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateEntityKeyStringObject">
            <summary>Sets the stub of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObject``1">
            <summary>Sets the stub of ObjectContext.CreateObject()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateObject()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObjectSet``1">
            <summary>Sets the stub of ObjectContext.CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObjectSet``1(System.String)">
            <summary>Sets the stub of ObjectContext.CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObjectSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets stubs of CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateObjectSetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectSet{``0}})">
            <summary>Sets stubs of CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateProxyTypesIEnumerableOfType">
            <summary>Sets the stub of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateQuery``1(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
            <summary>Sets the stub of ObjectContext.CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CreateQueryOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectQuery{``0}})">
            <summary>Sets stubs of CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DatabaseExists">
            <summary>Sets the stub of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DatabaseExists01">
            <summary>Sets the stub of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DefaultContainerNameGet">
            <summary>Sets the stub of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DefaultContainerNameSetString">
            <summary>Sets the stub of ObjectContext.set_DefaultContainerName(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DeleteDatabase">
            <summary>Sets the stub of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DeleteDatabase01">
            <summary>Sets the stub of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DeleteObject(System.Object)">
            <summary>Sets the stub of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DeleteObjectObject">
            <summary>Sets the stub of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Detach(System.Object)">
            <summary>Sets the stub of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DetachObject">
            <summary>Sets the stub of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DetectChanges">
            <summary>Sets the stub of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DetectChanges01">
            <summary>Sets the stub of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Dispose(System.Boolean)">
            <summary>Sets the stub of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DisposeBoolean">
            <summary>Sets the stub of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunction(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
            <summary>Sets the stub of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunction``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectParameter[])">
            <summary>Sets the stub of ObjectContext.ExecuteFunction(String functionName, ExecutionOptions executionOptions, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunction``1(System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectParameter[])">
            <summary>Sets the stub of ObjectContext.ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunctionOf1StringExecutionOptionsObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteFunction(String functionName, ExecutionOptions executionOptions, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunctionOf1StringMergeOptionObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectParameter[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteFunctionStringObjectParameterArray">
            <summary>Sets the stub of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreCommand(System.String,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreCommand(System.Data.Entity.TransactionalBehavior,System.String,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreCommand(TransactionalBehavior transactionalBehavior, String commandText, Object[] parameters)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreCommandStringObjectArray">
            <summary>Sets the stub of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreCommandTransactionalBehaviorStringObjectArray">
            <summary>Sets the stub of ObjectContext.ExecuteStoreCommand(TransactionalBehavior transactionalBehavior, String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQuery``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreQuery(String commandText, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Object[])">
            <summary>Sets the stub of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQueryOf1StringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteStoreQuery(String commandText, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQueryOf1StringStringExecutionOptionsObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteStoreQuery(String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ExecuteStoreQueryOf1StringStringMergeOptionObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Object[],System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.GetObjectByKey(System.Data.Entity.Core.EntityKey)">
            <summary>Sets the stub of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.GetObjectByKeyEntityKey">
            <summary>Sets the stub of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.InitializeStub">
            <summary>Initializes a new instance of type StubObjectContext</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadProperty(System.Object,System.String)">
            <summary>Sets the stub of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Sets the stub of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadProperty(System.Object,System.String,System.Data.Entity.Core.Objects.MergeOption)">
            <summary>Sets the stub of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.Core.Objects.MergeOption)">
            <summary>Sets the stub of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadPropertyObjectString">
            <summary>Sets the stub of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadPropertyObjectStringMergeOption">
            <summary>Sets the stub of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets stubs of LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0ObjectMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.Core.Objects.MergeOption})">
            <summary>Sets stubs of LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.MetadataWorkspaceGet">
            <summary>Sets the stub of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ObjectStateManagerGet">
            <summary>Sets the stub of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.QueryProviderGet">
            <summary>Sets the stub of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Refresh(System.Data.Entity.Core.Objects.RefreshMode,System.Object)">
            <summary>Sets the stub of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Refresh(System.Data.Entity.Core.Objects.RefreshMode,System.Collections.IEnumerable)">
            <summary>Sets the stub of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.RefreshRefreshModeIEnumerable">
            <summary>Sets the stub of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.RefreshRefreshModeObject">
            <summary>Sets the stub of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChanges">
            <summary>Sets the stub of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChanges(System.Data.Entity.Core.Objects.SaveOptions)">
            <summary>Sets the stub of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChanges(System.Boolean)">
            <summary>Sets the stub of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChanges01">
            <summary>Sets the stub of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChangesBoolean">
            <summary>Sets the stub of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.SaveChangesSaveOptions">
            <summary>Sets the stub of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Translate``1(System.Data.Common.DbDataReader)">
            <summary>Sets the stub of ObjectContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Entity.Core.Objects.MergeOption)">
            <summary>Sets the stub of ObjectContext.Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.TranslateOf1DbDataReaderStringMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectResult{``0}})">
            <summary>Sets stubs of Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.TryGetObjectByKey(System.Data.Entity.Core.EntityKey,System.Object@)">
            <summary>Sets the stub of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.TryGetObjectByKeyEntityKeyObjectOut">
            <summary>Sets the stub of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.CommandTimeout">
            <summary>Sets the stub of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.Connection">
            <summary>Sets the stub of ObjectContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ContextOptions">
            <summary>Sets the stub of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.DefaultContainerName">
            <summary>Sets the stub of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.MetadataWorkspace">
            <summary>Sets the stub of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.ObjectStateManager">
            <summary>Sets the stub of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectContext.QueryProvider">
            <summary>Sets the stub of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager">
            <summary>Stub type of System.Data.Entity.Core.Objects.ObjectStateManager</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeObjectState(System.Object,System.Data.Entity.EntityState)">
            <summary>Sets the stub of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeObjectStateObjectEntityState">
            <summary>Sets the stub of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.EntityState)">
            <summary>Sets the stub of ObjectStateManager.ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.Entity.EntityState)">
            <summary>Sets the stub of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.Entity.EntityState)">
            <summary>Sets the stub of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipStateObjectObjectStringEntityState">
            <summary>Sets the stub of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipStateObjectObjectStringStringEntityState">
            <summary>Sets the stub of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.ChangeRelationshipStateOf1M0ObjectExpressionOfFuncOfM0ObjectEntityState``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.EntityState,System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>Sets stubs of ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntries(System.Data.Entity.EntityState)">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntriesEntityState">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntry(System.Data.Entity.Core.EntityKey)">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntry(System.Object)">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntryEntityKey">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetObjectStateEntryObject">
            <summary>Sets the stub of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetRelationshipManager(System.Object)">
            <summary>Sets the stub of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.GetRelationshipManagerObject">
            <summary>Sets the stub of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.InitializeStub">
            <summary>Initializes a new instance of type StubObjectStateManager</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.MetadataWorkspaceGet">
            <summary>Sets the stub of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetObjectStateEntry(System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.Objects.ObjectStateEntry@)">
            <summary>Sets the stub of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Entity.Core.Objects.ObjectStateEntry@)">
            <summary>Sets the stub of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetObjectStateEntryEntityKeyObjectStateEntryOut">
            <summary>Sets the stub of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetObjectStateEntryObjectObjectStateEntryOut">
            <summary>Sets the stub of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Entity.Core.Objects.DataClasses.RelationshipManager@)">
            <summary>Sets the stub of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.TryGetRelationshipManagerObjectRelationshipManagerOut">
            <summary>Sets the stub of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubObjectStateManager.MetadataWorkspace">
            <summary>Sets the stub of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="T:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver">
            <summary>Stub type of System.Data.Entity.Core.Objects.ProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.InitializeStub">
            <summary>Initializes a new instance of type StubProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
            <summary>Sets the stub of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the stub of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="M:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
            <summary>Sets the stub of ProxyDataContractResolver.TryResolveType(Type type, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="F:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the stub of ProxyDataContractResolver.TryResolveType(Type type, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Core.Objects.Fakes.StubProxyDataContractResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1">
            <summary>Shim type of System.Data.Entity.CreateDatabaseIfNotExists`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.#ctor(System.Data.Entity.CreateDatabaseIfNotExists{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.Bind(System.Data.Entity.IDatabaseInitializer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.Constructor">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.CreateDatabaseIfNotExists`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.InitializeDatabaseT0">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.SeedT0">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.StaticConstructor">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.CreateDatabaseIfNotExists`1()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.AllInstances.InitializeDatabaseT0">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimCreateDatabaseIfNotExists`1.AllInstances.SeedT0">
            <summary>Sets the shim of CreateDatabaseIfNotExists`1.Seed(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDatabase">
            <summary>Shim type of System.Data.Entity.Database</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.#ctor(System.Data.Entity.Database)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.SetInitializerOf1IDatabaseInitializerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.IDatabaseInitializer{``0}})">
            <summary>Sets the shim of Database.SetInitializer(IDatabaseInitializer`1&lt;!!0&gt; strategy)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.SqlQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Data.Entity.Infrastructure.DbRawSqlQuery{``0}})">
            <summary>Sets the shim of Database.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.BeginTransaction">
            <summary>Sets the shim of Database.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.BeginTransactionIsolationLevel">
            <summary>Sets the shim of Database.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CommandTimeoutGet">
            <summary>Sets the shim of Database.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of Database.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CompatibleWithModelBoolean">
            <summary>Sets the shim of Database.CompatibleWithModel(Boolean throwIfNoMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ConnectionGet">
            <summary>Sets the shim of Database.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.Create">
            <summary>Sets the shim of Database.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CreateBoolean">
            <summary>Sets the shim of Database.Create(Boolean skipExistsCheck)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CreateEmptyObjectContextDbConnection">
            <summary>Sets the shim of Database.CreateEmptyObjectContext(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.CreateIfNotExists">
            <summary>Sets the shim of Database.CreateIfNotExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.DefaultConnectionFactoryChangedGet">
            <summary>Sets the shim of Database.get_DefaultConnectionFactoryChanged()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.DefaultConnectionFactoryGet">
            <summary>Sets the shim of Database.get_DefaultConnectionFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.DefaultConnectionFactorySetIDbConnectionFactory">
            <summary>Sets the shim of Database.set_DefaultConnectionFactory(IDbConnectionFactory value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.Delete">
            <summary>Sets the shim of Database.Delete()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.DeleteDbConnection">
            <summary>Sets the shim of Database.Delete(DbConnection existingConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.DeleteString">
            <summary>Sets the shim of Database.Delete(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.EqualsObject">
            <summary>Sets the shim of Database.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ExecuteSqlCommandStringObjectArray">
            <summary>Sets the shim of Database.ExecuteSqlCommand(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ExecuteSqlCommandTransactionalBehaviorStringObjectArray">
            <summary>Sets the shim of Database.ExecuteSqlCommand(TransactionalBehavior transactionalBehavior, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.Exists">
            <summary>Sets the shim of Database.Exists()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ExistsDbConnection">
            <summary>Sets the shim of Database.Exists(DbConnection existingConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ExistsString">
            <summary>Sets the shim of Database.Exists(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.GetHashCode">
            <summary>Sets the shim of Database.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.GetType">
            <summary>Sets the shim of Database.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.InitializeBoolean">
            <summary>Sets the shim of Database.Initialize(Boolean force)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.LogGet">
            <summary>Sets the shim of Database.get_Log()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.LogSetActionOfString">
            <summary>Sets the shim of Database.set_Log(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.PerformDatabaseOpDbConnectionFuncOfObjectContextBoolean">
            <summary>Sets the shim of Database.PerformDatabaseOp(DbConnection connection, Func`2&lt;ObjectContext,Boolean&gt; operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ResetDefaultConnectionFactory">
            <summary>Sets the shim of Database.ResetDefaultConnectionFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.SetDefaultConnectionFactoryGet">
            <summary>Sets the shim of Database.get_SetDefaultConnectionFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.SqlQueryTypeStringObjectArray">
            <summary>Sets the shim of Database.SqlQuery(Type elementType, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.StaticConstructor">
            <summary>Sets the shim of Database.Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.ToString">
            <summary>Sets the shim of Database.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.UseTransactionDbTransaction">
            <summary>Sets the shim of Database.UseTransaction(DbTransaction transaction)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase._cctorb__3">
            <summary>Sets the shim of Database.&lt;.cctor&gt;b__3()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDatabase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDatabase.AllInstances.SqlQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Database,System.String,System.Object[],System.Data.Entity.Infrastructure.DbRawSqlQuery{``0}})">
            <summary>Sets the shim of Database.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.BeginTransaction">
            <summary>Sets the shim of Database.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.BeginTransactionIsolationLevel">
            <summary>Sets the shim of Database.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of Database.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of Database.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.CompatibleWithModelBoolean">
            <summary>Sets the shim of Database.CompatibleWithModel(Boolean throwIfNoMetadata)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.ConnectionGet">
            <summary>Sets the shim of Database.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.Create">
            <summary>Sets the shim of Database.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.CreateBoolean">
            <summary>Sets the shim of Database.Create(Boolean skipExistsCheck)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.CreateIfNotExists">
            <summary>Sets the shim of Database.CreateIfNotExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.Delete">
            <summary>Sets the shim of Database.Delete()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.EqualsObject">
            <summary>Sets the shim of Database.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.ExecuteSqlCommandStringObjectArray">
            <summary>Sets the shim of Database.ExecuteSqlCommand(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.ExecuteSqlCommandTransactionalBehaviorStringObjectArray">
            <summary>Sets the shim of Database.ExecuteSqlCommand(TransactionalBehavior transactionalBehavior, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.Exists">
            <summary>Sets the shim of Database.Exists()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.GetHashCode01">
            <summary>Sets the shim of Database.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.GetType01">
            <summary>Sets the shim of Database.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.InitializeBoolean">
            <summary>Sets the shim of Database.Initialize(Boolean force)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.LogGet">
            <summary>Sets the shim of Database.get_Log()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.LogSetActionOfString">
            <summary>Sets the shim of Database.set_Log(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.SqlQueryTypeStringObjectArray">
            <summary>Sets the shim of Database.SqlQuery(Type elementType, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.ToString01">
            <summary>Sets the shim of Database.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDatabase.AllInstances.UseTransactionDbTransaction">
            <summary>Sets the shim of Database.UseTransaction(DbTransaction transaction)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbConfiguration">
            <summary>Shim type of System.Data.Entity.DbConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.#ctor(System.Data.Entity.DbConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.SetDatabaseInitializerOf1IDatabaseInitializerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.IDatabaseInitializer{``0}})">
            <summary>Sets the shim of DbConfiguration.SetDatabaseInitializer(IDatabaseInitializer`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AddDefaultResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfiguration.AddDefaultResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AddDependencyResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfiguration.AddDependencyResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AddInterceptorIDbInterceptor">
            <summary>Sets the shim of DbConfiguration.AddInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.Constructor">
            <summary>Sets the shim of DbConfiguration.DbConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.DependencyResolverGet">
            <summary>Sets the shim of DbConfiguration.get_DependencyResolver()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.EqualsObject">
            <summary>Sets the shim of DbConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.GetHashCode">
            <summary>Sets the shim of DbConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.GetType">
            <summary>Sets the shim of DbConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.LoadConfigurationAssembly">
            <summary>Sets the shim of DbConfiguration.LoadConfiguration(Assembly assemblyHint)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.LoadConfigurationType">
            <summary>Sets the shim of DbConfiguration.LoadConfiguration(Type contextType)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.LoadedAddEventHandlerOfDbConfigurationLoadedEventArgs">
            <summary>Sets the shim of DbConfiguration.add_Loaded(EventHandler`1&lt;DbConfigurationLoadedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.LoadedRemoveEventHandlerOfDbConfigurationLoadedEventArgs">
            <summary>Sets the shim of DbConfiguration.remove_Loaded(EventHandler`1&lt;DbConfigurationLoadedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.MemberwiseClone">
            <summary>Sets the shim of DbConfiguration.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.RegisterSpatialServicesStringDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.RegisterSpatialServices(String providerInvariantName, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetConfigurationDbConfiguration">
            <summary>Sets the shim of DbConfiguration.SetConfiguration(DbConfiguration configuration)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetDatabaseLogFormatterFuncOfDbContextActionOfStringDatabaseLogFormatter">
            <summary>Sets the shim of DbConfiguration.SetDatabaseLogFormatter(Func`3&lt;DbContext,Action`1&lt;String&gt;,DatabaseLogFormatter&gt; logFormatterFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetDefaultConnectionFactoryIDbConnectionFactory">
            <summary>Sets the shim of DbConfiguration.SetDefaultConnectionFactory(IDbConnectionFactory connectionFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetDefaultHistoryContextFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbConfiguration.SetDefaultHistoryContext(Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetDefaultSpatialServicesDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetDefaultSpatialServices(DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetExecutionStrategyStringFuncOfIDbExecutionStrategy">
            <summary>Sets the shim of DbConfiguration.SetExecutionStrategy(String providerInvariantName, Func`1&lt;IDbExecutionStrategy&gt; getExecutionStrategy)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetExecutionStrategyStringFuncOfIDbExecutionStrategyString">
            <summary>Sets the shim of DbConfiguration.SetExecutionStrategy(String providerInvariantName, Func`1&lt;IDbExecutionStrategy&gt; getExecutionStrategy, String serverName)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetHistoryContextStringFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbConfiguration.SetHistoryContext(String providerInvariantName, Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetManifestTokenResolverIManifestTokenResolver">
            <summary>Sets the shim of DbConfiguration.SetManifestTokenResolver(IManifestTokenResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetMigrationSqlGeneratorStringFuncOfMigrationSqlGenerator">
            <summary>Sets the shim of DbConfiguration.SetMigrationSqlGenerator(String providerInvariantName, Func`1&lt;MigrationSqlGenerator&gt; sqlGenerator)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetModelCacheKeyFuncOfDbContextIDbModelCacheKey">
            <summary>Sets the shim of DbConfiguration.SetModelCacheKey(Func`2&lt;DbContext,IDbModelCacheKey&gt; keyFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetPluralizationServiceIPluralizationService">
            <summary>Sets the shim of DbConfiguration.SetPluralizationService(IPluralizationService pluralizationService)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetProviderFactoryResolverIDbProviderFactoryResolver">
            <summary>Sets the shim of DbConfiguration.SetProviderFactoryResolver(IDbProviderFactoryResolver providerFactoryResolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetProviderFactoryStringDbProviderFactory">
            <summary>Sets the shim of DbConfiguration.SetProviderFactory(String providerInvariantName, DbProviderFactory providerFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetProviderServicesStringDbProviderServices">
            <summary>Sets the shim of DbConfiguration.SetProviderServices(String providerInvariantName, DbProviderServices provider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetSpatialServicesDbProviderInfoDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetSpatialServices(DbProviderInfo key, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.SetSpatialServicesStringDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetSpatialServices(String providerInvariantName, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.ToString">
            <summary>Sets the shim of DbConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetDatabaseInitializerOf1IDatabaseInitializerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.DbConfiguration,System.Data.Entity.IDatabaseInitializer{``0}})">
            <summary>Sets the shim of DbConfiguration.SetDatabaseInitializer(IDatabaseInitializer`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.AddDefaultResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfiguration.AddDefaultResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.AddDependencyResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfiguration.AddDependencyResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.AddInterceptorIDbInterceptor">
            <summary>Sets the shim of DbConfiguration.AddInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of DbConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of DbConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of DbConfiguration.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.RegisterSpatialServicesStringDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.RegisterSpatialServices(String providerInvariantName, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetDatabaseLogFormatterFuncOfDbContextActionOfStringDatabaseLogFormatter">
            <summary>Sets the shim of DbConfiguration.SetDatabaseLogFormatter(Func`3&lt;DbContext,Action`1&lt;String&gt;,DatabaseLogFormatter&gt; logFormatterFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetDefaultConnectionFactoryIDbConnectionFactory">
            <summary>Sets the shim of DbConfiguration.SetDefaultConnectionFactory(IDbConnectionFactory connectionFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetDefaultHistoryContextFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbConfiguration.SetDefaultHistoryContext(Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetDefaultSpatialServicesDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetDefaultSpatialServices(DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetExecutionStrategyStringFuncOfIDbExecutionStrategy">
            <summary>Sets the shim of DbConfiguration.SetExecutionStrategy(String providerInvariantName, Func`1&lt;IDbExecutionStrategy&gt; getExecutionStrategy)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetExecutionStrategyStringFuncOfIDbExecutionStrategyString">
            <summary>Sets the shim of DbConfiguration.SetExecutionStrategy(String providerInvariantName, Func`1&lt;IDbExecutionStrategy&gt; getExecutionStrategy, String serverName)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetHistoryContextStringFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbConfiguration.SetHistoryContext(String providerInvariantName, Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetManifestTokenResolverIManifestTokenResolver">
            <summary>Sets the shim of DbConfiguration.SetManifestTokenResolver(IManifestTokenResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetMigrationSqlGeneratorStringFuncOfMigrationSqlGenerator">
            <summary>Sets the shim of DbConfiguration.SetMigrationSqlGenerator(String providerInvariantName, Func`1&lt;MigrationSqlGenerator&gt; sqlGenerator)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetModelCacheKeyFuncOfDbContextIDbModelCacheKey">
            <summary>Sets the shim of DbConfiguration.SetModelCacheKey(Func`2&lt;DbContext,IDbModelCacheKey&gt; keyFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetPluralizationServiceIPluralizationService">
            <summary>Sets the shim of DbConfiguration.SetPluralizationService(IPluralizationService pluralizationService)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetProviderFactoryResolverIDbProviderFactoryResolver">
            <summary>Sets the shim of DbConfiguration.SetProviderFactoryResolver(IDbProviderFactoryResolver providerFactoryResolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetProviderFactoryStringDbProviderFactory">
            <summary>Sets the shim of DbConfiguration.SetProviderFactory(String providerInvariantName, DbProviderFactory providerFactory)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetProviderServicesStringDbProviderServices">
            <summary>Sets the shim of DbConfiguration.SetProviderServices(String providerInvariantName, DbProviderServices provider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetSpatialServicesDbProviderInfoDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetSpatialServices(DbProviderInfo key, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.SetSpatialServicesStringDbSpatialServices">
            <summary>Sets the shim of DbConfiguration.SetSpatialServices(String providerInvariantName, DbSpatialServices spatialProvider)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of DbConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute">
            <summary>Shim type of System.Data.Entity.DbConfigurationTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.#ctor(System.Data.Entity.DbConfigurationTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.ConfigurationTypeGet">
            <summary>Sets the shim of DbConfigurationTypeAttribute.get_ConfigurationType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.ConstructorString">
            <summary>Sets the shim of DbConfigurationTypeAttribute.DbConfigurationTypeAttribute(String configurationTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.ConstructorType">
            <summary>Sets the shim of DbConfigurationTypeAttribute.DbConfigurationTypeAttribute(Type configurationType)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbConfigurationTypeAttribute.AllInstances.ConfigurationTypeGet">
            <summary>Sets the shim of DbConfigurationTypeAttribute.get_ConfigurationType()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbContext">
            <summary>Shim type of System.Data.Entity.DbContext</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.#ctor(System.Data.Entity.DbContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.EntryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of DbContext.Entry(!!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of DbContext.Set()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.CallOnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.CallOnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.CallValidateEntityDbEntityEntry">
            <summary>Sets the shim of DbContext.CallValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ChangeTrackerGet">
            <summary>Sets the shim of DbContext.get_ChangeTracker()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConfigurationGet">
            <summary>Sets the shim of DbContext.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.Constructor">
            <summary>Sets the shim of DbContext.DbContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorDbCompiledModel">
            <summary>Sets the shim of DbContext.DbContext(DbCompiledModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorDbConnectionBoolean">
            <summary>Sets the shim of DbContext.DbContext(DbConnection existingConnection, Boolean contextOwnsConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorDbConnectionDbCompiledModelBoolean">
            <summary>Sets the shim of DbContext.DbContext(DbConnection existingConnection, DbCompiledModel model, Boolean contextOwnsConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorObjectContextBoolean">
            <summary>Sets the shim of DbContext.DbContext(ObjectContext objectContext, Boolean dbContextOwnsObjectContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorString">
            <summary>Sets the shim of DbContext.DbContext(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ConstructorStringDbCompiledModel">
            <summary>Sets the shim of DbContext.DbContext(String nameOrConnectionString, DbCompiledModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.DatabaseGet">
            <summary>Sets the shim of DbContext.get_Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.DiscoverAndInitializeSets">
            <summary>Sets the shim of DbContext.DiscoverAndInitializeSets()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.Dispose">
            <summary>Sets the shim of DbContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.DisposeBoolean">
            <summary>Sets the shim of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.EntryObject">
            <summary>Sets the shim of DbContext.Entry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.EqualsObject">
            <summary>Sets the shim of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.GetHashCode">
            <summary>Sets the shim of DbContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.GetType">
            <summary>Sets the shim of DbContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.GetValidationErrors">
            <summary>Sets the shim of DbContext.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ObjectContextSystemDataEntityInfrastructureIObjectContextAdapterget">
            <summary>Sets the shim of DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.SaveChanges">
            <summary>Sets the shim of DbContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.SetType">
            <summary>Sets the shim of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the shim of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ToString">
            <summary>Sets the shim of DbContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the shim of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.AllInstances.EntryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbContext,``0,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of DbContext.Entry(!!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContext.AllInstances.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbContext,System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of DbContext.Set()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.CallOnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.CallOnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.CallValidateEntityDbEntityEntry">
            <summary>Sets the shim of DbContext.CallValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ChangeTrackerGet">
            <summary>Sets the shim of DbContext.get_ChangeTracker()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ConfigurationGet">
            <summary>Sets the shim of DbContext.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.DatabaseGet">
            <summary>Sets the shim of DbContext.get_Database()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.DiscoverAndInitializeSets">
            <summary>Sets the shim of DbContext.DiscoverAndInitializeSets()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.Dispose">
            <summary>Sets the shim of DbContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.EntryObject">
            <summary>Sets the shim of DbContext.Entry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.EqualsObject">
            <summary>Sets the shim of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.GetType01">
            <summary>Sets the shim of DbContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.GetValidationErrors">
            <summary>Sets the shim of DbContext.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ObjectContextSystemDataEntityInfrastructureIObjectContextAdapterget">
            <summary>Sets the shim of DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.SaveChanges">
            <summary>Sets the shim of DbContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.SetType">
            <summary>Sets the shim of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the shim of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ToString01">
            <summary>Sets the shim of DbContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContext.AllInstances.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the shim of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbContextTransaction">
            <summary>Shim type of System.Data.Entity.DbContextTransaction</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContextTransaction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContextTransaction.#ctor(System.Data.Entity.DbContextTransaction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContextTransaction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContextTransaction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbContextTransaction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.Commit">
            <summary>Sets the shim of DbContextTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.ConstructorEntityConnection">
            <summary>Sets the shim of DbContextTransaction.DbContextTransaction(EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.ConstructorEntityConnectionIsolationLevel">
            <summary>Sets the shim of DbContextTransaction.DbContextTransaction(EntityConnection connection, IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.Dispose">
            <summary>Sets the shim of DbContextTransaction.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.DisposeBoolean">
            <summary>Sets the shim of DbContextTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.EnsureOpenConnection">
            <summary>Sets the shim of DbContextTransaction.EnsureOpenConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.EqualsObject">
            <summary>Sets the shim of DbContextTransaction.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.GetHashCode">
            <summary>Sets the shim of DbContextTransaction.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.GetType">
            <summary>Sets the shim of DbContextTransaction.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.Rollback">
            <summary>Sets the shim of DbContextTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.ToString">
            <summary>Sets the shim of DbContextTransaction.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.UnderlyingTransactionGet">
            <summary>Sets the shim of DbContextTransaction.get_UnderlyingTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.Commit">
            <summary>Sets the shim of DbContextTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.Dispose">
            <summary>Sets the shim of DbContextTransaction.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DbContextTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.EnsureOpenConnection">
            <summary>Sets the shim of DbContextTransaction.EnsureOpenConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.EqualsObject">
            <summary>Sets the shim of DbContextTransaction.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbContextTransaction.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.GetType01">
            <summary>Sets the shim of DbContextTransaction.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.Rollback">
            <summary>Sets the shim of DbContextTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.ToString01">
            <summary>Sets the shim of DbContextTransaction.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbContextTransaction.AllInstances.UnderlyingTransactionGet">
            <summary>Sets the shim of DbContextTransaction.get_UnderlyingTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbFunctionAttribute">
            <summary>Shim type of System.Data.Entity.DbFunctionAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctionAttribute.#ctor(System.Data.Entity.DbFunctionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.ConstructorStringString">
            <summary>Sets the shim of DbFunctionAttribute.DbFunctionAttribute(String namespaceName, String functionName)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.FunctionNameGet">
            <summary>Sets the shim of DbFunctionAttribute.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.NamespaceNameGet">
            <summary>Sets the shim of DbFunctionAttribute.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbFunctionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.AllInstances.FunctionNameGet">
            <summary>Sets the shim of DbFunctionAttribute.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctionAttribute.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of DbFunctionAttribute.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbFunctions">
            <summary>Shim type of System.Data.Entity.DbFunctions</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbFunctions.BootstrapFunctionOf2IEnumerableOfM0MethodInfo``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Reflection.MethodInfo,``1})">
            <summary>Sets the shim of DbFunctions.BootstrapFunction(IEnumerable`1&lt;!!0&gt; collection, MethodInfo method)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddDaysNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddDays(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddDaysNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddDays(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddHoursNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddHours(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddHoursNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddHours(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddHoursNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddHours(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMicrosecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMicroseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMicrosecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMicroseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMicrosecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMicroseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMillisecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMilliseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMillisecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMilliseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMillisecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMilliseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMinutesNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMinutes(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMinutesNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMinutes(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMinutesNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMinutes(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMonthsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMonths(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddMonthsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddMonths(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddNanosecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddNanoseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddNanosecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddNanoseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddNanosecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddNanoseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddSecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddSeconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddSecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddSeconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddSecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddSeconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddYearsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddYears(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AddYearsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of DbFunctions.AddYears(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AsNonUnicodeString">
            <summary>Sets the shim of DbFunctions.AsNonUnicode(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.AsUnicodeString">
            <summary>Sets the shim of DbFunctions.AsUnicode(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.CreateDateTimeNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfDouble">
            <summary>Sets the shim of DbFunctions.CreateDateTime(Nullable`1&lt;Int32&gt; year, Nullable`1&lt;Int32&gt; month, Nullable`1&lt;Int32&gt; day, Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.CreateDateTimeOffsetNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of DbFunctions.CreateDateTimeOffset(Nullable`1&lt;Int32&gt; year, Nullable`1&lt;Int32&gt; month, Nullable`1&lt;Int32&gt; day, Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second, Nullable`1&lt;Int32&gt; timeZoneOffset)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.CreateTimeNullableOfInt32NullableOfInt32NullableOfDouble">
            <summary>Sets the shim of DbFunctions.CreateTime(Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffDaysNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffDays(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffDaysNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffDays(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffHoursNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffHours(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffHoursNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffHours(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffHoursNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffHours(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMicrosecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffMicroseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMicrosecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffMicroseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMicrosecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffMicroseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMillisecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffMilliseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMillisecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffMilliseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMillisecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffMilliseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMinutesNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffMinutes(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMinutesNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffMinutes(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMinutesNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffMinutes(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMonthsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffMonths(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffMonthsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffMonths(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffNanosecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffNanoseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffNanosecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffNanoseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffNanosecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffNanoseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffSecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffSeconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffSecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffSeconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffSecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of DbFunctions.DiffSeconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffYearsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.DiffYears(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.DiffYearsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.DiffYears(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.GetTotalOffsetMinutesNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.GetTotalOffsetMinutes(Nullable`1&lt;DateTimeOffset&gt; dateTimeOffsetArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.LeftStringNullableOfInt64">
            <summary>Sets the shim of DbFunctions.Left(String stringArgument, Nullable`1&lt;Int64&gt; length)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.ReverseString">
            <summary>Sets the shim of DbFunctions.Reverse(String stringArgument)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.RightStringNullableOfInt64">
            <summary>Sets the shim of DbFunctions.Right(String stringArgument, Nullable`1&lt;Int64&gt; length)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfDecimal">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfDouble">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfInt32">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfInt64">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of DbFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfDecimal">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfDouble">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfInt32">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfInt64">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.StandardDeviationPIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of DbFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.TruncateNullableOfDecimalNullableOfInt32">
            <summary>Sets the shim of DbFunctions.Truncate(Nullable`1&lt;Decimal&gt; value, Nullable`1&lt;Int32&gt; digits)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.TruncateNullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of DbFunctions.Truncate(Nullable`1&lt;Double&gt; value, Nullable`1&lt;Int32&gt; digits)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.TruncateTimeNullableOfDateTime">
            <summary>Sets the shim of DbFunctions.TruncateTime(Nullable`1&lt;DateTime&gt; dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.TruncateTimeNullableOfDateTimeOffset">
            <summary>Sets the shim of DbFunctions.TruncateTime(Nullable`1&lt;DateTimeOffset&gt; dateValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfDecimal">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfDouble">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfInt32">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfInt64">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of DbFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfDecimal">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfDouble">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfInt32">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfInt64">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbFunctions.VarPIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of DbFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbModelBuilder">
            <summary>Shim type of System.Data.Entity.DbModelBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.#ctor(System.Data.Entity.DbModelBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.ComplexTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.ComplexType()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.EntityOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.Entity()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.IgnoreOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder})">
            <summary>Sets the shim of DbModelBuilder.Ignore()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.PropertiesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration})">
            <summary>Sets the shim of DbModelBuilder.Properties()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.TypesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.Types()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder._Propertiesb__5Of1PropertyInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <summary>Sets the shim of DbModelBuilder.&lt;Properties&gt;b__5(PropertyInfo p)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.BuildDbConnection">
            <summary>Sets the shim of DbModelBuilder.Build(DbConnection providerConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.BuildDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.Build(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.BuildDbProviderManifestDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.Build(DbProviderManifest providerManifest, DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.BuildDynamicUpdateModelDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.BuildDynamicUpdateModel(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.Clone">
            <summary>Sets the shim of DbModelBuilder.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.ConfigurationsGet">
            <summary>Sets the shim of DbModelBuilder.get_Configurations()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.Constructor">
            <summary>Sets the shim of DbModelBuilder.DbModelBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.ConstructorDbModelBuilder">
            <summary>Sets the shim of DbModelBuilder.DbModelBuilder(DbModelBuilder source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.ConstructorDbModelBuilderVersion">
            <summary>Sets the shim of DbModelBuilder.DbModelBuilder(DbModelBuilderVersion modelBuilderVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.ConventionsGet">
            <summary>Sets the shim of DbModelBuilder.get_Conventions()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.EqualsObject">
            <summary>Sets the shim of DbModelBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.GetHashCode">
            <summary>Sets the shim of DbModelBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.GetProviderManifestDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.GetProviderManifest(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.GetType">
            <summary>Sets the shim of DbModelBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.HasDefaultSchemaString">
            <summary>Sets the shim of DbModelBuilder.HasDefaultSchema(String schema)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.IgnoreIEnumerableOfType">
            <summary>Sets the shim of DbModelBuilder.Ignore(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.MapTypesEdmModel">
            <summary>Sets the shim of DbModelBuilder.MapTypes(EdmModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.Properties">
            <summary>Sets the shim of DbModelBuilder.Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.ToString">
            <summary>Sets the shim of DbModelBuilder.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.Types">
            <summary>Sets the shim of DbModelBuilder.Types()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.VersionGet">
            <summary>Sets the shim of DbModelBuilder.get_Version()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder._MapTypesb__8Type">
            <summary>Sets the shim of DbModelBuilder.&lt;MapTypes&gt;b__8(Type t)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder._MapTypesb__aType">
            <summary>Sets the shim of DbModelBuilder.&lt;MapTypes&gt;b__a(Type t)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.ComplexTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder,System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.ComplexType()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.EntityOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder,System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.Entity()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.IgnoreOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder,System.Data.Entity.DbModelBuilder})">
            <summary>Sets the shim of DbModelBuilder.Ignore()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.PropertiesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder,System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration})">
            <summary>Sets the shim of DbModelBuilder.Properties()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.TypesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder,System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{``0}})">
            <summary>Sets the shim of DbModelBuilder.Types()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.BuildDbConnection">
            <summary>Sets the shim of DbModelBuilder.Build(DbConnection providerConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.BuildDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.Build(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.BuildDbProviderManifestDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.Build(DbProviderManifest providerManifest, DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.BuildDynamicUpdateModelDbProviderInfo">
            <summary>Sets the shim of DbModelBuilder.BuildDynamicUpdateModel(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.Clone">
            <summary>Sets the shim of DbModelBuilder.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.ConfigurationsGet">
            <summary>Sets the shim of DbModelBuilder.get_Configurations()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.ConventionsGet">
            <summary>Sets the shim of DbModelBuilder.get_Conventions()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.EqualsObject">
            <summary>Sets the shim of DbModelBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbModelBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.GetType01">
            <summary>Sets the shim of DbModelBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.HasDefaultSchemaString">
            <summary>Sets the shim of DbModelBuilder.HasDefaultSchema(String schema)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.IgnoreIEnumerableOfType">
            <summary>Sets the shim of DbModelBuilder.Ignore(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.MapTypesEdmModel">
            <summary>Sets the shim of DbModelBuilder.MapTypes(EdmModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.Properties">
            <summary>Sets the shim of DbModelBuilder.Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.ToString01">
            <summary>Sets the shim of DbModelBuilder.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.Types">
            <summary>Sets the shim of DbModelBuilder.Types()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilder.AllInstances.VersionGet">
            <summary>Sets the shim of DbModelBuilder.get_Version()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute">
            <summary>Shim type of System.Data.Entity.DbModelBuilderVersionAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.#ctor(System.Data.Entity.DbModelBuilderVersionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.ConstructorDbModelBuilderVersion">
            <summary>Sets the shim of DbModelBuilderVersionAttribute.DbModelBuilderVersionAttribute(DbModelBuilderVersion version)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.VersionGet">
            <summary>Sets the shim of DbModelBuilderVersionAttribute.get_Version()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.VersionSetDbModelBuilderVersion">
            <summary>Sets the shim of DbModelBuilderVersionAttribute.set_Version(DbModelBuilderVersion value)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.AllInstances.VersionGet">
            <summary>Sets the shim of DbModelBuilderVersionAttribute.get_Version()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbModelBuilderVersionAttribute.AllInstances.VersionSetDbModelBuilderVersion">
            <summary>Sets the shim of DbModelBuilderVersionAttribute.set_Version(DbModelBuilderVersion value)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbSet">
            <summary>Shim type of System.Data.Entity.DbSet</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.#ctor(System.Data.Entity.DbSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of DbSet.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AddObject">
            <summary>Sets the shim of DbSet.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AddRangeIEnumerable">
            <summary>Sets the shim of DbSet.AddRange(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AttachObject">
            <summary>Sets the shim of DbSet.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.Constructor">
            <summary>Sets the shim of DbSet.DbSet()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.Create">
            <summary>Sets the shim of DbSet.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.CreateType">
            <summary>Sets the shim of DbSet.Create(Type derivedEntityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.EqualsObject">
            <summary>Sets the shim of DbSet.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.FindObjectArray">
            <summary>Sets the shim of DbSet.Find(Object[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.GetHashCode">
            <summary>Sets the shim of DbSet.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.GetType">
            <summary>Sets the shim of DbSet.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.LocalGet">
            <summary>Sets the shim of DbSet.get_Local()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.RemoveObject">
            <summary>Sets the shim of DbSet.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.RemoveRangeIEnumerable">
            <summary>Sets the shim of DbSet.RemoveRange(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.SqlQueryStringObjectArray">
            <summary>Sets the shim of DbSet.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet.AllInstances.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet,System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of DbSet.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.AddObject">
            <summary>Sets the shim of DbSet.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.AddRangeIEnumerable">
            <summary>Sets the shim of DbSet.AddRange(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.AttachObject">
            <summary>Sets the shim of DbSet.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.Create">
            <summary>Sets the shim of DbSet.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.CreateType">
            <summary>Sets the shim of DbSet.Create(Type derivedEntityType)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.EqualsObject">
            <summary>Sets the shim of DbSet.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.FindObjectArray">
            <summary>Sets the shim of DbSet.Find(Object[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbSet.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.GetType01">
            <summary>Sets the shim of DbSet.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.LocalGet">
            <summary>Sets the shim of DbSet.get_Local()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.RemoveObject">
            <summary>Sets the shim of DbSet.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.RemoveRangeIEnumerable">
            <summary>Sets the shim of DbSet.RemoveRange(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet.AllInstances.SqlQueryStringObjectArray">
            <summary>Sets the shim of DbSet.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbSet`1">
            <summary>Shim type of System.Data.Entity.DbSet`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.#ctor(System.Data.Entity.DbSet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Data.Entity.IDbSet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of DbSet`1.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of DbSet`1.AddRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AddT0">
            <summary>Sets the shim of DbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AttachT0">
            <summary>Sets the shim of DbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.Constructor">
            <summary>Sets the shim of DbSet`1.DbSet`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.Create">
            <summary>Sets the shim of DbSet`1.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.EqualsObject">
            <summary>Sets the shim of DbSet`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.FindObjectArray">
            <summary>Sets the shim of DbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.GetHashCode">
            <summary>Sets the shim of DbSet`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.GetType">
            <summary>Sets the shim of DbSet`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.ImplicitOpDbSetOfT0DbSet">
            <summary>Sets the shim of DbSet`1.op_Implicit(DbSet`1&lt;!0&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.LocalGet">
            <summary>Sets the shim of DbSet`1.get_Local()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of DbSet`1.RemoveRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.RemoveT0">
            <summary>Sets the shim of DbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.SqlQueryStringObjectArray">
            <summary>Sets the shim of DbSet`1.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{`0},``0})">
            <summary>Sets the shim of DbSet`1.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of DbSet`1.AddRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.AddT0">
            <summary>Sets the shim of DbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.AttachT0">
            <summary>Sets the shim of DbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.Create">
            <summary>Sets the shim of DbSet`1.Create()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbSet`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.FindObjectArray">
            <summary>Sets the shim of DbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbSet`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.GetType01">
            <summary>Sets the shim of DbSet`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.LocalGet">
            <summary>Sets the shim of DbSet`1.get_Local()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of DbSet`1.RemoveRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.RemoveT0">
            <summary>Sets the shim of DbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDbSet`1.AllInstances.SqlQueryStringObjectArray">
            <summary>Sets the shim of DbSet`1.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1">
            <summary>Shim type of System.Data.Entity.DropCreateDatabaseAlways`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.#ctor(System.Data.Entity.DropCreateDatabaseAlways{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.Bind(System.Data.Entity.IDatabaseInitializer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.Constructor">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.DropCreateDatabaseAlways`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.InitializeDatabaseT0">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.SeedT0">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.StaticConstructor">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.DropCreateDatabaseAlways`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1._InitializeDatabaseb__0">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.&lt;InitializeDatabase&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.AllInstances.InitializeDatabaseT0">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseAlways`1.AllInstances.SeedT0">
            <summary>Sets the shim of DropCreateDatabaseAlways`1.Seed(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1">
            <summary>Shim type of System.Data.Entity.DropCreateDatabaseIfModelChanges`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.#ctor(System.Data.Entity.DropCreateDatabaseIfModelChanges{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.Bind(System.Data.Entity.IDatabaseInitializer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.Constructor">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.DropCreateDatabaseIfModelChanges`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.InitializeDatabaseT0">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.SeedT0">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.StaticConstructor">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.DropCreateDatabaseIfModelChanges`1()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.AllInstances.InitializeDatabaseT0">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimDropCreateDatabaseIfModelChanges`1.AllInstances.SeedT0">
            <summary>Sets the shim of DropCreateDatabaseIfModelChanges`1.Seed(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2">
            <summary>Shim type of System.Data.Entity.MigrateDatabaseToLatestVersion`2</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.#ctor(System.Data.Entity.MigrateDatabaseToLatestVersion{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.Bind(System.Data.Entity.IDatabaseInitializer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.Constructor">
            <summary>Sets the shim of MigrateDatabaseToLatestVersion`2.MigrateDatabaseToLatestVersion`2()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.ConstructorString">
            <summary>Sets the shim of MigrateDatabaseToLatestVersion`2.MigrateDatabaseToLatestVersion`2(String connectionStringName)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.InitializeDatabaseT0">
            <summary>Sets the shim of MigrateDatabaseToLatestVersion`2.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.StaticConstructor">
            <summary>Sets the shim of MigrateDatabaseToLatestVersion`2.MigrateDatabaseToLatestVersion`2()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimMigrateDatabaseToLatestVersion`2.AllInstances.InitializeDatabaseT0">
            <summary>Sets the shim of MigrateDatabaseToLatestVersion`2.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1">
            <summary>Shim type of System.Data.Entity.NullDatabaseInitializer`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.#ctor(System.Data.Entity.NullDatabaseInitializer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.Bind(System.Data.Entity.IDatabaseInitializer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.Constructor">
            <summary>Sets the shim of NullDatabaseInitializer`1.NullDatabaseInitializer`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.InitializeDatabaseT0">
            <summary>Sets the shim of NullDatabaseInitializer`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimNullDatabaseInitializer`1.AllInstances.InitializeDatabaseT0">
            <summary>Sets the shim of NullDatabaseInitializer`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimObservableCollectionExtensions">
            <summary>Shim type of System.Data.Entity.ObservableCollectionExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimObservableCollectionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimObservableCollectionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimObservableCollectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimObservableCollectionExtensions.ToBindingListOf1ObservableCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ObservableCollection{``0},System.ComponentModel.BindingList{``0}})">
            <summary>Sets the shim of ObservableCollectionExtensions.ToBindingList(ObservableCollection`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimObservableCollectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.ShimQueryableExtensions">
            <summary>Shim type of System.Data.Entity.QueryableExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.AsNoTrackingOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.AsNoTracking(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.AsStreamingOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.AsStreaming(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.CommonAsNoTrackingOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of QueryableExtensions.CommonAsNoTracking(!!0 source)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.CommonAsStreamingOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of QueryableExtensions.CommonAsStreaming(!!0 source)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.CommonIncludeOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``0})">
            <summary>Sets the shim of QueryableExtensions.CommonInclude(!!0 source, String path)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.IncludeOf1IQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.Include(IQueryable`1&lt;!!0&gt; source, String path)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.IncludeOf2IQueryableOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.Include(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.SkipOf1IQueryableOfM0ExpressionOfFuncOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.Skip(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`1&lt;Int32&gt;&gt; countAccessor)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.ShimQueryableExtensions.TakeOf1IQueryableOfM0ExpressionOfFuncOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.Take(IQueryable`1&lt;!!0&gt; source, Expression`1&lt;Func`1&lt;Int32&gt;&gt; countAccessor)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.AsNoTrackingIQueryable">
            <summary>Sets the shim of QueryableExtensions.AsNoTracking(IQueryable source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.AsStreamingIQueryable">
            <summary>Sets the shim of QueryableExtensions.AsStreaming(IQueryable source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.GetMethodStringFuncOfTypeTypeArray">
            <summary>Sets the shim of QueryableExtensions.GetMethod(String methodName, Func`2&lt;Type,Type[]&gt; getParameterTypes)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.GetMethodStringMethodInfoInt32">
            <summary>Sets the shim of QueryableExtensions.GetMethod(String methodName, MethodInfo getParameterTypesMethod, Int32 genericArgumentsCount)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.IncludeIQueryableString">
            <summary>Sets the shim of QueryableExtensions.Include(IQueryable source, String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.LoadIQueryable">
            <summary>Sets the shim of QueryableExtensions.Load(IQueryable source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.MatchesMethodInfoTypeArray">
            <summary>Sets the shim of QueryableExtensions.Matches(MethodInfo methodInfo, Type[] parameterTypes)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.PrettyPrintMethodInfoInt32">
            <summary>Sets the shim of QueryableExtensions.PrettyPrint(MethodInfo getParameterTypesMethod, Int32 genericArgumentsCount)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.StaticConstructor">
            <summary>Sets the shim of QueryableExtensions.QueryableExtensions()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions.TryGetObjectQueryIQueryable">
            <summary>Sets the shim of QueryableExtensions.TryGetObjectQuery(IQueryable source)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions._Matchesb__0ParameterInfo">
            <summary>Sets the shim of QueryableExtensions.&lt;Matches&gt;b__0(ParameterInfo p)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions._cctorb__2Type">
            <summary>Sets the shim of QueryableExtensions.&lt;.cctor&gt;b__2(Type T)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.ShimQueryableExtensions._cctorb__3Type">
            <summary>Sets the shim of QueryableExtensions.&lt;.cctor&gt;b__3(Type T)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1">
            <summary>Stub type of System.Data.Entity.CreateDatabaseIfNotExists`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.InitializeStub">
            <summary>Initializes a new instance of type StubCreateDatabaseIfNotExists</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.Seed(`0)">
            <summary>Sets the stub of CreateDatabaseIfNotExists`1.Seed(!0 context)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.SeedT0">
            <summary>Sets the stub of CreateDatabaseIfNotExists`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubCreateDatabaseIfNotExists`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbConfiguration">
            <summary>Stub type of System.Data.Entity.DbConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfiguration.Equals(System.Object)">
            <summary>Sets the stub of DbConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfiguration.EqualsObject">
            <summary>Sets the stub of DbConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfiguration.GetHashCode">
            <summary>Sets the stub of DbConfiguration.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfiguration.GetHashCode01">
            <summary>Sets the stub of DbConfiguration.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubDbConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfiguration.ToString">
            <summary>Sets the stub of DbConfiguration.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfiguration.ToString01">
            <summary>Sets the stub of DbConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute">
            <summary>Stub type of System.Data.Entity.DbConfigurationTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDbConfigurationTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbConfigurationTypeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbContext">
            <summary>Stub type of System.Data.Entity.DbContext</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbContext</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbFunctionAttribute">
            <summary>Stub type of System.Data.Entity.DbFunctionAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbFunctionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbFunctionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDbFunctionAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbFunctionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbFunctionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbFunctionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbFunctionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbFunctionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbFunctionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbFunctionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbFunctionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbModelBuilder">
            <summary>Stub type of System.Data.Entity.DbModelBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.#ctor(System.Data.Entity.DbModelBuilderVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Build(System.Data.Entity.Infrastructure.DbProviderInfo)">
            <summary>Sets the stub of DbModelBuilder.Build(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Build(System.Data.Common.DbConnection)">
            <summary>Sets the stub of DbModelBuilder.Build(DbConnection providerConnection)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.BuildDbConnection">
            <summary>Sets the stub of DbModelBuilder.Build(DbConnection providerConnection)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.BuildDbProviderInfo">
            <summary>Sets the stub of DbModelBuilder.Build(DbProviderInfo providerInfo)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.ComplexType``1">
            <summary>Sets the stub of DbModelBuilder.ComplexType()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.ComplexTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0}})">
            <summary>Sets stubs of ComplexType()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.ConfigurationsGet">
            <summary>Sets the stub of DbModelBuilder.get_Configurations()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.ConventionsGet">
            <summary>Sets the stub of DbModelBuilder.get_Conventions()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Entity``1">
            <summary>Sets the stub of DbModelBuilder.Entity()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.EntityOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0}})">
            <summary>Sets stubs of Entity()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Equals(System.Object)">
            <summary>Sets the stub of DbModelBuilder.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.EqualsObject">
            <summary>Sets the stub of DbModelBuilder.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.GetHashCode">
            <summary>Sets the stub of DbModelBuilder.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.GetHashCode01">
            <summary>Sets the stub of DbModelBuilder.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.HasDefaultSchema(System.String)">
            <summary>Sets the stub of DbModelBuilder.HasDefaultSchema(String schema)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.HasDefaultSchemaString">
            <summary>Sets the stub of DbModelBuilder.HasDefaultSchema(String schema)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Ignore``1">
            <summary>Sets the stub of DbModelBuilder.Ignore()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.Ignore(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of DbModelBuilder.Ignore(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.IgnoreIEnumerableOfType">
            <summary>Sets the stub of DbModelBuilder.Ignore(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.IgnoreOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbModelBuilder})">
            <summary>Sets stubs of Ignore()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubDbModelBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbModelBuilder.ToString">
            <summary>Sets the stub of DbModelBuilder.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbModelBuilder.ToString01">
            <summary>Sets the stub of DbModelBuilder.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbModelBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbModelBuilder.Configurations">
            <summary>Sets the stub of DbModelBuilder.get_Configurations()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbModelBuilder.Conventions">
            <summary>Sets the stub of DbModelBuilder.get_Conventions()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbModelBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbModelBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbSet">
            <summary>Stub type of System.Data.Entity.DbSet</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Add(System.Object)">
            <summary>Sets the stub of DbSet.Add(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.AddObject">
            <summary>Sets the stub of DbSet.Add(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.AddRange(System.Collections.IEnumerable)">
            <summary>Sets the stub of DbSet.AddRange(IEnumerable entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.AddRangeIEnumerable">
            <summary>Sets the stub of DbSet.AddRange(IEnumerable entities)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.AsNoTracking">
            <summary>Sets the stub of DbQuery.AsNoTracking()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.AsNoTracking01">
            <summary>Sets the stub of DbQuery.AsNoTracking()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.AsStreaming">
            <summary>Sets the stub of DbQuery.AsStreaming()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.AsStreaming01">
            <summary>Sets the stub of DbQuery.AsStreaming()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Attach(System.Object)">
            <summary>Sets the stub of DbSet.Attach(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.AttachObject">
            <summary>Sets the stub of DbSet.Attach(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Create">
            <summary>Sets the stub of DbSet.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Create(System.Type)">
            <summary>Sets the stub of DbSet.Create(Type derivedEntityType)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.Create01">
            <summary>Sets the stub of DbSet.Create()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.CreateType">
            <summary>Sets the stub of DbSet.Create(Type derivedEntityType)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.ElementTypeGet">
            <summary>Sets the stub of DbQuery.get_ElementType()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Equals(System.Object)">
            <summary>Sets the stub of DbSet.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.EqualsObject">
            <summary>Sets the stub of DbSet.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Find(System.Object[])">
            <summary>Sets the stub of DbSet.Find(Object[] keyValues)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.FindObjectArray">
            <summary>Sets the stub of DbSet.Find(Object[] keyValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.GetHashCode">
            <summary>Sets the stub of DbSet.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.GetHashCode01">
            <summary>Sets the stub of DbSet.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Include(System.String)">
            <summary>Sets the stub of DbQuery.Include(String path)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.IncludeString">
            <summary>Sets the stub of DbQuery.Include(String path)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.InitializeStub">
            <summary>Initializes a new instance of type StubDbSet</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.LocalGet">
            <summary>Sets the stub of DbSet.get_Local()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.Remove(System.Object)">
            <summary>Sets the stub of DbSet.Remove(Object entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.RemoveObject">
            <summary>Sets the stub of DbSet.Remove(Object entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.RemoveRange(System.Collections.IEnumerable)">
            <summary>Sets the stub of DbSet.RemoveRange(IEnumerable entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.RemoveRangeIEnumerable">
            <summary>Sets the stub of DbSet.RemoveRange(IEnumerable entities)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.SqlQuery(System.String,System.Object[])">
            <summary>Sets the stub of DbSet.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.SqlQueryStringObjectArray">
            <summary>Sets the stub of DbSet.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet.ToString">
            <summary>Sets the stub of DbQuery.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet.ToString01">
            <summary>Sets the stub of DbQuery.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet.ElementType">
            <summary>Sets the stub of DbQuery.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet.Local">
            <summary>Sets the stub of DbSet.get_Local()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDbSet`1">
            <summary>Stub type of System.Data.Entity.DbSet`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Add(`0)">
            <summary>Sets the stub of DbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of DbSet`1.AddRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.AddRangeIEnumerableOfT0">
            <summary>Sets the stub of DbSet`1.AddRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.AddT0">
            <summary>Sets the stub of DbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.AsNoTracking">
            <summary>Sets the stub of DbQuery`1.AsNoTracking()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.AsNoTracking01">
            <summary>Sets the stub of DbQuery`1.AsNoTracking()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.AsStreaming">
            <summary>Sets the stub of DbQuery`1.AsStreaming()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.AsStreaming01">
            <summary>Sets the stub of DbQuery`1.AsStreaming()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Attach(`0)">
            <summary>Sets the stub of DbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.AttachT0">
            <summary>Sets the stub of DbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Create``1">
            <summary>Sets the stub of DbSet`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Create">
            <summary>Sets the stub of DbSet`1.Create()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.Create01">
            <summary>Sets the stub of DbSet`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Equals(System.Object)">
            <summary>Sets the stub of DbSet`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.EqualsObject">
            <summary>Sets the stub of DbSet`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Find(System.Object[])">
            <summary>Sets the stub of DbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.FindObjectArray">
            <summary>Sets the stub of DbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.GetHashCode">
            <summary>Sets the stub of DbSet`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.GetHashCode01">
            <summary>Sets the stub of DbSet`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Include(System.String)">
            <summary>Sets the stub of DbQuery`1.Include(String path)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.IncludeString">
            <summary>Sets the stub of DbQuery`1.Include(String path)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbSet</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.LocalGet">
            <summary>Sets the stub of DbSet`1.get_Local()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.Remove(`0)">
            <summary>Sets the stub of DbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of DbSet`1.RemoveRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.RemoveRangeIEnumerableOfT0">
            <summary>Sets the stub of DbSet`1.RemoveRange(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.RemoveT0">
            <summary>Sets the stub of DbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.SqlQuery(System.String,System.Object[])">
            <summary>Sets the stub of DbSet`1.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.SqlQueryStringObjectArray">
            <summary>Sets the stub of DbSet`1.SqlQuery(String sql, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDbSet`1.ToString">
            <summary>Sets the stub of DbQuery`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDbSet`1.ToString01">
            <summary>Sets the stub of DbQuery`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDbSet`1.Local">
            <summary>Sets the stub of DbSet`1.get_Local()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1">
            <summary>Stub type of System.Data.Entity.DropCreateDatabaseAlways`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.InitializeStub">
            <summary>Initializes a new instance of type StubDropCreateDatabaseAlways</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.Seed(`0)">
            <summary>Sets the stub of DropCreateDatabaseAlways`1.Seed(!0 context)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.SeedT0">
            <summary>Sets the stub of DropCreateDatabaseAlways`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseAlways`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1">
            <summary>Stub type of System.Data.Entity.DropCreateDatabaseIfModelChanges`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.InitializeStub">
            <summary>Initializes a new instance of type StubDropCreateDatabaseIfModelChanges</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.Seed(`0)">
            <summary>Sets the stub of DropCreateDatabaseIfModelChanges`1.Seed(!0 context)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.SeedT0">
            <summary>Sets the stub of DropCreateDatabaseIfModelChanges`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubDropCreateDatabaseIfModelChanges`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubIDatabaseInitializer`1">
            <summary>Stub type of System.Data.Entity.IDatabaseInitializer`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDatabaseInitializer`1.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseInitializer</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDatabaseInitializer`1.InitializeDatabaseT0">
            <summary>Sets the stub of IDatabaseInitializer`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDatabaseInitializer`1.ef::System#Data#Entity#IDatabaseInitializer{TContext}#InitializeDatabase(`0)">
            <summary>Sets the stub of IDatabaseInitializer`1.InitializeDatabase(!0 context)</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubIDbSet`1">
            <summary>Stub type of System.Data.Entity.IDbSet`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.#ctor">
            <summary>Initializes a new instance of type StubIDbSet</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.AddT0">
            <summary>Sets the stub of IDbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.AttachT0">
            <summary>Sets the stub of IDbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.Create">
            <summary>Sets the stub of IDbSet`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Create()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.FindObjectArray">
            <summary>Sets the stub of IDbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.LocalGet">
            <summary>Sets the stub of IDbSet`1.get_Local()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="F:System.Data.Entity.Fakes.StubIDbSet`1.RemoveT0">
            <summary>Sets the stub of IDbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.global::System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Add(`0)">
            <summary>Sets the stub of IDbSet`1.Add(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Attach(`0)">
            <summary>Sets the stub of IDbSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Create">
            <summary>Sets the stub of IDbSet`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Create``1">
            <summary>Sets the stub of IDbSet`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Find(System.Object[])">
            <summary>Sets the stub of IDbSet`1.Find(Object[] keyValues)</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Remove(`0)">
            <summary>Sets the stub of IDbSet`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubIDbSet`1.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubIDbSet`1.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubIDbSet`1.ef::System#Data#Entity#IDbSet{TEntity}#Local">
            <summary>Sets the stub of IDbSet`1.get_Local()</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubIDbSet`1.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2">
            <summary>Stub type of System.Data.Entity.MigrateDatabaseToLatestVersion`2</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.InitializeStub">
            <summary>Initializes a new instance of type StubMigrateDatabaseToLatestVersion</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubMigrateDatabaseToLatestVersion`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1">
            <summary>Stub type of System.Data.Entity.NullDatabaseInitializer`1</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1.InitializeStub">
            <summary>Initializes a new instance of type StubNullDatabaseInitializer</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Fakes.StubNullDatabaseInitializer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs">
            <summary>Shim type of System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.#ctor(System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.ReplaceServiceOf1FuncOfM0ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0,System.Object,``0}})">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.ReplaceService(Func`3&lt;!!0,Object,!!0&gt; serviceInterceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AddDefaultResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.AddDefaultResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AddDependencyResolverIDbDependencyResolverBoolean">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.AddDependencyResolver(IDbDependencyResolver resolver, Boolean overrideConfigFile)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.DependencyResolverGet">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.get_DependencyResolver()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.EqualsObject">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.GetHashCode">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.GetType">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.ToString">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.ReplaceServiceOf1FuncOfM0ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs,System.Func{``0,System.Object,``0}})">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.ReplaceService(Func`3&lt;!!0,Object,!!0&gt; serviceInterceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.AddDefaultResolverIDbDependencyResolver">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.AddDefaultResolver(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.AddDependencyResolverIDbDependencyResolverBoolean">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.AddDependencyResolver(IDbDependencyResolver resolver, Boolean overrideConfigFile)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.DependencyResolverGet">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.get_DependencyResolver()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.EqualsObject">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.GetType01">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbConfigurationLoadedEventArgs.AllInstances.ToString01">
            <summary>Sets the shim of DbConfigurationLoadedEventArgs.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions">
            <summary>Shim type of System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServiceOf1IDbDependencyResolver``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,``0})">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetService(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServiceOf1IDbDependencyResolverObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Object,``0})">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetService(IDbDependencyResolver resolver, Object key)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServicesOf1IDbDependencyResolver``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetServices(IDbDependencyResolver resolver)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServicesOf1IDbDependencyResolverObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Object,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetServices(IDbDependencyResolver resolver, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServiceAsServicesIDbDependencyResolverTypeObject">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetServiceAsServices(IDbDependencyResolver resolver, Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServiceIDbDependencyResolverType">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetService(IDbDependencyResolver resolver, Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimDbDependencyResolverExtensions.GetServicesIDbDependencyResolverType">
            <summary>Sets the shim of DbDependencyResolverExtensions.GetServices(IDbDependencyResolver resolver, Type type)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.#ctor(System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.ConstructorStringStringFuncOfT0">
            <summary>Sets the shim of ExecutionStrategyResolver`1.ExecutionStrategyResolver`1(String providerInvariantName, String serverName, Func`1&lt;!0&gt; getExecutionStrategy)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.GetServiceTypeObject">
            <summary>Sets the shim of ExecutionStrategyResolver`1.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.GetServicesTypeObject">
            <summary>Sets the shim of ExecutionStrategyResolver`1.GetServices(Type type, Object key)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.AllInstances.GetServiceTypeObject">
            <summary>Sets the shim of ExecutionStrategyResolver`1.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimExecutionStrategyResolver`1.AllInstances.GetServicesTypeObject">
            <summary>Sets the shim of ExecutionStrategyResolver`1.GetServices(Type type, Object key)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.#ctor(System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.ConstructorT0">
            <summary>Sets the shim of SingletonDependencyResolver`1.SingletonDependencyResolver`1(!0 singletonInstance)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.ConstructorT0FuncOfObjectBoolean">
            <summary>Sets the shim of SingletonDependencyResolver`1.SingletonDependencyResolver`1(!0 singletonInstance, Func`2&lt;Object,Boolean&gt; keyPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.ConstructorT0Object">
            <summary>Sets the shim of SingletonDependencyResolver`1.SingletonDependencyResolver`1(!0 singletonInstance, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.GetServiceTypeObject">
            <summary>Sets the shim of SingletonDependencyResolver`1.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.GetServicesTypeObject">
            <summary>Sets the shim of SingletonDependencyResolver`1.GetServices(Type type, Object key)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.AllInstances.GetServiceTypeObject">
            <summary>Sets the shim of SingletonDependencyResolver`1.GetService(Type type, Object key)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.ShimSingletonDependencyResolver`1.AllInstances.GetServicesTypeObject">
            <summary>Sets the shim of SingletonDependencyResolver`1.GetServices(Type type, Object key)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1">
            <summary>Stub type of System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1.#ctor(System.String,System.String,System.Func{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1.InitializeStub">
            <summary>Initializes a new instance of type StubExecutionStrategyResolver</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubExecutionStrategyResolver`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver">
            <summary>Stub type of System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver.#ctor">
            <summary>Initializes a new instance of type StubIDbDependencyResolver</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver.GetServiceTypeObject">
            <summary>Sets the stub of IDbDependencyResolver.GetService(Type type, Object key)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver.GetServicesTypeObject">
            <summary>Sets the stub of IDbDependencyResolver.GetServices(Type type, Object key)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver.ef::System#Data#Entity#Infrastructure#DependencyResolution#IDbDependencyResolver#GetService(System.Type,System.Object)">
            <summary>Sets the stub of IDbDependencyResolver.GetService(Type type, Object key)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubIDbDependencyResolver.ef::System#Data#Entity#Infrastructure#DependencyResolution#IDbDependencyResolver#GetServices(System.Type,System.Object)">
            <summary>Sets the stub of IDbDependencyResolver.GetServices(Type type, Object key)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1">
            <summary>Stub type of System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.#ctor(`0,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.#ctor(`0,System.Func{System.Object,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.InitializeStub">
            <summary>Initializes a new instance of type StubSingletonDependencyResolver</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.Fakes.StubSingletonDependencyResolver`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException">
            <summary>Shim type of System.Data.Entity.Infrastructure.CommitFailedException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.#ctor(System.Data.Entity.Infrastructure.CommitFailedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.Constructor">
            <summary>Sets the shim of CommitFailedException.CommitFailedException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of CommitFailedException.CommitFailedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.ConstructorString">
            <summary>Sets the shim of CommitFailedException.CommitFailedException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.ConstructorStringException">
            <summary>Sets the shim of CommitFailedException.CommitFailedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimCommitFailedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbChangeTracker</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.#ctor(System.Data.Entity.Infrastructure.DbChangeTracker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.EntriesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.DbEntityEntry{``0}}})">
            <summary>Sets the shim of DbChangeTracker.Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.DetectChanges">
            <summary>Sets the shim of DbChangeTracker.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.Entries">
            <summary>Sets the shim of DbChangeTracker.Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.EqualsObject">
            <summary>Sets the shim of DbChangeTracker.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.GetHashCode">
            <summary>Sets the shim of DbChangeTracker.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.GetType">
            <summary>Sets the shim of DbChangeTracker.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.HasChanges">
            <summary>Sets the shim of DbChangeTracker.HasChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.ToString">
            <summary>Sets the shim of DbChangeTracker.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.EntriesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbChangeTracker,System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.DbEntityEntry{``0}}})">
            <summary>Sets the shim of DbChangeTracker.Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.DetectChanges">
            <summary>Sets the shim of DbChangeTracker.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.Entries">
            <summary>Sets the shim of DbChangeTracker.Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.EqualsObject">
            <summary>Sets the shim of DbChangeTracker.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbChangeTracker.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.GetType01">
            <summary>Sets the shim of DbChangeTracker.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.HasChanges">
            <summary>Sets the shim of DbChangeTracker.HasChanges()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbChangeTracker.AllInstances.ToString01">
            <summary>Sets the shim of DbChangeTracker.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbCollectionEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.#ctor(System.Data.Entity.Infrastructure.DbCollectionEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbCollectionEntry{``0,``1}})">
            <summary>Sets the shim of DbCollectionEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.CurrentValueGet">
            <summary>Sets the shim of DbCollectionEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.CurrentValueSetObject">
            <summary>Sets the shim of DbCollectionEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.EntityEntryGet">
            <summary>Sets the shim of DbCollectionEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.IsLoadedGet">
            <summary>Sets the shim of DbCollectionEntry.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.IsLoadedSetBoolean">
            <summary>Sets the shim of DbCollectionEntry.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.Load">
            <summary>Sets the shim of DbCollectionEntry.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.NameGet">
            <summary>Sets the shim of DbCollectionEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.Query">
            <summary>Sets the shim of DbCollectionEntry.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbCollectionEntry,System.Data.Entity.Infrastructure.DbCollectionEntry{``0,``1}})">
            <summary>Sets the shim of DbCollectionEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbCollectionEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.CurrentValueSetObject">
            <summary>Sets the shim of DbCollectionEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbCollectionEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.IsLoadedGet">
            <summary>Sets the shim of DbCollectionEntry.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of DbCollectionEntry.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.Load">
            <summary>Sets the shim of DbCollectionEntry.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.NameGet">
            <summary>Sets the shim of DbCollectionEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry.AllInstances.Query">
            <summary>Sets the shim of DbCollectionEntry.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbCollectionEntry`2</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.#ctor(System.Data.Entity.Infrastructure.DbCollectionEntry{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.CurrentValueGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.CurrentValueSetICollectionOfT1">
            <summary>Sets the shim of DbCollectionEntry`2.set_CurrentValue(ICollection`1&lt;!1&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.EntityEntryGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.ImplicitOpDbCollectionEntryOfT0T1DbCollectionEntry">
            <summary>Sets the shim of DbCollectionEntry`2.op_Implicit(DbCollectionEntry`2&lt;!0,!1&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.IsLoadedGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.IsLoadedSetBoolean">
            <summary>Sets the shim of DbCollectionEntry`2.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.Load">
            <summary>Sets the shim of DbCollectionEntry`2.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.NameGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.Query">
            <summary>Sets the shim of DbCollectionEntry`2.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.CurrentValueSetICollectionOfT1">
            <summary>Sets the shim of DbCollectionEntry`2.set_CurrentValue(ICollection`1&lt;!1&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.IsLoadedGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of DbCollectionEntry`2.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.Load">
            <summary>Sets the shim of DbCollectionEntry`2.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.NameGet">
            <summary>Sets the shim of DbCollectionEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCollectionEntry`2.AllInstances.Query">
            <summary>Sets the shim of DbCollectionEntry`2.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbCompiledModel</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.CreateObjectContextOf1DbConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbConnection,``0})">
            <summary>Sets the shim of DbCompiledModel.CreateObjectContext(DbConnection existingConnection)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.GetConstructorDelegateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Core.Objects.ObjectContext}})">
            <summary>Sets the shim of DbCompiledModel.GetConstructorDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.CachedModelBuilderGet">
            <summary>Sets the shim of DbCompiledModel.get_CachedModelBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.Constructor">
            <summary>Sets the shim of DbCompiledModel.DbCompiledModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.ConstructorDbModel">
            <summary>Sets the shim of DbCompiledModel.DbCompiledModel(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.DefaultSchemaGet">
            <summary>Sets the shim of DbCompiledModel.get_DefaultSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.ProviderInfoGet">
            <summary>Sets the shim of DbCompiledModel.get_ProviderInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.StaticConstructor">
            <summary>Sets the shim of DbCompiledModel.DbCompiledModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel._cctorb__0EntityConnection">
            <summary>Sets the shim of DbCompiledModel.&lt;.cctor&gt;b__0(EntityConnection c)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.AllInstances.CreateObjectContextOf1DbConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbCompiledModel,System.Data.Common.DbConnection,``0})">
            <summary>Sets the shim of DbCompiledModel.CreateObjectContext(DbConnection existingConnection)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.AllInstances.CachedModelBuilderGet">
            <summary>Sets the shim of DbCompiledModel.get_CachedModelBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.AllInstances.DefaultSchemaGet">
            <summary>Sets the shim of DbCompiledModel.get_DefaultSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbCompiledModel.AllInstances.ProviderInfoGet">
            <summary>Sets the shim of DbCompiledModel.get_ProviderInfo()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbComplexPropertyEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.#ctor(System.Data.Entity.Infrastructure.DbComplexPropertyEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry{``0,``1}})">
            <summary>Sets the shim of DbComplexPropertyEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.ComplexPropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.PropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry.Property(String propertyName)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.AllInstances.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry,System.Data.Entity.Infrastructure.DbComplexPropertyEntry{``0,``1}})">
            <summary>Sets the shim of DbComplexPropertyEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.AllInstances.ComplexPropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry.AllInstances.PropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry.Property(String propertyName)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.#ctor(System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.ComplexPropertyOf1ExpressionOfFuncOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(Expression`1&lt;Func`2&lt;!1,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.ComplexPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.PropertyOf1ExpressionOfFuncOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(Expression`1&lt;Func`2&lt;!1,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.PropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.ComplexPropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.ImplicitOpDbComplexPropertyEntryOfT0T1DbComplexPropertyEntry">
            <summary>Sets the shim of DbComplexPropertyEntry`2.op_Implicit(DbComplexPropertyEntry`2&lt;!0,!1&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.PropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(String propertyName)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.ComplexPropertyOf1ExpressionOfFuncOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(Expression`1&lt;Func`2&lt;!1,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.ComplexPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1},System.String,System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.PropertyOf1ExpressionOfFuncOfT1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(Expression`1&lt;Func`2&lt;!1,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.PropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1},System.String,System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.ComplexPropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry`2.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbComplexPropertyEntry`2.AllInstances.PropertyString">
            <summary>Sets the shim of DbComplexPropertyEntry`2.Property(String propertyName)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbConnectionInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.#ctor(System.Data.Entity.Infrastructure.DbConnectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.ConstructorString">
            <summary>Sets the shim of DbConnectionInfo.DbConnectionInfo(String connectionName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.ConstructorStringString">
            <summary>Sets the shim of DbConnectionInfo.DbConnectionInfo(String connectionString, String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.EqualsObject">
            <summary>Sets the shim of DbConnectionInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.GetHashCode">
            <summary>Sets the shim of DbConnectionInfo.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.GetType">
            <summary>Sets the shim of DbConnectionInfo.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.ToString">
            <summary>Sets the shim of DbConnectionInfo.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.AllInstances.EqualsObject">
            <summary>Sets the shim of DbConnectionInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbConnectionInfo.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.AllInstances.GetType01">
            <summary>Sets the shim of DbConnectionInfo.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbConnectionInfo.AllInstances.ToString01">
            <summary>Sets the shim of DbConnectionInfo.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbContextConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.#ctor(System.Data.Entity.Infrastructure.DbContextConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AutoDetectChangesEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_AutoDetectChangesEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AutoDetectChangesEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_AutoDetectChangesEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.EqualsObject">
            <summary>Sets the shim of DbContextConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.GetHashCode">
            <summary>Sets the shim of DbContextConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.GetType">
            <summary>Sets the shim of DbContextConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.LazyLoadingEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.ProxyCreationEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.ToString">
            <summary>Sets the shim of DbContextConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.UseDatabaseNullSemanticsGet">
            <summary>Sets the shim of DbContextConfiguration.get_UseDatabaseNullSemantics()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.UseDatabaseNullSemanticsSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_UseDatabaseNullSemantics(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.ValidateOnSaveEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_ValidateOnSaveEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.ValidateOnSaveEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_ValidateOnSaveEnabled(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.AutoDetectChangesEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_AutoDetectChangesEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.AutoDetectChangesEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_AutoDetectChangesEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of DbContextConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbContextConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of DbContextConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.LazyLoadingEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.ProxyCreationEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of DbContextConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.UseDatabaseNullSemanticsGet">
            <summary>Sets the shim of DbContextConfiguration.get_UseDatabaseNullSemantics()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.UseDatabaseNullSemanticsSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_UseDatabaseNullSemantics(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.ValidateOnSaveEnabledGet">
            <summary>Sets the shim of DbContextConfiguration.get_ValidateOnSaveEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextConfiguration.AllInstances.ValidateOnSaveEnabledSetBoolean">
            <summary>Sets the shim of DbContextConfiguration.set_ValidateOnSaveEnabled(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbContextInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.#ctor(System.Data.Entity.Infrastructure.DbContextInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ClearInfoForContextType">
            <summary>Sets the shim of DbContextInfo.ClearInfoForContext(Type contextType)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConfigureContextDbContext">
            <summary>Sets the shim of DbContextInfo.ConfigureContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConnectionProviderNameGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionProviderName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConnectionStringGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConnectionStringNameGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionStringName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConnectionStringOriginGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionStringOrigin()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorDbContext">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorType">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeConfiguration">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, Configuration config)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeConfigurationDbConnectionInfo">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, Configuration config, DbConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeConfigurationDbProviderInfo">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, Configuration config, DbProviderInfo modelProviderInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeConnectionStringSettingsCollection">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, ConnectionStringSettingsCollection connectionStringSettings)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeDbConnectionInfo">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, DbConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ConstructorTypeDbProviderInfo">
            <summary>Sets the shim of DbContextInfo.DbContextInfo(Type contextType, DbProviderInfo modelProviderInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.ContextTypeGet">
            <summary>Sets the shim of DbContextInfo.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.CreateActivator">
            <summary>Sets the shim of DbContextInfo.CreateActivator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.CreateInstance">
            <summary>Sets the shim of DbContextInfo.CreateInstance()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.IsConstructibleGet">
            <summary>Sets the shim of DbContextInfo.get_IsConstructible()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.MapContextToInfoTypeDbContextInfo">
            <summary>Sets the shim of DbContextInfo.MapContextToInfo(Type contextType, DbContextInfo info)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.OnModelCreatingGet">
            <summary>Sets the shim of DbContextInfo.get_OnModelCreating()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.OnModelCreatingSetActionOfDbModelBuilder">
            <summary>Sets the shim of DbContextInfo.set_OnModelCreating(Action`1&lt;DbModelBuilder&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.StaticConstructor">
            <summary>Sets the shim of DbContextInfo.DbContextInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.TryGetInfoForContextType">
            <summary>Sets the shim of DbContextInfo.TryGetInfoForContext(Type contextType)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo._CreateActivatorb__4">
            <summary>Sets the shim of DbContextInfo.&lt;CreateActivator&gt;b__4()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo._CreateActivatorb__5Type">
            <summary>Sets the shim of DbContextInfo.&lt;CreateActivator&gt;b__5(Type t)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo._CreateInstanceb__0ObjectEventArgs">
            <summary>Sets the shim of DbContextInfo.&lt;CreateInstance&gt;b__0(Object _, EventArgs __)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo._CreateInstanceb__1ObjectEventArgs">
            <summary>Sets the shim of DbContextInfo.&lt;CreateInstance&gt;b__1(Object _, EventArgs __)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ConfigureContextDbContext">
            <summary>Sets the shim of DbContextInfo.ConfigureContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ConnectionProviderNameGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionProviderName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ConnectionStringNameGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionStringName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ConnectionStringOriginGet">
            <summary>Sets the shim of DbContextInfo.get_ConnectionStringOrigin()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.ContextTypeGet">
            <summary>Sets the shim of DbContextInfo.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.CreateActivator">
            <summary>Sets the shim of DbContextInfo.CreateActivator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.CreateInstance">
            <summary>Sets the shim of DbContextInfo.CreateInstance()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.IsConstructibleGet">
            <summary>Sets the shim of DbContextInfo.get_IsConstructible()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.OnModelCreatingGet">
            <summary>Sets the shim of DbContextInfo.get_OnModelCreating()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances.OnModelCreatingSetActionOfDbModelBuilder">
            <summary>Sets the shim of DbContextInfo.set_OnModelCreating(Action`1&lt;DbModelBuilder&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances._CreateActivatorb__4">
            <summary>Sets the shim of DbContextInfo.&lt;CreateActivator&gt;b__4()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances._CreateActivatorb__5Type">
            <summary>Sets the shim of DbContextInfo.&lt;CreateActivator&gt;b__5(Type t)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances._CreateInstanceb__0ObjectEventArgs">
            <summary>Sets the shim of DbContextInfo.&lt;CreateInstance&gt;b__0(Object _, EventArgs __)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbContextInfo.AllInstances._CreateInstanceb__1ObjectEventArgs">
            <summary>Sets the shim of DbContextInfo.&lt;CreateInstance&gt;b__1(Object _, EventArgs __)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbEntityEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of DbEntityEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.CollectionString">
            <summary>Sets the shim of DbEntityEntry.Collection(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.ComplexPropertyString">
            <summary>Sets the shim of DbEntityEntry.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.CurrentValuesGet">
            <summary>Sets the shim of DbEntityEntry.get_CurrentValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.EntityGet">
            <summary>Sets the shim of DbEntityEntry.get_Entity()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.EqualsDbEntityEntry">
            <summary>Sets the shim of DbEntityEntry.Equals(DbEntityEntry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.EqualsObject">
            <summary>Sets the shim of DbEntityEntry.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.GetDatabaseValues">
            <summary>Sets the shim of DbEntityEntry.GetDatabaseValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.GetHashCode">
            <summary>Sets the shim of DbEntityEntry.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.GetType">
            <summary>Sets the shim of DbEntityEntry.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.GetValidationResult">
            <summary>Sets the shim of DbEntityEntry.GetValidationResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.MemberString">
            <summary>Sets the shim of DbEntityEntry.Member(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.OriginalValuesGet">
            <summary>Sets the shim of DbEntityEntry.get_OriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.PropertyString">
            <summary>Sets the shim of DbEntityEntry.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.ReferenceString">
            <summary>Sets the shim of DbEntityEntry.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.Reload">
            <summary>Sets the shim of DbEntityEntry.Reload()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.StateGet">
            <summary>Sets the shim of DbEntityEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.StateSetEntityState">
            <summary>Sets the shim of DbEntityEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.ToString">
            <summary>Sets the shim of DbEntityEntry.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of DbEntityEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.CollectionString">
            <summary>Sets the shim of DbEntityEntry.Collection(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.ComplexPropertyString">
            <summary>Sets the shim of DbEntityEntry.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.CurrentValuesGet">
            <summary>Sets the shim of DbEntityEntry.get_CurrentValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.EntityGet">
            <summary>Sets the shim of DbEntityEntry.get_Entity()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.EqualsDbEntityEntry">
            <summary>Sets the shim of DbEntityEntry.Equals(DbEntityEntry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.EqualsObject">
            <summary>Sets the shim of DbEntityEntry.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.GetDatabaseValues">
            <summary>Sets the shim of DbEntityEntry.GetDatabaseValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbEntityEntry.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.GetType01">
            <summary>Sets the shim of DbEntityEntry.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.GetValidationResult">
            <summary>Sets the shim of DbEntityEntry.GetValidationResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.MemberString">
            <summary>Sets the shim of DbEntityEntry.Member(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.OriginalValuesGet">
            <summary>Sets the shim of DbEntityEntry.get_OriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.PropertyString">
            <summary>Sets the shim of DbEntityEntry.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.ReferenceString">
            <summary>Sets the shim of DbEntityEntry.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.Reload">
            <summary>Sets the shim of DbEntityEntry.Reload()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.StateGet">
            <summary>Sets the shim of DbEntityEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.StateSetEntityState">
            <summary>Sets the shim of DbEntityEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry.AllInstances.ToString01">
            <summary>Sets the shim of DbEntityEntry.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbEntityEntry`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.CollectionOf1ExpressionOfFuncOfT0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Data.Entity.Infrastructure.DbCollectionEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Collection(Expression`1&lt;Func`2&lt;!0,ICollection`1&lt;!!0&gt;&gt;&gt; navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.CollectionOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbCollectionEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Collection(String navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ComplexPropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ComplexPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.MemberOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbMemberEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Member(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.PropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Property(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.PropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Property(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ReferenceOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbReferenceEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Reference(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ReferenceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Entity.Infrastructure.DbReferenceEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.CollectionString">
            <summary>Sets the shim of DbEntityEntry`1.Collection(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ComplexPropertyString">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.CurrentValuesGet">
            <summary>Sets the shim of DbEntityEntry`1.get_CurrentValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.EntityGet">
            <summary>Sets the shim of DbEntityEntry`1.get_Entity()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.EqualsDbEntityEntryOfT0">
            <summary>Sets the shim of DbEntityEntry`1.Equals(DbEntityEntry`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.EqualsObject">
            <summary>Sets the shim of DbEntityEntry`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.GetDatabaseValues">
            <summary>Sets the shim of DbEntityEntry`1.GetDatabaseValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.GetHashCode">
            <summary>Sets the shim of DbEntityEntry`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.GetType">
            <summary>Sets the shim of DbEntityEntry`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.GetValidationResult">
            <summary>Sets the shim of DbEntityEntry`1.GetValidationResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ImplicitOpDbEntityEntryOfT0DbEntityEntry">
            <summary>Sets the shim of DbEntityEntry`1.op_Implicit(DbEntityEntry`1&lt;!0&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.MemberString">
            <summary>Sets the shim of DbEntityEntry`1.Member(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.OriginalValuesGet">
            <summary>Sets the shim of DbEntityEntry`1.get_OriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.PropertyString">
            <summary>Sets the shim of DbEntityEntry`1.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ReferenceString">
            <summary>Sets the shim of DbEntityEntry`1.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.Reload">
            <summary>Sets the shim of DbEntityEntry`1.Reload()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.StateGet">
            <summary>Sets the shim of DbEntityEntry`1.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.StateSetEntityState">
            <summary>Sets the shim of DbEntityEntry`1.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.ToString">
            <summary>Sets the shim of DbEntityEntry`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.CollectionOf1ExpressionOfFuncOfT0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Data.Entity.Infrastructure.DbCollectionEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Collection(Expression`1&lt;Func`2&lt;!0,ICollection`1&lt;!!0&gt;&gt;&gt; navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.CollectionOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.String,System.Data.Entity.Infrastructure.DbCollectionEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Collection(String navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ComplexPropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ComplexPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.String,System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.MemberOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.String,System.Data.Entity.Infrastructure.DbMemberEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Member(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.PropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Property(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.PropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.String,System.Data.Entity.Infrastructure.DbPropertyEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Property(String propertyName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ReferenceOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.Infrastructure.DbReferenceEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Reference(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationProperty)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ReferenceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbEntityEntry{`0},System.String,System.Data.Entity.Infrastructure.DbReferenceEntry{`0,``0}})">
            <summary>Sets the shim of DbEntityEntry`1.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.CollectionString">
            <summary>Sets the shim of DbEntityEntry`1.Collection(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ComplexPropertyString">
            <summary>Sets the shim of DbEntityEntry`1.ComplexProperty(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.CurrentValuesGet">
            <summary>Sets the shim of DbEntityEntry`1.get_CurrentValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.EntityGet">
            <summary>Sets the shim of DbEntityEntry`1.get_Entity()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.EqualsDbEntityEntryOfT0">
            <summary>Sets the shim of DbEntityEntry`1.Equals(DbEntityEntry`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbEntityEntry`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.GetDatabaseValues">
            <summary>Sets the shim of DbEntityEntry`1.GetDatabaseValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbEntityEntry`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.GetType01">
            <summary>Sets the shim of DbEntityEntry`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.GetValidationResult">
            <summary>Sets the shim of DbEntityEntry`1.GetValidationResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.MemberString">
            <summary>Sets the shim of DbEntityEntry`1.Member(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.OriginalValuesGet">
            <summary>Sets the shim of DbEntityEntry`1.get_OriginalValues()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.PropertyString">
            <summary>Sets the shim of DbEntityEntry`1.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ReferenceString">
            <summary>Sets the shim of DbEntityEntry`1.Reference(String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.Reload">
            <summary>Sets the shim of DbEntityEntry`1.Reload()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.StateGet">
            <summary>Sets the shim of DbEntityEntry`1.get_State()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.StateSetEntityState">
            <summary>Sets the shim of DbEntityEntry`1.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbEntityEntry`1.AllInstances.ToString01">
            <summary>Sets the shim of DbEntityEntry`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.#ctor(System.Data.Entity.Infrastructure.DbExecutionStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.Bind(System.Data.Entity.Infrastructure.IDbExecutionStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of DbExecutionStrategy.Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.UnwrapAndHandleExceptionOf1ExceptionFuncOfExceptionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Exception,System.Func{System.Exception,``0},``0})">
            <summary>Sets the shim of DbExecutionStrategy.UnwrapAndHandleException(Exception exception, Func`2&lt;Exception,!!0&gt; exceptionHandler)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.Constructor">
            <summary>Sets the shim of DbExecutionStrategy.DbExecutionStrategy()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.ConstructorInt32TimeSpan">
            <summary>Sets the shim of DbExecutionStrategy.DbExecutionStrategy(Int32 maxRetryCount, TimeSpan maxDelay)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.EnsurePreexecutionState">
            <summary>Sets the shim of DbExecutionStrategy.EnsurePreexecutionState()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.ExecuteAction">
            <summary>Sets the shim of DbExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.GetNextDelayException">
            <summary>Sets the shim of DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.RetriesOnFailureGet">
            <summary>Sets the shim of DbExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.StaticConstructor">
            <summary>Sets the shim of DbExecutionStrategy.DbExecutionStrategy()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbExecutionStrategy,System.Func{``0},``0})">
            <summary>Sets the shim of DbExecutionStrategy.Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances.EnsurePreexecutionState">
            <summary>Sets the shim of DbExecutionStrategy.EnsurePreexecutionState()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances.ExecuteAction">
            <summary>Sets the shim of DbExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances.GetNextDelayException">
            <summary>Sets the shim of DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbExecutionStrategy.AllInstances.RetriesOnFailureGet">
            <summary>Sets the shim of DbExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbMemberEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.#ctor(System.Data.Entity.Infrastructure.DbMemberEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbMemberEntry{``0,``1}})">
            <summary>Sets the shim of DbMemberEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.Constructor">
            <summary>Sets the shim of DbMemberEntry.DbMemberEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.EqualsObject">
            <summary>Sets the shim of DbMemberEntry.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.GetHashCode">
            <summary>Sets the shim of DbMemberEntry.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.GetType">
            <summary>Sets the shim of DbMemberEntry.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.GetValidationErrors">
            <summary>Sets the shim of DbMemberEntry.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.ToString">
            <summary>Sets the shim of DbMemberEntry.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbMemberEntry,System.Data.Entity.Infrastructure.DbMemberEntry{``0,``1}})">
            <summary>Sets the shim of DbMemberEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.EqualsObject">
            <summary>Sets the shim of DbMemberEntry.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbMemberEntry.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.GetType01">
            <summary>Sets the shim of DbMemberEntry.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.GetValidationErrors">
            <summary>Sets the shim of DbMemberEntry.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry.AllInstances.ToString01">
            <summary>Sets the shim of DbMemberEntry.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbMemberEntry`2</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.#ctor(System.Data.Entity.Infrastructure.DbMemberEntry{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.Constructor">
            <summary>Sets the shim of DbMemberEntry`2.DbMemberEntry`2()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.EqualsObject">
            <summary>Sets the shim of DbMemberEntry`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.GetHashCode">
            <summary>Sets the shim of DbMemberEntry`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.GetType">
            <summary>Sets the shim of DbMemberEntry`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.GetValidationErrors">
            <summary>Sets the shim of DbMemberEntry`2.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.ImplicitOpDbMemberEntryOfT0T1DbMemberEntry">
            <summary>Sets the shim of DbMemberEntry`2.op_Implicit(DbMemberEntry`2&lt;!0,!1&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.ToString">
            <summary>Sets the shim of DbMemberEntry`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances.EqualsObject">
            <summary>Sets the shim of DbMemberEntry`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbMemberEntry`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances.GetType01">
            <summary>Sets the shim of DbMemberEntry`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances.GetValidationErrors">
            <summary>Sets the shim of DbMemberEntry`2.GetValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbMemberEntry`2.AllInstances.ToString01">
            <summary>Sets the shim of DbMemberEntry`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbModel">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbModel</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.#ctor(System.Data.Entity.Infrastructure.DbModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.Bind(System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.CachedModelBuilderGet">
            <summary>Sets the shim of DbModel.get_CachedModelBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.Compile">
            <summary>Sets the shim of DbModel.Compile()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.ConceptualModelSystemDataEntityCoreMetadataEdmIEdmModelAdapterget">
            <summary>Sets the shim of DbModel.System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.get_ConceptualModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.ConstructorDbProviderInfoDbProviderManifest">
            <summary>Sets the shim of DbModel.DbModel(DbProviderInfo providerInfo, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.ConstructorEdmModelEdmModel">
            <summary>Sets the shim of DbModel.DbModel(EdmModel conceptualModel, EdmModel storeModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.ProviderInfoGet">
            <summary>Sets the shim of DbModel.get_ProviderInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.ProviderManifestGet">
            <summary>Sets the shim of DbModel.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.StoreModelSystemDataEntityCoreMetadataEdmIEdmModelAdapterget">
            <summary>Sets the shim of DbModel.System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.get_StoreModel()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.CachedModelBuilderGet">
            <summary>Sets the shim of DbModel.get_CachedModelBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.Compile">
            <summary>Sets the shim of DbModel.Compile()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.ConceptualModelSystemDataEntityCoreMetadataEdmIEdmModelAdapterget">
            <summary>Sets the shim of DbModel.System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.get_ConceptualModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.ProviderInfoGet">
            <summary>Sets the shim of DbModel.get_ProviderInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of DbModel.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbModel.AllInstances.StoreModelSystemDataEntityCoreMetadataEdmIEdmModelAdapterget">
            <summary>Sets the shim of DbModel.System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.get_StoreModel()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbPropertyEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.#ctor(System.Data.Entity.Infrastructure.DbPropertyEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbPropertyEntry{``0,``1}})">
            <summary>Sets the shim of DbPropertyEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.CurrentValueGet">
            <summary>Sets the shim of DbPropertyEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.CurrentValueSetObject">
            <summary>Sets the shim of DbPropertyEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.EntityEntryGet">
            <summary>Sets the shim of DbPropertyEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.IsModifiedGet">
            <summary>Sets the shim of DbPropertyEntry.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.IsModifiedSetBoolean">
            <summary>Sets the shim of DbPropertyEntry.set_IsModified(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.NameGet">
            <summary>Sets the shim of DbPropertyEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.OriginalValueGet">
            <summary>Sets the shim of DbPropertyEntry.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.OriginalValueSetObject">
            <summary>Sets the shim of DbPropertyEntry.set_OriginalValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.ParentPropertyGet">
            <summary>Sets the shim of DbPropertyEntry.get_ParentProperty()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbPropertyEntry,System.Data.Entity.Infrastructure.DbPropertyEntry{``0,``1}})">
            <summary>Sets the shim of DbPropertyEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbPropertyEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.CurrentValueSetObject">
            <summary>Sets the shim of DbPropertyEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbPropertyEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.IsModifiedGet">
            <summary>Sets the shim of DbPropertyEntry.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.IsModifiedSetBoolean">
            <summary>Sets the shim of DbPropertyEntry.set_IsModified(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.NameGet">
            <summary>Sets the shim of DbPropertyEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.OriginalValueGet">
            <summary>Sets the shim of DbPropertyEntry.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.OriginalValueSetObject">
            <summary>Sets the shim of DbPropertyEntry.set_OriginalValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry.AllInstances.ParentPropertyGet">
            <summary>Sets the shim of DbPropertyEntry.get_ParentProperty()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbPropertyEntry`2</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.#ctor(System.Data.Entity.Infrastructure.DbPropertyEntry{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.CurrentValueGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.CurrentValueSetT1">
            <summary>Sets the shim of DbPropertyEntry`2.set_CurrentValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.EntityEntryGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.ImplicitOpDbPropertyEntryOfT0T1DbPropertyEntry">
            <summary>Sets the shim of DbPropertyEntry`2.op_Implicit(DbPropertyEntry`2&lt;!0,!1&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.IsModifiedGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.IsModifiedSetBoolean">
            <summary>Sets the shim of DbPropertyEntry`2.set_IsModified(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.NameGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.OriginalValueGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.OriginalValueSetT1">
            <summary>Sets the shim of DbPropertyEntry`2.set_OriginalValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.ParentPropertyGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_ParentProperty()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.CurrentValueSetT1">
            <summary>Sets the shim of DbPropertyEntry`2.set_CurrentValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.IsModifiedGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.IsModifiedSetBoolean">
            <summary>Sets the shim of DbPropertyEntry`2.set_IsModified(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.NameGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.OriginalValueGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.OriginalValueSetT1">
            <summary>Sets the shim of DbPropertyEntry`2.set_OriginalValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyEntry`2.AllInstances.ParentPropertyGet">
            <summary>Sets the shim of DbPropertyEntry`2.get_ParentProperty()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbPropertyValues</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.#ctor(System.Data.Entity.Infrastructure.DbPropertyValues)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of DbPropertyValues.GetValue(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.Clone">
            <summary>Sets the shim of DbPropertyValues.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.EqualsObject">
            <summary>Sets the shim of DbPropertyValues.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.GetHashCode">
            <summary>Sets the shim of DbPropertyValues.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.GetType">
            <summary>Sets the shim of DbPropertyValues.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.ItemGetString">
            <summary>Sets the shim of DbPropertyValues.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.ItemSetStringObject">
            <summary>Sets the shim of DbPropertyValues.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.PropertyNamesGet">
            <summary>Sets the shim of DbPropertyValues.get_PropertyNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.SetValuesDbPropertyValues">
            <summary>Sets the shim of DbPropertyValues.SetValues(DbPropertyValues propertyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.SetValuesObject">
            <summary>Sets the shim of DbPropertyValues.SetValues(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.ToObject">
            <summary>Sets the shim of DbPropertyValues.ToObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.ToString">
            <summary>Sets the shim of DbPropertyValues.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbPropertyValues,System.String,``0})">
            <summary>Sets the shim of DbPropertyValues.GetValue(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.Clone">
            <summary>Sets the shim of DbPropertyValues.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.EqualsObject">
            <summary>Sets the shim of DbPropertyValues.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbPropertyValues.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.GetType01">
            <summary>Sets the shim of DbPropertyValues.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.ItemGetString">
            <summary>Sets the shim of DbPropertyValues.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of DbPropertyValues.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.PropertyNamesGet">
            <summary>Sets the shim of DbPropertyValues.get_PropertyNames()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.SetValuesDbPropertyValues">
            <summary>Sets the shim of DbPropertyValues.SetValues(DbPropertyValues propertyValues)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.SetValuesObject">
            <summary>Sets the shim of DbPropertyValues.SetValues(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.ToObject">
            <summary>Sets the shim of DbPropertyValues.ToObject()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbPropertyValues.AllInstances.ToString01">
            <summary>Sets the shim of DbPropertyValues.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbProviderInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.#ctor(System.Data.Entity.Infrastructure.DbProviderInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.ConstructorStringString">
            <summary>Sets the shim of DbProviderInfo.DbProviderInfo(String providerInvariantName, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.EqualsDbProviderInfo">
            <summary>Sets the shim of DbProviderInfo.Equals(DbProviderInfo other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.EqualsObject">
            <summary>Sets the shim of DbProviderInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.GetHashCode">
            <summary>Sets the shim of DbProviderInfo.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.ProviderInvariantNameGet">
            <summary>Sets the shim of DbProviderInfo.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.ProviderManifestTokenGet">
            <summary>Sets the shim of DbProviderInfo.get_ProviderManifestToken()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances.EqualsDbProviderInfo">
            <summary>Sets the shim of DbProviderInfo.Equals(DbProviderInfo other)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances.EqualsObject">
            <summary>Sets the shim of DbProviderInfo.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbProviderInfo.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances.ProviderInvariantNameGet">
            <summary>Sets the shim of DbProviderInfo.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbProviderInfo.AllInstances.ProviderManifestTokenGet">
            <summary>Sets the shim of DbProviderInfo.get_ProviderManifestToken()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.#ctor(System.Data.Entity.Infrastructure.DbQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbQuery{``0}})">
            <summary>Sets the shim of DbQuery.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AsNoTracking">
            <summary>Sets the shim of DbQuery.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AsStreaming">
            <summary>Sets the shim of DbQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.Constructor">
            <summary>Sets the shim of DbQuery.DbQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.ElementTypeGet">
            <summary>Sets the shim of DbQuery.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.EqualsObject">
            <summary>Sets the shim of DbQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.GetHashCode">
            <summary>Sets the shim of DbQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.GetType">
            <summary>Sets the shim of DbQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.IncludeString">
            <summary>Sets the shim of DbQuery.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.ToString">
            <summary>Sets the shim of DbQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbQuery,System.Data.Entity.Infrastructure.DbQuery{``0}})">
            <summary>Sets the shim of DbQuery.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.AsNoTracking">
            <summary>Sets the shim of DbQuery.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.AsStreaming">
            <summary>Sets the shim of DbQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.ElementTypeGet">
            <summary>Sets the shim of DbQuery.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.EqualsObject">
            <summary>Sets the shim of DbQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.GetType01">
            <summary>Sets the shim of DbQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.IncludeString">
            <summary>Sets the shim of DbQuery.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery.AllInstances.ToString01">
            <summary>Sets the shim of DbQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbQuery`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.#ctor(System.Data.Entity.Infrastructure.DbQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AsNoTracking">
            <summary>Sets the shim of DbQuery`1.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AsStreaming">
            <summary>Sets the shim of DbQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbQuery`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.EqualsObject">
            <summary>Sets the shim of DbQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.GetHashCode">
            <summary>Sets the shim of DbQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.GetType">
            <summary>Sets the shim of DbQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ImplicitOpDbQueryOfT0DbQuery">
            <summary>Sets the shim of DbQuery`1.op_Implicit(DbQuery`1&lt;!0&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.IncludeString">
            <summary>Sets the shim of DbQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.SystemCollectionsGenericIEnumerableTResultGetEnumerator">
            <summary>Sets the shim of DbQuery`1.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbQuery`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.ToString">
            <summary>Sets the shim of DbQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.AsNoTracking">
            <summary>Sets the shim of DbQuery`1.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.AsStreaming">
            <summary>Sets the shim of DbQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbQuery`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.GetType01">
            <summary>Sets the shim of DbQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.IncludeString">
            <summary>Sets the shim of DbQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of DbQuery`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.SystemCollectionsGenericIEnumerableTResultGetEnumerator">
            <summary>Sets the shim of DbQuery`1.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbQuery`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbQuery`1.AllInstances.ToString01">
            <summary>Sets the shim of DbQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbRawSqlQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.#ctor(System.Data.Entity.Infrastructure.DbRawSqlQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AsStreaming">
            <summary>Sets the shim of DbRawSqlQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbRawSqlQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.EqualsObject">
            <summary>Sets the shim of DbRawSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.GetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.GetHashCode">
            <summary>Sets the shim of DbRawSqlQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.GetType">
            <summary>Sets the shim of DbRawSqlQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbRawSqlQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.ToString">
            <summary>Sets the shim of DbRawSqlQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.AsStreaming">
            <summary>Sets the shim of DbRawSqlQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbRawSqlQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.EqualsObject">
            <summary>Sets the shim of DbRawSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.GetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbRawSqlQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.GetType01">
            <summary>Sets the shim of DbRawSqlQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbRawSqlQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery.AllInstances.ToString01">
            <summary>Sets the shim of DbRawSqlQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbRawSqlQuery`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.#ctor(System.Data.Entity.Infrastructure.DbRawSqlQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AsStreaming">
            <summary>Sets the shim of DbRawSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbRawSqlQuery`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.EqualsObject">
            <summary>Sets the shim of DbRawSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.GetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.GetHashCode">
            <summary>Sets the shim of DbRawSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.GetType">
            <summary>Sets the shim of DbRawSqlQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbRawSqlQuery`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.ToString">
            <summary>Sets the shim of DbRawSqlQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.AsStreaming">
            <summary>Sets the shim of DbRawSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of DbRawSqlQuery`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbRawSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbRawSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.GetType01">
            <summary>Sets the shim of DbRawSqlQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DbRawSqlQuery`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of DbRawSqlQuery`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbRawSqlQuery`1.AllInstances.ToString01">
            <summary>Sets the shim of DbRawSqlQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbReferenceEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.#ctor(System.Data.Entity.Infrastructure.DbReferenceEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbReferenceEntry{``0,``1}})">
            <summary>Sets the shim of DbReferenceEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.CurrentValueGet">
            <summary>Sets the shim of DbReferenceEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.CurrentValueSetObject">
            <summary>Sets the shim of DbReferenceEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.EntityEntryGet">
            <summary>Sets the shim of DbReferenceEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.IsLoadedGet">
            <summary>Sets the shim of DbReferenceEntry.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.IsLoadedSetBoolean">
            <summary>Sets the shim of DbReferenceEntry.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.Load">
            <summary>Sets the shim of DbReferenceEntry.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.NameGet">
            <summary>Sets the shim of DbReferenceEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.Query">
            <summary>Sets the shim of DbReferenceEntry.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.CastOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DbReferenceEntry,System.Data.Entity.Infrastructure.DbReferenceEntry{``0,``1}})">
            <summary>Sets the shim of DbReferenceEntry.Cast()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbReferenceEntry.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.CurrentValueSetObject">
            <summary>Sets the shim of DbReferenceEntry.set_CurrentValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbReferenceEntry.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.IsLoadedGet">
            <summary>Sets the shim of DbReferenceEntry.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of DbReferenceEntry.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.Load">
            <summary>Sets the shim of DbReferenceEntry.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.NameGet">
            <summary>Sets the shim of DbReferenceEntry.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry.AllInstances.Query">
            <summary>Sets the shim of DbReferenceEntry.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbReferenceEntry`2</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.#ctor(System.Data.Entity.Infrastructure.DbReferenceEntry{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.CurrentValueGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.CurrentValueSetT1">
            <summary>Sets the shim of DbReferenceEntry`2.set_CurrentValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.EntityEntryGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.ImplicitOpDbReferenceEntryOfT0T1DbReferenceEntry">
            <summary>Sets the shim of DbReferenceEntry`2.op_Implicit(DbReferenceEntry`2&lt;!0,!1&gt; entry)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.IsLoadedGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.IsLoadedSetBoolean">
            <summary>Sets the shim of DbReferenceEntry`2.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.Load">
            <summary>Sets the shim of DbReferenceEntry`2.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.NameGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.Query">
            <summary>Sets the shim of DbReferenceEntry`2.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.CurrentValueGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.CurrentValueSetT1">
            <summary>Sets the shim of DbReferenceEntry`2.set_CurrentValue(!1 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.EntityEntryGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_EntityEntry()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.IsLoadedGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of DbReferenceEntry`2.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.Load">
            <summary>Sets the shim of DbReferenceEntry`2.Load()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.NameGet">
            <summary>Sets the shim of DbReferenceEntry`2.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbReferenceEntry`2.AllInstances.Query">
            <summary>Sets the shim of DbReferenceEntry`2.Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbSqlQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.#ctor(System.Data.Entity.Infrastructure.DbSqlQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AsNoTracking">
            <summary>Sets the shim of DbSqlQuery.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AsStreaming">
            <summary>Sets the shim of DbSqlQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.Constructor">
            <summary>Sets the shim of DbSqlQuery.DbSqlQuery()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.EqualsObject">
            <summary>Sets the shim of DbSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.GetHashCode">
            <summary>Sets the shim of DbSqlQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.GetType">
            <summary>Sets the shim of DbSqlQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.ToString">
            <summary>Sets the shim of DbSqlQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.AsNoTracking">
            <summary>Sets the shim of DbSqlQuery.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.AsStreaming">
            <summary>Sets the shim of DbSqlQuery.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.EqualsObject">
            <summary>Sets the shim of DbSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbSqlQuery.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.GetType01">
            <summary>Sets the shim of DbSqlQuery.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery.AllInstances.ToString01">
            <summary>Sets the shim of DbSqlQuery.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbSqlQuery`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.#ctor(System.Data.Entity.Infrastructure.DbSqlQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AsNoTracking">
            <summary>Sets the shim of DbSqlQuery`1.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AsStreaming">
            <summary>Sets the shim of DbSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.Constructor">
            <summary>Sets the shim of DbSqlQuery`1.DbSqlQuery`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.EqualsObject">
            <summary>Sets the shim of DbSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.GetHashCode">
            <summary>Sets the shim of DbSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.GetType">
            <summary>Sets the shim of DbSqlQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.ToString">
            <summary>Sets the shim of DbSqlQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.AsNoTracking">
            <summary>Sets the shim of DbSqlQuery`1.AsNoTracking()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.AsStreaming">
            <summary>Sets the shim of DbSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.GetType01">
            <summary>Sets the shim of DbSqlQuery`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbSqlQuery`1.AllInstances.ToString01">
            <summary>Sets the shim of DbSqlQuery`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbUpdateConcurrencyException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.#ctor(System.Data.Entity.Infrastructure.DbUpdateConcurrencyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.Constructor">
            <summary>Sets the shim of DbUpdateConcurrencyException.DbUpdateConcurrencyException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.ConstructorString">
            <summary>Sets the shim of DbUpdateConcurrencyException.DbUpdateConcurrencyException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.ConstructorStringException">
            <summary>Sets the shim of DbUpdateConcurrencyException.DbUpdateConcurrencyException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateConcurrencyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException">
            <summary>Shim type of System.Data.Entity.Infrastructure.DbUpdateException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.#ctor(System.Data.Entity.Infrastructure.DbUpdateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.Constructor">
            <summary>Sets the shim of DbUpdateException.DbUpdateException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.ConstructorString">
            <summary>Sets the shim of DbUpdateException.DbUpdateException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.ConstructorStringException">
            <summary>Sets the shim of DbUpdateException.DbUpdateException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.EntriesGet">
            <summary>Sets the shim of DbUpdateException.get_Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.SubscribeToSerializeObjectState">
            <summary>Sets the shim of DbUpdateException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException._SubscribeToSerializeObjectStateb__1ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of DbUpdateException.&lt;SubscribeToSerializeObjectState&gt;b__1(Object exception, SafeSerializationEventArgs eventArgs)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException._get_Entriesb__0ObjectStateEntry">
            <summary>Sets the shim of DbUpdateException.&lt;get_Entries&gt;b__0(ObjectStateEntry e)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.AllInstances.EntriesGet">
            <summary>Sets the shim of DbUpdateException.get_Entries()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.AllInstances.SubscribeToSerializeObjectState">
            <summary>Sets the shim of DbUpdateException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.AllInstances._SubscribeToSerializeObjectStateb__1ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of DbUpdateException.&lt;SubscribeToSerializeObjectState&gt;b__1(Object exception, SafeSerializationEventArgs eventArgs)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDbUpdateException.AllInstances._get_Entriesb__0ObjectStateEntry">
            <summary>Sets the shim of DbUpdateException.&lt;get_Entries&gt;b__0(ObjectStateEntry e)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy">
            <summary>Shim type of System.Data.Entity.Infrastructure.DefaultExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.#ctor(System.Data.Entity.Infrastructure.DefaultExecutionStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.Bind(System.Data.Entity.Infrastructure.IDbExecutionStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of DefaultExecutionStrategy.Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.Constructor">
            <summary>Sets the shim of DefaultExecutionStrategy.DefaultExecutionStrategy()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.ExecuteAction">
            <summary>Sets the shim of DefaultExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.RetriesOnFailureGet">
            <summary>Sets the shim of DefaultExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.AllInstances.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Infrastructure.DefaultExecutionStrategy,System.Func{``0},``0})">
            <summary>Sets the shim of DefaultExecutionStrategy.Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.AllInstances.ExecuteAction">
            <summary>Sets the shim of DefaultExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultExecutionStrategy.AllInstances.RetriesOnFailureGet">
            <summary>Sets the shim of DefaultExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver">
            <summary>Shim type of System.Data.Entity.Infrastructure.DefaultManifestTokenResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.#ctor(System.Data.Entity.Infrastructure.DefaultManifestTokenResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.Bind(System.Data.Entity.Infrastructure.IManifestTokenResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.Constructor">
            <summary>Sets the shim of DefaultManifestTokenResolver.DefaultManifestTokenResolver()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.ResolveManifestTokenDbConnection">
            <summary>Sets the shim of DefaultManifestTokenResolver.ResolveManifestToken(DbConnection connection)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimDefaultManifestTokenResolver.AllInstances.ResolveManifestTokenDbConnection">
            <summary>Sets the shim of DefaultManifestTokenResolver.ResolveManifestToken(DbConnection connection)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter">
            <summary>Shim type of System.Data.Entity.Infrastructure.EdmxWriter</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.WriteEdmxDbContextXmlWriter">
            <summary>Sets the shim of EdmxWriter.WriteEdmx(DbContext context, XmlWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimEdmxWriter.WriteEdmxDbModelXmlWriter">
            <summary>Sets the shim of EdmxWriter.WriteEdmx(DbModel model, XmlWriter writer)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey">
            <summary>Shim type of System.Data.Entity.Infrastructure.ExecutionStrategyKey</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.#ctor(System.Data.Entity.Infrastructure.ExecutionStrategyKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.ConstructorStringString">
            <summary>Sets the shim of ExecutionStrategyKey.ExecutionStrategyKey(String providerInvariantName, String serverName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.EqualsObject">
            <summary>Sets the shim of ExecutionStrategyKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.GetHashCode">
            <summary>Sets the shim of ExecutionStrategyKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.ProviderInvariantNameGet">
            <summary>Sets the shim of ExecutionStrategyKey.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.ProviderInvariantNameSetString">
            <summary>Sets the shim of ExecutionStrategyKey.set_ProviderInvariantName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.ServerNameGet">
            <summary>Sets the shim of ExecutionStrategyKey.get_ServerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.ServerNameSetString">
            <summary>Sets the shim of ExecutionStrategyKey.set_ServerName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.EqualsObject">
            <summary>Sets the shim of ExecutionStrategyKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.GetHashCode01">
            <summary>Sets the shim of ExecutionStrategyKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.ProviderInvariantNameGet">
            <summary>Sets the shim of ExecutionStrategyKey.get_ProviderInvariantName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.ProviderInvariantNameSetString">
            <summary>Sets the shim of ExecutionStrategyKey.set_ProviderInvariantName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.ServerNameGet">
            <summary>Sets the shim of ExecutionStrategyKey.get_ServerName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimExecutionStrategyKey.AllInstances.ServerNameSetString">
            <summary>Sets the shim of ExecutionStrategyKey.set_ServerName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory">
            <summary>Shim type of System.Data.Entity.Infrastructure.LocalDbConnectionFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.#ctor(System.Data.Entity.Infrastructure.LocalDbConnectionFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.Bind(System.Data.Entity.Infrastructure.IDbConnectionFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.BaseConnectionStringGet">
            <summary>Sets the shim of LocalDbConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.ConstructorString">
            <summary>Sets the shim of LocalDbConnectionFactory.LocalDbConnectionFactory(String localDbVersion)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.ConstructorStringString">
            <summary>Sets the shim of LocalDbConnectionFactory.LocalDbConnectionFactory(String localDbVersion, String baseConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.CreateConnectionString">
            <summary>Sets the shim of LocalDbConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.AllInstances.BaseConnectionStringGet">
            <summary>Sets the shim of LocalDbConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimLocalDbConnectionFactory.AllInstances.CreateConnectionString">
            <summary>Sets the shim of LocalDbConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention">
            <summary>Shim type of System.Data.Entity.Infrastructure.ModelContainerConvention</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.#ctor(System.Data.Entity.Infrastructure.ModelContainerConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityContainer})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.ApplyEntityContainerDbModel">
            <summary>Sets the shim of ModelContainerConvention.Apply(EntityContainer item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.ConstructorString">
            <summary>Sets the shim of ModelContainerConvention.ModelContainerConvention(String containerName)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelContainerConvention.AllInstances.ApplyEntityContainerDbModel">
            <summary>Sets the shim of ModelContainerConvention.Apply(EntityContainer item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention">
            <summary>Shim type of System.Data.Entity.Infrastructure.ModelNamespaceConvention</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.#ctor(System.Data.Entity.Infrastructure.ModelNamespaceConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.ConstructorString">
            <summary>Sets the shim of ModelNamespaceConvention.ModelNamespaceConvention(String modelNamespace)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimModelNamespaceConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer">
            <summary>Shim type of System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.#ctor(System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.Bind(System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.Constructor">
            <summary>Sets the shim of ObjectReferenceEqualityComparer.ObjectReferenceEqualityComparer()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.SystemCollectionsGenericIEqualityComparerSystemObjectEqualsObjectObject">
            <summary>Sets the shim of ObjectReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.SystemCollectionsGenericIEqualityComparerSystemObjectGetHashCodeObject">
            <summary>Sets the shim of ObjectReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.AllInstances.SystemCollectionsGenericIEqualityComparerSystemObjectEqualsObjectObject">
            <summary>Sets the shim of ObjectReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimObjectReferenceEqualityComparer.AllInstances.SystemCollectionsGenericIEqualityComparerSystemObjectGetHashCodeObject">
            <summary>Sets the shim of ObjectReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.#ctor(System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.ConstructorObjectQueryOfT0">
            <summary>Sets the shim of ReplacementDbQueryWrapper`1.ReplacementDbQueryWrapper`1(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.CreateObjectQuery">
            <summary>Sets the shim of ReplacementDbQueryWrapper`1.Create(ObjectQuery query)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.QueryGet">
            <summary>Sets the shim of ReplacementDbQueryWrapper`1.get_Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimReplacementDbQueryWrapper`1.AllInstances.QueryGet">
            <summary>Sets the shim of ReplacementDbQueryWrapper`1.get_Query()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException">
            <summary>Shim type of System.Data.Entity.Infrastructure.RetryLimitExceededException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.#ctor(System.Data.Entity.Infrastructure.RetryLimitExceededException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.Constructor">
            <summary>Sets the shim of RetryLimitExceededException.RetryLimitExceededException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RetryLimitExceededException.RetryLimitExceededException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.ConstructorString">
            <summary>Sets the shim of RetryLimitExceededException.RetryLimitExceededException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.ConstructorStringException">
            <summary>Sets the shim of RetryLimitExceededException.RetryLimitExceededException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimRetryLimitExceededException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory">
            <summary>Shim type of System.Data.Entity.Infrastructure.SqlCeConnectionFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.#ctor(System.Data.Entity.Infrastructure.SqlCeConnectionFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.Bind(System.Data.Entity.Infrastructure.IDbConnectionFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.BaseConnectionStringGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.ConstructorString">
            <summary>Sets the shim of SqlCeConnectionFactory.SqlCeConnectionFactory(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.ConstructorStringStringString">
            <summary>Sets the shim of SqlCeConnectionFactory.SqlCeConnectionFactory(String providerInvariantName, String databaseDirectory, String baseConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.CreateConnectionString">
            <summary>Sets the shim of SqlCeConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.DatabaseDirectoryGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_DatabaseDirectory()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.ProviderInvariantNameGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_ProviderInvariantName()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.AllInstances.BaseConnectionStringGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.AllInstances.CreateConnectionString">
            <summary>Sets the shim of SqlCeConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.AllInstances.DatabaseDirectoryGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_DatabaseDirectory()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlCeConnectionFactory.AllInstances.ProviderInvariantNameGet">
            <summary>Sets the shim of SqlCeConnectionFactory.get_ProviderInvariantName()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory">
            <summary>Shim type of System.Data.Entity.Infrastructure.SqlConnectionFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.#ctor(System.Data.Entity.Infrastructure.SqlConnectionFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.Bind(System.Data.Entity.Infrastructure.IDbConnectionFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.BaseConnectionStringGet">
            <summary>Sets the shim of SqlConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.Constructor">
            <summary>Sets the shim of SqlConnectionFactory.SqlConnectionFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.ConstructorString">
            <summary>Sets the shim of SqlConnectionFactory.SqlConnectionFactory(String baseConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.CreateConnectionString">
            <summary>Sets the shim of SqlConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.ProviderFactoryGet">
            <summary>Sets the shim of SqlConnectionFactory.get_ProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.ProviderFactorySetFuncOfStringDbProviderFactory">
            <summary>Sets the shim of SqlConnectionFactory.set_ProviderFactory(Func`2&lt;String,DbProviderFactory&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.AllInstances.BaseConnectionStringGet">
            <summary>Sets the shim of SqlConnectionFactory.get_BaseConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.AllInstances.CreateConnectionString">
            <summary>Sets the shim of SqlConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.AllInstances.ProviderFactoryGet">
            <summary>Sets the shim of SqlConnectionFactory.get_ProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSqlConnectionFactory.AllInstances.ProviderFactorySetFuncOfStringDbProviderFactory">
            <summary>Sets the shim of SqlConnectionFactory.set_ProviderFactory(Func`2&lt;String,DbProviderFactory&gt; value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute">
            <summary>Shim type of System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.#ctor(System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.Constructor">
            <summary>Sets the shim of SuppressDbSetInitializationAttribute.SuppressDbSetInitializationAttribute()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimSuppressDbSetInitializationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException">
            <summary>Shim type of System.Data.Entity.Infrastructure.UnintentionalCodeFirstException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.#ctor(System.Data.Entity.Infrastructure.UnintentionalCodeFirstException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.Constructor">
            <summary>Sets the shim of UnintentionalCodeFirstException.UnintentionalCodeFirstException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UnintentionalCodeFirstException.UnintentionalCodeFirstException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.ConstructorString">
            <summary>Sets the shim of UnintentionalCodeFirstException.UnintentionalCodeFirstException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.ConstructorStringException">
            <summary>Sets the shim of UnintentionalCodeFirstException.UnintentionalCodeFirstException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.ShimUnintentionalCodeFirstException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException">
            <summary>Stub type of System.Data.Entity.Infrastructure.CommitFailedException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCommitFailedException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCommitFailedException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.InitializeStub">
            <summary>Initializes a new instance of type StubCommitFailedException</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubCommitFailedException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbConnectionInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.Equals(System.Object)">
            <summary>Sets the stub of DbConnectionInfo.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.EqualsObject">
            <summary>Sets the stub of DbConnectionInfo.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.GetHashCode">
            <summary>Sets the stub of DbConnectionInfo.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.GetHashCode01">
            <summary>Sets the stub of DbConnectionInfo.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubDbConnectionInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.ToString">
            <summary>Sets the stub of DbConnectionInfo.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.ToString01">
            <summary>Sets the stub of DbConnectionInfo.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbConnectionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbContextInfo</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbProviderInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Configuration.Configuration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Configuration.ConnectionStringSettingsCollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Configuration.Configuration,System.Data.Entity.Infrastructure.DbConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.#ctor(System.Type,System.Configuration.Configuration,System.Data.Entity.Infrastructure.DbProviderInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.AttachBackingFieldToOnModelCreating">
            <summary>Attaches delegates to emulate StubDbContextInfo.OnModelCreating as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionProviderNameGet">
            <summary>Sets the stub of DbContextInfo.get_ConnectionProviderName()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionStringGet">
            <summary>Sets the stub of DbContextInfo.get_ConnectionString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionStringNameGet">
            <summary>Sets the stub of DbContextInfo.get_ConnectionStringName()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionStringOriginGet">
            <summary>Sets the stub of DbContextInfo.get_ConnectionStringOrigin()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ContextTypeGet">
            <summary>Sets the stub of DbContextInfo.get_ContextType()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.CreateInstance">
            <summary>Sets the stub of DbContextInfo.CreateInstance()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.CreateInstance01">
            <summary>Sets the stub of DbContextInfo.CreateInstance()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.InitializeStub">
            <summary>Initializes a new instance of type StubDbContextInfo</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.IsConstructibleGet">
            <summary>Sets the stub of DbContextInfo.get_IsConstructible()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.OnModelCreatingGet">
            <summary>Sets the stub of DbContextInfo.get_OnModelCreating()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.OnModelCreatingSetActionOfDbModelBuilder">
            <summary>Sets the stub of DbContextInfo.set_OnModelCreating(Action`1&lt;DbModelBuilder&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionProviderName">
            <summary>Sets the stub of DbContextInfo.get_ConnectionProviderName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionString">
            <summary>Sets the stub of DbContextInfo.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionStringName">
            <summary>Sets the stub of DbContextInfo.get_ConnectionStringName()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ConnectionStringOrigin">
            <summary>Sets the stub of DbContextInfo.get_ConnectionStringOrigin()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.ContextType">
            <summary>Sets the stub of DbContextInfo.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.IsConstructible">
            <summary>Sets the stub of DbContextInfo.get_IsConstructible()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbContextInfo.OnModelCreating">
            <summary>Sets the stub of DbContextInfo.get_OnModelCreating()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.GetNextDelay(System.Exception)">
            <summary>Sets the stub of DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.GetNextDelayException">
            <summary>Sets the stub of DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubDbExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.ShouldRetryOn(System.Exception)">
            <summary>Sets the stub of DbExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.ShouldRetryOnException">
            <summary>Sets the stub of DbExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbExecutionStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbSqlQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.AsNoTracking">
            <summary>Sets the stub of DbSqlQuery.AsNoTracking()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.AsNoTracking01">
            <summary>Sets the stub of DbSqlQuery.AsNoTracking()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.AsStreaming">
            <summary>Sets the stub of DbSqlQuery.AsStreaming()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.AsStreaming01">
            <summary>Sets the stub of DbSqlQuery.AsStreaming()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.Equals(System.Object)">
            <summary>Sets the stub of DbSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.EqualsObject">
            <summary>Sets the stub of DbSqlQuery.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.GetEnumerator">
            <summary>Sets the stub of DbRawSqlQuery.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.GetEnumerator01">
            <summary>Sets the stub of DbRawSqlQuery.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.GetHashCode">
            <summary>Sets the stub of DbSqlQuery.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.GetHashCode01">
            <summary>Sets the stub of DbSqlQuery.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.InitializeStub">
            <summary>Initializes a new instance of type StubDbSqlQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.ToString">
            <summary>Sets the stub of DbSqlQuery.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.ToString01">
            <summary>Sets the stub of DbSqlQuery.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbSqlQuery`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.AsNoTracking">
            <summary>Sets the stub of DbSqlQuery`1.AsNoTracking()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.AsNoTracking01">
            <summary>Sets the stub of DbSqlQuery`1.AsNoTracking()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.AsStreaming">
            <summary>Sets the stub of DbSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.AsStreaming01">
            <summary>Sets the stub of DbSqlQuery`1.AsStreaming()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.Equals(System.Object)">
            <summary>Sets the stub of DbSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.EqualsObject">
            <summary>Sets the stub of DbSqlQuery`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.GetEnumerator">
            <summary>Sets the stub of DbRawSqlQuery`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.GetEnumerator01">
            <summary>Sets the stub of DbRawSqlQuery`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.GetHashCode">
            <summary>Sets the stub of DbSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.GetHashCode01">
            <summary>Sets the stub of DbSqlQuery`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbSqlQuery</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.ToString">
            <summary>Sets the stub of DbSqlQuery`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.ToString01">
            <summary>Sets the stub of DbSqlQuery`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbSqlQuery`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbUpdateConcurrencyException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDbUpdateConcurrencyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDbUpdateConcurrencyException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.InitializeStub">
            <summary>Initializes a new instance of type StubDbUpdateConcurrencyException</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateConcurrencyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException">
            <summary>Stub type of System.Data.Entity.Infrastructure.DbUpdateException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDbUpdateException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDbUpdateException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.InitializeStub">
            <summary>Initializes a new instance of type StubDbUpdateException</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDbUpdateException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy">
            <summary>Stub type of System.Data.Entity.Infrastructure.DefaultExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultExecutionStrategy</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultExecutionStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver">
            <summary>Stub type of System.Data.Entity.Infrastructure.DefaultManifestTokenResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultManifestTokenResolver</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubDefaultManifestTokenResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey">
            <summary>Stub type of System.Data.Entity.Infrastructure.ExecutionStrategyKey</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.Equals(System.Object)">
            <summary>Sets the stub of ExecutionStrategyKey.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.EqualsObject">
            <summary>Sets the stub of ExecutionStrategyKey.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.GetHashCode">
            <summary>Sets the stub of ExecutionStrategyKey.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.GetHashCode01">
            <summary>Sets the stub of ExecutionStrategyKey.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.InitializeStub">
            <summary>Initializes a new instance of type StubExecutionStrategyKey</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubExecutionStrategyKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbConnectionFactory">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbConnectionFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbConnectionFactory.#ctor">
            <summary>Initializes a new instance of type StubIDbConnectionFactory</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbConnectionFactory.CreateConnectionString">
            <summary>Sets the stub of IDbConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbConnectionFactory.ef::System#Data#Entity#Infrastructure#IDbConnectionFactory#CreateConnection(System.String)">
            <summary>Sets the stub of IDbConnectionFactory.CreateConnection(String nameOrConnectionString)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbContextFactory`1">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbContextFactory`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbContextFactory`1.#ctor">
            <summary>Initializes a new instance of type StubIDbContextFactory</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbContextFactory`1.Create">
            <summary>Sets the stub of IDbContextFactory`1.Create()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbContextFactory`1.ef::System#Data#Entity#Infrastructure#IDbContextFactory{TContext}#Create">
            <summary>Sets the stub of IDbContextFactory`1.Create()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.#ctor">
            <summary>Initializes a new instance of type StubIDbExecutionStrategy</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.ExecuteAction">
            <summary>Sets the stub of IDbExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets stubs of Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.RetriesOnFailureGet">
            <summary>Sets the stub of IDbExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.ef::System#Data#Entity#Infrastructure#IDbExecutionStrategy#Execute(System.Action)">
            <summary>Sets the stub of IDbExecutionStrategy.Execute(Action operation)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.ef::System#Data#Entity#Infrastructure#IDbExecutionStrategy#Execute``1(System.Func{``0})">
            <summary>Sets the stub of IDbExecutionStrategy.Execute(Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubIDbExecutionStrategy.ef::System#Data#Entity#Infrastructure#IDbExecutionStrategy#RetriesOnFailure">
            <summary>Sets the stub of IDbExecutionStrategy.get_RetriesOnFailure()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbModelCacheKey</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey.#ctor">
            <summary>Initializes a new instance of type StubIDbModelCacheKey</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey.EqualsObject">
            <summary>Sets the stub of IDbModelCacheKey.Equals(Object other)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey.GetHashCode">
            <summary>Sets the stub of IDbModelCacheKey.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey.ef::System#Data#Entity#Infrastructure#IDbModelCacheKey#Equals(System.Object)">
            <summary>Sets the stub of IDbModelCacheKey.Equals(Object other)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKey.ef::System#Data#Entity#Infrastructure#IDbModelCacheKey#GetHashCode">
            <summary>Sets the stub of IDbModelCacheKey.GetHashCode()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKeyProvider">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbModelCacheKeyProvider</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKeyProvider.#ctor">
            <summary>Initializes a new instance of type StubIDbModelCacheKeyProvider</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKeyProvider.CacheKeyGet">
            <summary>Sets the stub of IDbModelCacheKeyProvider.get_CacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubIDbModelCacheKeyProvider.ef::System#Data#Entity#Infrastructure#IDbModelCacheKeyProvider#CacheKey">
            <summary>Sets the stub of IDbModelCacheKeyProvider.get_CacheKey()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIDbProviderFactoryResolver">
            <summary>Stub type of System.Data.Entity.Infrastructure.IDbProviderFactoryResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbProviderFactoryResolver.#ctor">
            <summary>Initializes a new instance of type StubIDbProviderFactoryResolver</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIDbProviderFactoryResolver.ResolveProviderFactoryDbConnection">
            <summary>Sets the stub of IDbProviderFactoryResolver.ResolveProviderFactory(DbConnection connection)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIDbProviderFactoryResolver.ef::System#Data#Entity#Infrastructure#IDbProviderFactoryResolver#ResolveProviderFactory(System.Data.Common.DbConnection)">
            <summary>Sets the stub of IDbProviderFactoryResolver.ResolveProviderFactory(DbConnection connection)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIManifestTokenResolver">
            <summary>Stub type of System.Data.Entity.Infrastructure.IManifestTokenResolver</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIManifestTokenResolver.#ctor">
            <summary>Initializes a new instance of type StubIManifestTokenResolver</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIManifestTokenResolver.ResolveManifestTokenDbConnection">
            <summary>Sets the stub of IManifestTokenResolver.ResolveManifestToken(DbConnection connection)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIManifestTokenResolver.ef::System#Data#Entity#Infrastructure#IManifestTokenResolver#ResolveManifestToken(System.Data.Common.DbConnection)">
            <summary>Sets the stub of IManifestTokenResolver.ResolveManifestToken(DbConnection connection)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIObjectContextAdapter">
            <summary>Stub type of System.Data.Entity.Infrastructure.IObjectContextAdapter</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIObjectContextAdapter.#ctor">
            <summary>Initializes a new instance of type StubIObjectContextAdapter</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIObjectContextAdapter.ObjectContextGet">
            <summary>Sets the stub of IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubIObjectContextAdapter.ef::System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
            <summary>Sets the stub of IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubIProviderInvariantName">
            <summary>Stub type of System.Data.Entity.Infrastructure.IProviderInvariantName</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubIProviderInvariantName.#ctor">
            <summary>Initializes a new instance of type StubIProviderInvariantName</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubIProviderInvariantName.NameGet">
            <summary>Sets the stub of IProviderInvariantName.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubIProviderInvariantName.ef::System#Data#Entity#Infrastructure#IProviderInvariantName#Name">
            <summary>Sets the stub of IProviderInvariantName.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException">
            <summary>Stub type of System.Data.Entity.Infrastructure.UnintentionalCodeFirstException</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUnintentionalCodeFirstException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUnintentionalCodeFirstException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.InitializeStub">
            <summary>Initializes a new instance of type StubUnintentionalCodeFirstException</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Fakes.StubUnintentionalCodeFirstException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.#ctor(System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.Bind(System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.Bind(System.Data.Entity.Infrastructure.Interception.IDbInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ExecutedOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.Executed(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ExecutingOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.Executing(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.LogCommandOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.LogCommand(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.LogParameterOf1DbCommandDbCommandInterceptionContextOfM0DbParameter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0},System.Data.Common.DbParameter})">
            <summary>Sets the shim of DatabaseLogFormatter.LogParameter(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext, DbParameter parameter)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.LogResultOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.LogResult(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ConstructorActionOfString">
            <summary>Sets the shim of DatabaseLogFormatter.DatabaseLogFormatter(Action`1&lt;String&gt; writeAction)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ConstructorDbContextActionOfString">
            <summary>Sets the shim of DatabaseLogFormatter.DatabaseLogFormatter(DbContext context, Action`1&lt;String&gt; writeAction)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ContextGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_Context()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.EqualsObject">
            <summary>Sets the shim of DatabaseLogFormatter.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.GetHashCode">
            <summary>Sets the shim of DatabaseLogFormatter.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.GetType">
            <summary>Sets the shim of DatabaseLogFormatter.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DatabaseLogFormatter.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DatabaseLogFormatter.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DatabaseLogFormatter.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DatabaseLogFormatter.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DatabaseLogFormatter.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DatabaseLogFormatter.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.StopwatchGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_Stopwatch()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.ToString">
            <summary>Sets the shim of DatabaseLogFormatter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.WriteActionGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_WriteAction()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.WriteString">
            <summary>Sets the shim of DatabaseLogFormatter.Write(String output)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ExecutedOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter,System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.Executed(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ExecutingOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter,System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.Executing(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.LogCommandOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter,System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.LogCommand(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.LogParameterOf1DbCommandDbCommandInterceptionContextOfM0DbParameter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter,System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0},System.Data.Common.DbParameter})">
            <summary>Sets the shim of DatabaseLogFormatter.LogParameter(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext, DbParameter parameter)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.LogResultOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter,System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets the shim of DatabaseLogFormatter.LogResult(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ContextGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_Context()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.EqualsObject">
            <summary>Sets the shim of DatabaseLogFormatter.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.GetHashCode01">
            <summary>Sets the shim of DatabaseLogFormatter.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.GetType01">
            <summary>Sets the shim of DatabaseLogFormatter.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DatabaseLogFormatter.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DatabaseLogFormatter.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DatabaseLogFormatter.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DatabaseLogFormatter.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DatabaseLogFormatter.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DatabaseLogFormatter.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.StopwatchGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_Stopwatch()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.ToString01">
            <summary>Sets the shim of DatabaseLogFormatter.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.WriteActionGet">
            <summary>Sets the shim of DatabaseLogFormatter.get_WriteAction()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDatabaseLogFormatter.AllInstances.WriteString">
            <summary>Sets the shim of DatabaseLogFormatter.Write(String output)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.#ctor(System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.Constructor">
            <summary>Sets the shim of DbCommandDispatcher.DbCommandDispatcher()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.EqualsObject">
            <summary>Sets the shim of DbCommandDispatcher.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.GetHashCode">
            <summary>Sets the shim of DbCommandDispatcher.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.GetType">
            <summary>Sets the shim of DbCommandDispatcher.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.NonQueryDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.NonQuery(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.ReaderDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.ScalarDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.Scalar(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.ToString">
            <summary>Sets the shim of DbCommandDispatcher.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.EqualsObject">
            <summary>Sets the shim of DbCommandDispatcher.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbCommandDispatcher.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.GetType01">
            <summary>Sets the shim of DbCommandDispatcher.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.NonQueryDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.NonQuery(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.ReaderDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.ScalarDbCommandDbCommandInterceptionContext">
            <summary>Sets the shim of DbCommandDispatcher.Scalar(DbCommand command, DbCommandInterceptionContext interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandDispatcher.AllInstances.ToString01">
            <summary>Sets the shim of DbCommandDispatcher.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AsAsync">
            <summary>Sets the shim of DbCommandInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.Clone">
            <summary>Sets the shim of DbCommandInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.CommandBehaviorGet">
            <summary>Sets the shim of DbCommandInterceptionContext.get_CommandBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.Constructor">
            <summary>Sets the shim of DbCommandInterceptionContext.DbCommandInterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.ConstructorDbInterceptionContext">
            <summary>Sets the shim of DbCommandInterceptionContext.DbCommandInterceptionContext(DbInterceptionContext copyFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.EqualsObject">
            <summary>Sets the shim of DbCommandInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.GetHashCode">
            <summary>Sets the shim of DbCommandInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.GetType">
            <summary>Sets the shim of DbCommandInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.ToString">
            <summary>Sets the shim of DbCommandInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.TypedClone">
            <summary>Sets the shim of DbCommandInterceptionContext.TypedClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.WithCommandBehaviorCommandBehavior">
            <summary>Sets the shim of DbCommandInterceptionContext.WithCommandBehavior(CommandBehavior commandBehavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.AsAsync">
            <summary>Sets the shim of DbCommandInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.Clone">
            <summary>Sets the shim of DbCommandInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.CommandBehaviorGet">
            <summary>Sets the shim of DbCommandInterceptionContext.get_CommandBehavior()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.EqualsObject">
            <summary>Sets the shim of DbCommandInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbCommandInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.GetType01">
            <summary>Sets the shim of DbCommandInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.ToString01">
            <summary>Sets the shim of DbCommandInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.TypedClone">
            <summary>Sets the shim of DbCommandInterceptionContext.TypedClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.WithCommandBehaviorCommandBehavior">
            <summary>Sets the shim of DbCommandInterceptionContext.WithCommandBehavior(CommandBehavior commandBehavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext.AllInstances.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.#ctor(System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AsAsync">
            <summary>Sets the shim of DbCommandInterceptionContext`1.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.Clone">
            <summary>Sets the shim of DbCommandInterceptionContext`1.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.Constructor">
            <summary>Sets the shim of DbCommandInterceptionContext`1.DbCommandInterceptionContext`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ConstructorDbInterceptionContext">
            <summary>Sets the shim of DbCommandInterceptionContext`1.DbCommandInterceptionContext`1(DbInterceptionContext copyFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.EqualsObject">
            <summary>Sets the shim of DbCommandInterceptionContext`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ExceptionGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_Exception()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ExceptionSetException">
            <summary>Sets the shim of DbCommandInterceptionContext`1.set_Exception(Exception value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.GetHashCode">
            <summary>Sets the shim of DbCommandInterceptionContext`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.GetType">
            <summary>Sets the shim of DbCommandInterceptionContext`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.IsExecutionSuppressedGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_IsExecutionSuppressed()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.OriginalExceptionGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_OriginalException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.OriginalResultGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_OriginalResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ResultGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_Result()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ResultSetT0">
            <summary>Sets the shim of DbCommandInterceptionContext`1.set_Result(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.SuppressExecution">
            <summary>Sets the shim of DbCommandInterceptionContext`1.SuppressExecution()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.TaskStatusGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_TaskStatus()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.ToString">
            <summary>Sets the shim of DbCommandInterceptionContext`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.WithCommandBehaviorCommandBehavior">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithCommandBehavior(CommandBehavior commandBehavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.AsAsync">
            <summary>Sets the shim of DbCommandInterceptionContext`1.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.Clone">
            <summary>Sets the shim of DbCommandInterceptionContext`1.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbCommandInterceptionContext`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.ExceptionGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_Exception()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.ExceptionSetException">
            <summary>Sets the shim of DbCommandInterceptionContext`1.set_Exception(Exception value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbCommandInterceptionContext`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.GetType01">
            <summary>Sets the shim of DbCommandInterceptionContext`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.IsExecutionSuppressedGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_IsExecutionSuppressed()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.OriginalExceptionGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_OriginalException()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.OriginalResultGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_OriginalResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.ResultGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_Result()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.ResultSetT0">
            <summary>Sets the shim of DbCommandInterceptionContext`1.set_Result(!0 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.SuppressExecution">
            <summary>Sets the shim of DbCommandInterceptionContext`1.SuppressExecution()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.TaskStatusGet">
            <summary>Sets the shim of DbCommandInterceptionContext`1.get_TaskStatus()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.ToString01">
            <summary>Sets the shim of DbCommandInterceptionContext`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.WithCommandBehaviorCommandBehavior">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithCommandBehavior(CommandBehavior commandBehavior)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptionContext`1.AllInstances.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandInterceptionContext`1.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.#ctor(System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.Bind(System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.Bind(System.Data.Entity.Infrastructure.Interception.IDbInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.Constructor">
            <summary>Sets the shim of DbCommandInterceptor.DbCommandInterceptor()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the shim of DbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the shim of DbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandInterceptor.AllInstances.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the shim of DbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AsAsync">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.Clone">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.Constructor">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.DbCommandTreeInterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.ConstructorDbInterceptionContext">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.DbCommandTreeInterceptionContext(DbInterceptionContext copyFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.EqualsObject">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.GetHashCode">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.GetType">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.OriginalResultGet">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.get_OriginalResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.ResultGet">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.get_Result()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.ResultSetDbCommandTree">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.set_Result(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.ToString">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.AsAsync">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.Clone">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.EqualsObject">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.GetType01">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.OriginalResultGet">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.get_OriginalResult()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.ResultGet">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.get_Result()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.ResultSetDbCommandTree">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.set_Result(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.ToString01">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.WithDbContextDbContext">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbCommandTreeInterceptionContext.AllInstances.WithObjectContextObjectContext">
            <summary>Sets the shim of DbCommandTreeInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbDispatchers</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.#ctor(System.Data.Entity.Infrastructure.Interception.DbDispatchers)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AddInterceptorIDbInterceptor">
            <summary>Sets the shim of DbDispatchers.AddInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.CommandGet">
            <summary>Sets the shim of DbDispatchers.get_Command()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.Constructor">
            <summary>Sets the shim of DbDispatchers.DbDispatchers()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.EqualsObject">
            <summary>Sets the shim of DbDispatchers.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.GetHashCode">
            <summary>Sets the shim of DbDispatchers.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.GetType">
            <summary>Sets the shim of DbDispatchers.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.RemoveInterceptorIDbInterceptor">
            <summary>Sets the shim of DbDispatchers.RemoveInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.ToString">
            <summary>Sets the shim of DbDispatchers.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.AddInterceptorIDbInterceptor">
            <summary>Sets the shim of DbDispatchers.AddInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.CommandGet">
            <summary>Sets the shim of DbDispatchers.get_Command()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.EqualsObject">
            <summary>Sets the shim of DbDispatchers.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbDispatchers.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.GetType01">
            <summary>Sets the shim of DbDispatchers.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.RemoveInterceptorIDbInterceptor">
            <summary>Sets the shim of DbDispatchers.RemoveInterceptor(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbDispatchers.AllInstances.ToString01">
            <summary>Sets the shim of DbDispatchers.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbInterception</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.AddIDbInterceptor">
            <summary>Sets the shim of DbInterception.Add(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.DispatchGet">
            <summary>Sets the shim of DbInterception.get_Dispatch()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.RemoveIDbInterceptor">
            <summary>Sets the shim of DbInterception.Remove(IDbInterceptor interceptor)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception.StaticConstructor">
            <summary>Sets the shim of DbInterception.DbInterception()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterception._cctorb__0">
            <summary>Sets the shim of DbInterception.&lt;.cctor&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext">
            <summary>Shim type of System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AsAsync">
            <summary>Sets the shim of DbInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.Clone">
            <summary>Sets the shim of DbInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.CombineIEnumerableOfDbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.Combine(IEnumerable`1&lt;DbInterceptionContext&gt; interceptionContexts)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.Constructor">
            <summary>Sets the shim of DbInterceptionContext.DbInterceptionContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.ConstructorDbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.DbInterceptionContext(DbInterceptionContext copyFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.ConstructorIEnumerableOfDbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.DbInterceptionContext(IEnumerable`1&lt;DbInterceptionContext&gt; copyFrom)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.DbContextsGet">
            <summary>Sets the shim of DbInterceptionContext.get_DbContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.EqualsObject">
            <summary>Sets the shim of DbInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.GetHashCode">
            <summary>Sets the shim of DbInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.GetType">
            <summary>Sets the shim of DbInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.IsAsyncGet">
            <summary>Sets the shim of DbInterceptionContext.get_IsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.ObjectContextsGet">
            <summary>Sets the shim of DbInterceptionContext.get_ObjectContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.ToString">
            <summary>Sets the shim of DbInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.WithDbContextDbContext">
            <summary>Sets the shim of DbInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.WithObjectContextObjectContext">
            <summary>Sets the shim of DbInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__0DbContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__0(DbContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__1ObjectContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__1(ObjectContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__4DbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__4(DbInterceptionContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__5DbContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__5(DbContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__6DbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__6(DbInterceptionContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__7ObjectContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__7(ObjectContext c)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext._ctorb__8DbInterceptionContext">
            <summary>Sets the shim of DbInterceptionContext.&lt;.ctor&gt;b__8(DbInterceptionContext c)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.AsAsync">
            <summary>Sets the shim of DbInterceptionContext.AsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.Clone">
            <summary>Sets the shim of DbInterceptionContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.DbContextsGet">
            <summary>Sets the shim of DbInterceptionContext.get_DbContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.EqualsObject">
            <summary>Sets the shim of DbInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.GetType01">
            <summary>Sets the shim of DbInterceptionContext.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.IsAsyncGet">
            <summary>Sets the shim of DbInterceptionContext.get_IsAsync()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.ObjectContextsGet">
            <summary>Sets the shim of DbInterceptionContext.get_ObjectContexts()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.ToString01">
            <summary>Sets the shim of DbInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.WithDbContextDbContext">
            <summary>Sets the shim of DbInterceptionContext.WithDbContext(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.ShimDbInterceptionContext.AllInstances.WithObjectContextObjectContext">
            <summary>Sets the shim of DbInterceptionContext.WithObjectContext(ObjectContext context)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.#ctor(System.Action{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.#ctor(System.Data.Entity.DbContext,System.Action{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.Equals(System.Object)">
            <summary>Sets the stub of DatabaseLogFormatter.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.EqualsObject">
            <summary>Sets the stub of DatabaseLogFormatter.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.Executed``1(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0})">
            <summary>Sets the stub of DatabaseLogFormatter.Executed(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ExecutedOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets stubs of Executed(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.Executing``1(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0})">
            <summary>Sets the stub of DatabaseLogFormatter.Executing(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ExecutingOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets stubs of Executing(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.GetHashCode">
            <summary>Sets the stub of DatabaseLogFormatter.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.GetHashCode01">
            <summary>Sets the stub of DatabaseLogFormatter.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseLogFormatter</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogCommand``1(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0})">
            <summary>Sets the stub of DatabaseLogFormatter.LogCommand(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogCommandOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets stubs of LogCommand(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogParameter``1(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0},System.Data.Common.DbParameter)">
            <summary>Sets the stub of DatabaseLogFormatter.LogParameter(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext, DbParameter parameter)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogParameterOf1DbCommandDbCommandInterceptionContextOfM0DbParameter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0},System.Data.Common.DbParameter})">
            <summary>Sets stubs of LogParameter(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext, DbParameter parameter)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogResult``1(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0})">
            <summary>Sets the stub of DatabaseLogFormatter.LogResult(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.LogResultOf1DbCommandDbCommandInterceptionContextOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{``0}})">
            <summary>Sets stubs of LogResult(DbCommand command, DbCommandInterceptionContext`1&lt;!!0&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of DatabaseLogFormatter.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of DatabaseLogFormatter.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of DatabaseLogFormatter.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of DatabaseLogFormatter.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of DatabaseLogFormatter.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of DatabaseLogFormatter.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of DatabaseLogFormatter.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of DatabaseLogFormatter.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of DatabaseLogFormatter.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of DatabaseLogFormatter.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of DatabaseLogFormatter.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of DatabaseLogFormatter.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ToString">
            <summary>Sets the stub of DatabaseLogFormatter.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.ToString01">
            <summary>Sets the stub of DatabaseLogFormatter.ToString()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.Write(System.String)">
            <summary>Sets the stub of DatabaseLogFormatter.Write(String output)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.WriteString">
            <summary>Sets the stub of DatabaseLogFormatter.Write(String output)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDatabaseLogFormatter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.Clone">
            <summary>Sets the stub of DbCommandInterceptionContext.Clone()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.Clone01">
            <summary>Sets the stub of DbCommandInterceptionContext.Clone()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.Equals(System.Object)">
            <summary>Sets the stub of DbCommandInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.EqualsObject">
            <summary>Sets the stub of DbCommandInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.GetHashCode">
            <summary>Sets the stub of DbCommandInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.GetHashCode01">
            <summary>Sets the stub of DbCommandInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.ToString">
            <summary>Sets the stub of DbCommandInterceptionContext.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.ToString01">
            <summary>Sets the stub of DbCommandInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.Clone">
            <summary>Sets the stub of DbCommandInterceptionContext`1.Clone()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.Clone01">
            <summary>Sets the stub of DbCommandInterceptionContext`1.Clone()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.Equals(System.Object)">
            <summary>Sets the stub of DbCommandInterceptionContext`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.EqualsObject">
            <summary>Sets the stub of DbCommandInterceptionContext`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.GetHashCode">
            <summary>Sets the stub of DbCommandInterceptionContext`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.GetHashCode01">
            <summary>Sets the stub of DbCommandInterceptionContext`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.ToString">
            <summary>Sets the stub of DbCommandInterceptionContext`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.ToString01">
            <summary>Sets the stub of DbCommandInterceptionContext`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptionContext`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of DbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of DbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of DbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of DbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of DbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of DbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of DbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of DbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of DbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of DbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of DbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of DbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.Clone">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.Clone()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.Clone01">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.Clone()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.Equals(System.Object)">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.EqualsObject">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.GetHashCode">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.GetHashCode01">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandTreeInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.ToString">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.ToString01">
            <summary>Sets the stub of DbCommandTreeInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbCommandTreeInterceptionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.Clone">
            <summary>Sets the stub of DbInterceptionContext.Clone()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.Clone01">
            <summary>Sets the stub of DbInterceptionContext.Clone()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.Equals(System.Object)">
            <summary>Sets the stub of DbInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.EqualsObject">
            <summary>Sets the stub of DbInterceptionContext.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.GetHashCode">
            <summary>Sets the stub of DbInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.GetHashCode01">
            <summary>Sets the stub of DbInterceptionContext.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbInterceptionContext</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.ToString">
            <summary>Sets the stub of DbInterceptionContext.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.ToString01">
            <summary>Sets the stub of DbInterceptionContext.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Interception.Fakes.StubDbInterceptionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIDbCommandInterceptor</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.NonQueryExecutedDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of IDbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.NonQueryExecutingDbCommandDbCommandInterceptionContextOfInt32">
            <summary>Sets the stub of IDbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ReaderExecutedDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of IDbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ReaderExecutingDbCommandDbCommandInterceptionContextOfDbDataReader">
            <summary>Sets the stub of IDbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ScalarExecutedDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of IDbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ScalarExecutingDbCommandDbCommandInterceptionContextOfObject">
            <summary>Sets the stub of IDbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of IDbCommandInterceptor.NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <summary>Sets the stub of IDbCommandInterceptor.NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Int32&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of IDbCommandInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <summary>Sets the stub of IDbCommandInterceptor.ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;DbDataReader&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of IDbCommandInterceptor.ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandInterceptor#ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <summary>Sets the stub of IDbCommandInterceptor.ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1&lt;Object&gt; interceptionContext)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandTreeInterceptor">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.IDbCommandTreeInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandTreeInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIDbCommandTreeInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandTreeInterceptor.ef::System#Data#Entity#Infrastructure#Interception#IDbCommandTreeInterceptor#TreeCreated(System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext)">
            <summary>Sets the stub of IDbCommandTreeInterceptor.TreeCreated(DbCommandTreeInterceptionContext interceptionContext)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbCommandTreeInterceptor.TreeCreatedDbCommandTreeInterceptionContext">
            <summary>Sets the stub of IDbCommandTreeInterceptor.TreeCreated(DbCommandTreeInterceptionContext interceptionContext)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbInterceptor">
            <summary>Stub type of System.Data.Entity.Infrastructure.Interception.IDbInterceptor</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Interception.Fakes.StubIDbInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIDbInterceptor</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView">
            <summary>Shim type of System.Data.Entity.Infrastructure.MappingViews.DbMappingView</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.#ctor(System.Data.Entity.Infrastructure.MappingViews.DbMappingView)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.ConstructorString">
            <summary>Sets the shim of DbMappingView.DbMappingView(String entitySql)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.EntitySqlGet">
            <summary>Sets the shim of DbMappingView.get_EntitySql()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingView.AllInstances.EntitySqlGet">
            <summary>Sets the shim of DbMappingView.get_EntitySql()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache">
            <summary>Shim type of System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.#ctor(System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.Constructor">
            <summary>Sets the shim of DbMappingViewCache.DbMappingViewCache()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory">
            <summary>Shim type of System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.#ctor(System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.Constructor">
            <summary>Sets the shim of DbMappingViewCacheFactory.DbMappingViewCacheFactory()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute">
            <summary>Shim type of System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.#ctor(System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.CacheTypeGet">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.get_CacheType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.ConstructorTypeString">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.DbMappingViewCacheTypeAttribute(Type contextType, String cacheTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.ConstructorTypeType">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.DbMappingViewCacheTypeAttribute(Type contextType, Type cacheType)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.ContextTypeGet">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.get_ContextType()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.AllInstances.CacheTypeGet">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.get_CacheType()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.ShimDbMappingViewCacheTypeAttribute.AllInstances.ContextTypeGet">
            <summary>Sets the shim of DbMappingViewCacheTypeAttribute.get_ContextType()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView">
            <summary>Stub type of System.Data.Entity.Infrastructure.MappingViews.DbMappingView</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView.InitializeStub">
            <summary>Initializes a new instance of type StubDbMappingView</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingView.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache">
            <summary>Stub type of System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.GetView(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
            <summary>Sets the stub of DbMappingViewCache.GetView(EntitySetBase extent)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.GetViewEntitySetBase">
            <summary>Sets the stub of DbMappingViewCache.GetView(EntitySetBase extent)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.InitializeStub">
            <summary>Initializes a new instance of type StubDbMappingViewCache</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.MappingHashValueGet">
            <summary>Sets the stub of DbMappingViewCache.get_MappingHashValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCache.MappingHashValue">
            <summary>Sets the stub of DbMappingViewCache.get_MappingHashValue()</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory">
            <summary>Stub type of System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.Create(System.String,System.String)">
            <summary>Sets the stub of DbMappingViewCacheFactory.Create(String conceptualModelContainerName, String storeModelContainerName)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.CreateStringString">
            <summary>Sets the stub of DbMappingViewCacheFactory.Create(String conceptualModelContainerName, String storeModelContainerName)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDbMappingViewCacheFactory</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.MappingViews.Fakes.StubDbMappingViewCacheFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry">
            <summary>Shim type of System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.#ctor(System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.ConstructorStringString">
            <summary>Sets the shim of CustomPluralizationEntry.CustomPluralizationEntry(String singular, String plural)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.PluralGet">
            <summary>Sets the shim of CustomPluralizationEntry.get_Plural()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.PluralSetString">
            <summary>Sets the shim of CustomPluralizationEntry.set_Plural(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.SingularGet">
            <summary>Sets the shim of CustomPluralizationEntry.get_Singular()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.SingularSetString">
            <summary>Sets the shim of CustomPluralizationEntry.set_Singular(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.AllInstances.PluralGet">
            <summary>Sets the shim of CustomPluralizationEntry.get_Plural()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.AllInstances.PluralSetString">
            <summary>Sets the shim of CustomPluralizationEntry.set_Plural(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.AllInstances.SingularGet">
            <summary>Sets the shim of CustomPluralizationEntry.get_Singular()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimCustomPluralizationEntry.AllInstances.SingularSetString">
            <summary>Sets the shim of CustomPluralizationEntry.set_Singular(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService">
            <summary>Shim type of System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.#ctor(System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.Bind(System.Data.Entity.Infrastructure.Pluralization.IPluralizationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.CapitalizeStringFuncOfStringString">
            <summary>Sets the shim of EnglishPluralizationService.Capitalize(String word, Func`2&lt;String,String&gt; action)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.Constructor">
            <summary>Sets the shim of EnglishPluralizationService.EnglishPluralizationService()</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.ConstructorIEnumerableOfCustomPluralizationEntry">
            <summary>Sets the shim of EnglishPluralizationService.EnglishPluralizationService(IEnumerable`1&lt;CustomPluralizationEntry&gt; userDictionaryEntries)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.GetSuffixWordStringStringOut">
            <summary>Sets the shim of EnglishPluralizationService.GetSuffixWord(String word, String&amp; prefixWord)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.InternalPluralizeString">
            <summary>Sets the shim of EnglishPluralizationService.InternalPluralize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.InternalSingularizeString">
            <summary>Sets the shim of EnglishPluralizationService.InternalSingularize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.IsAlphabetsString">
            <summary>Sets the shim of EnglishPluralizationService.IsAlphabets(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.IsCapitalizedString">
            <summary>Sets the shim of EnglishPluralizationService.IsCapitalized(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.IsNoOpWordString">
            <summary>Sets the shim of EnglishPluralizationService.IsNoOpWord(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.IsPluralString">
            <summary>Sets the shim of EnglishPluralizationService.IsPlural(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.IsUninflectiveString">
            <summary>Sets the shim of EnglishPluralizationService.IsUninflective(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.PluralizeString">
            <summary>Sets the shim of EnglishPluralizationService.Pluralize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.SingularizeString">
            <summary>Sets the shim of EnglishPluralizationService.Singularize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1aString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1a(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1bString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1b(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1cString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1c(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1dString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1d(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1eString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1e(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__1fString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__1f(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__20String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__20(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__21String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__21(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__22String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__22(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__23String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__23(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__24String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__24(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__25String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__25(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__26String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__26(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__27String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__27(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalPluralizeb__28String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__28(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__47String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__47(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__48String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__48(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__49String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__49(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4aString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4a(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4bString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4b(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4cString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4c(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4dString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4d(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4eString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4e(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__4fString">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__4f(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__50String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__50(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__51String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__51(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__52String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__52(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__53String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__53(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__55String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__55(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._InternalSingularizeb__56String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalSingularize&gt;b__56(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService._ctorb__9CustomPluralizationEntry">
            <summary>Sets the shim of EnglishPluralizationService.&lt;.ctor&gt;b__9(CustomPluralizationEntry entry)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.InternalPluralizeString">
            <summary>Sets the shim of EnglishPluralizationService.InternalPluralize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.InternalSingularizeString">
            <summary>Sets the shim of EnglishPluralizationService.InternalSingularize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.IsNoOpWordString">
            <summary>Sets the shim of EnglishPluralizationService.IsNoOpWord(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.IsPluralString">
            <summary>Sets the shim of EnglishPluralizationService.IsPlural(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.IsUninflectiveString">
            <summary>Sets the shim of EnglishPluralizationService.IsUninflective(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.PluralizeString">
            <summary>Sets the shim of EnglishPluralizationService.Pluralize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances.SingularizeString">
            <summary>Sets the shim of EnglishPluralizationService.Singularize(String word)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances._InternalPluralizeb__25String">
            <summary>Sets the shim of EnglishPluralizationService.&lt;InternalPluralize&gt;b__25(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.ShimEnglishPluralizationService.AllInstances._ctorb__9CustomPluralizationEntry">
            <summary>Sets the shim of EnglishPluralizationService.&lt;.ctor&gt;b__9(CustomPluralizationEntry entry)</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry">
            <summary>Stub type of System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry.InitializeStub">
            <summary>Initializes a new instance of type StubCustomPluralizationEntry</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubCustomPluralizationEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService">
            <summary>Stub type of System.Data.Entity.Infrastructure.Pluralization.IPluralizationService</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService.#ctor">
            <summary>Initializes a new instance of type StubIPluralizationService</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService.PluralizeString">
            <summary>Sets the stub of IPluralizationService.Pluralize(String word)</summary>
        </member>
        <member name="F:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService.SingularizeString">
            <summary>Sets the stub of IPluralizationService.Singularize(String word)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService.ef::System#Data#Entity#Infrastructure#Pluralization#IPluralizationService#Pluralize(System.String)">
            <summary>Sets the stub of IPluralizationService.Pluralize(String word)</summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.Pluralization.Fakes.StubIPluralizationService.ef::System#Data#Entity#Infrastructure#Pluralization#IPluralizationService#Singularize(System.String)">
            <summary>Sets the stub of IPluralizationService.Singularize(String word)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder">
            <summary>Shim type of System.Data.Entity.Migrations.Builders.ColumnBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.#ctor(System.Data.Entity.Migrations.Builders.ColumnBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.BinaryNullableOfBooleanNullableOfInt32NullableOfBooleanByteArrayStringBooleanStringString">
            <summary>Sets the shim of ColumnBuilder.Binary(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Byte[] defaultValue, String defaultValueSql, Boolean timestamp, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.BooleanNullableOfBooleanNullableOfBooleanStringStringString">
            <summary>Sets the shim of ColumnBuilder.Boolean(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Boolean&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.BuildColumnPrimitiveTypeKindNullableOfBooleanObjectStringNullableOfInt32NullableOfByteNullableOfByteNullableOfBooleanNullableOfBooleanBooleanBooleanStringString">
            <summary>Sets the shim of ColumnBuilder.BuildColumn(PrimitiveTypeKind primitiveTypeKind, Nullable`1&lt;Boolean&gt; nullable, Object defaultValue, String defaultValueSql, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Boolean&gt; unicode, Nullable`1&lt;Boolean&gt; fixedLength, Boolean identity, Boolean timestamp, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.ByteNullableOfBooleanBooleanNullableOfByteStringStringString">
            <summary>Sets the shim of ColumnBuilder.Byte(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Byte&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.Constructor">
            <summary>Sets the shim of ColumnBuilder.ColumnBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.DateTimeNullableOfBooleanNullableOfByteNullableOfDateTimeStringStringString">
            <summary>Sets the shim of ColumnBuilder.DateTime(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTime&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.DateTimeOffsetNullableOfBooleanNullableOfByteNullableOfDateTimeOffsetStringStringString">
            <summary>Sets the shim of ColumnBuilder.DateTimeOffset(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTimeOffset&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.DecimalNullableOfBooleanNullableOfByteNullableOfByteNullableOfDecimalStringStringStringBoolean">
            <summary>Sets the shim of ColumnBuilder.Decimal(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Decimal&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.DoubleNullableOfBooleanNullableOfDoubleStringStringString">
            <summary>Sets the shim of ColumnBuilder.Double(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Double&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.EqualsObject">
            <summary>Sets the shim of ColumnBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.GeographyNullableOfBooleanDbGeographyStringStringString">
            <summary>Sets the shim of ColumnBuilder.Geography(Nullable`1&lt;Boolean&gt; nullable, DbGeography defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.GeometryNullableOfBooleanDbGeometryStringStringString">
            <summary>Sets the shim of ColumnBuilder.Geometry(Nullable`1&lt;Boolean&gt; nullable, DbGeometry defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.GetHashCode">
            <summary>Sets the shim of ColumnBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.GetType">
            <summary>Sets the shim of ColumnBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.GuidNullableOfBooleanBooleanNullableOfGuidStringStringString">
            <summary>Sets the shim of ColumnBuilder.Guid(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Guid&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.IntNullableOfBooleanBooleanNullableOfInt32StringStringString">
            <summary>Sets the shim of ColumnBuilder.Int(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int32&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.LongNullableOfBooleanBooleanNullableOfInt64StringStringString">
            <summary>Sets the shim of ColumnBuilder.Long(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int64&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.MemberwiseClone">
            <summary>Sets the shim of ColumnBuilder.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.ShortNullableOfBooleanBooleanNullableOfInt16StringStringString">
            <summary>Sets the shim of ColumnBuilder.Short(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int16&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.SingleNullableOfBooleanNullableOfSingleStringStringString">
            <summary>Sets the shim of ColumnBuilder.Single(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Single&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.StringNullableOfBooleanNullableOfInt32NullableOfBooleanNullableOfBooleanStringStringStringString">
            <summary>Sets the shim of ColumnBuilder.String(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Nullable`1&lt;Boolean&gt; unicode, String defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.TimeNullableOfBooleanNullableOfByteNullableOfTimeSpanStringStringString">
            <summary>Sets the shim of ColumnBuilder.Time(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;TimeSpan&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.ToString">
            <summary>Sets the shim of ColumnBuilder.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.BinaryNullableOfBooleanNullableOfInt32NullableOfBooleanByteArrayStringBooleanStringString">
            <summary>Sets the shim of ColumnBuilder.Binary(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Byte[] defaultValue, String defaultValueSql, Boolean timestamp, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.BooleanNullableOfBooleanNullableOfBooleanStringStringString">
            <summary>Sets the shim of ColumnBuilder.Boolean(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Boolean&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.ByteNullableOfBooleanBooleanNullableOfByteStringStringString">
            <summary>Sets the shim of ColumnBuilder.Byte(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Byte&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.DateTimeNullableOfBooleanNullableOfByteNullableOfDateTimeStringStringString">
            <summary>Sets the shim of ColumnBuilder.DateTime(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTime&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.DateTimeOffsetNullableOfBooleanNullableOfByteNullableOfDateTimeOffsetStringStringString">
            <summary>Sets the shim of ColumnBuilder.DateTimeOffset(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTimeOffset&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.DecimalNullableOfBooleanNullableOfByteNullableOfByteNullableOfDecimalStringStringStringBoolean">
            <summary>Sets the shim of ColumnBuilder.Decimal(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Decimal&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean identity)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.DoubleNullableOfBooleanNullableOfDoubleStringStringString">
            <summary>Sets the shim of ColumnBuilder.Double(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Double&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.EqualsObject">
            <summary>Sets the shim of ColumnBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.GeographyNullableOfBooleanDbGeographyStringStringString">
            <summary>Sets the shim of ColumnBuilder.Geography(Nullable`1&lt;Boolean&gt; nullable, DbGeography defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.GeometryNullableOfBooleanDbGeometryStringStringString">
            <summary>Sets the shim of ColumnBuilder.Geometry(Nullable`1&lt;Boolean&gt; nullable, DbGeometry defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.GetHashCode01">
            <summary>Sets the shim of ColumnBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.GetType01">
            <summary>Sets the shim of ColumnBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.GuidNullableOfBooleanBooleanNullableOfGuidStringStringString">
            <summary>Sets the shim of ColumnBuilder.Guid(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Guid&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.IntNullableOfBooleanBooleanNullableOfInt32StringStringString">
            <summary>Sets the shim of ColumnBuilder.Int(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int32&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.LongNullableOfBooleanBooleanNullableOfInt64StringStringString">
            <summary>Sets the shim of ColumnBuilder.Long(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int64&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of ColumnBuilder.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.ShortNullableOfBooleanBooleanNullableOfInt16StringStringString">
            <summary>Sets the shim of ColumnBuilder.Short(Nullable`1&lt;Boolean&gt; nullable, Boolean identity, Nullable`1&lt;Int16&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.SingleNullableOfBooleanNullableOfSingleStringStringString">
            <summary>Sets the shim of ColumnBuilder.Single(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Single&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.StringNullableOfBooleanNullableOfInt32NullableOfBooleanNullableOfBooleanStringStringStringString">
            <summary>Sets the shim of ColumnBuilder.String(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Nullable`1&lt;Boolean&gt; unicode, String defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.TimeNullableOfBooleanNullableOfByteNullableOfTimeSpanStringStringString">
            <summary>Sets the shim of ColumnBuilder.Time(Nullable`1&lt;Boolean&gt; nullable, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;TimeSpan&gt; defaultValue, String defaultValueSql, String name, String storeType)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimColumnBuilder.AllInstances.ToString01">
            <summary>Sets the shim of ColumnBuilder.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder">
            <summary>Shim type of System.Data.Entity.Migrations.Builders.ParameterBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.#ctor(System.Data.Entity.Migrations.Builders.ParameterBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.BinaryNullableOfInt32NullableOfBooleanByteArrayStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Binary(Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Byte[] defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.BooleanNullableOfBooleanStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Boolean(Nullable`1&lt;Boolean&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.BuildParameterPrimitiveTypeKindObjectStringNullableOfInt32NullableOfByteNullableOfByteNullableOfBooleanNullableOfBooleanStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.BuildParameter(PrimitiveTypeKind primitiveTypeKind, Object defaultValue, String defaultValueSql, Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Boolean&gt; unicode, Nullable`1&lt;Boolean&gt; fixedLength, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.ByteNullableOfByteStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Byte(Nullable`1&lt;Byte&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.Constructor">
            <summary>Sets the shim of ParameterBuilder.ParameterBuilder()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.DateTimeNullableOfByteNullableOfDateTimeStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.DateTime(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTime&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.DateTimeOffsetNullableOfByteNullableOfDateTimeOffsetStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.DateTimeOffset(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTimeOffset&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.DecimalNullableOfByteNullableOfByteNullableOfDecimalStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Decimal(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Decimal&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.DoubleNullableOfDoubleStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Double(Nullable`1&lt;Double&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.EqualsObject">
            <summary>Sets the shim of ParameterBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.GeographyDbGeographyStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Geography(DbGeography defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.GeometryDbGeometryStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Geometry(DbGeometry defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.GetHashCode">
            <summary>Sets the shim of ParameterBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.GetType">
            <summary>Sets the shim of ParameterBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.GuidNullableOfGuidStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Guid(Nullable`1&lt;Guid&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.IntNullableOfInt32StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Int(Nullable`1&lt;Int32&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.LongNullableOfInt64StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Long(Nullable`1&lt;Int64&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.MemberwiseClone">
            <summary>Sets the shim of ParameterBuilder.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.ShortNullableOfInt16StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Short(Nullable`1&lt;Int16&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.SingleNullableOfSingleStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Single(Nullable`1&lt;Single&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.StringNullableOfInt32NullableOfBooleanNullableOfBooleanStringStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.String(Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Nullable`1&lt;Boolean&gt; unicode, String defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.TimeNullableOfByteNullableOfTimeSpanStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Time(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;TimeSpan&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.ToString">
            <summary>Sets the shim of ParameterBuilder.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.BinaryNullableOfInt32NullableOfBooleanByteArrayStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Binary(Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Byte[] defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.BooleanNullableOfBooleanStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Boolean(Nullable`1&lt;Boolean&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.ByteNullableOfByteStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Byte(Nullable`1&lt;Byte&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.DateTimeNullableOfByteNullableOfDateTimeStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.DateTime(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTime&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.DateTimeOffsetNullableOfByteNullableOfDateTimeOffsetStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.DateTimeOffset(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;DateTimeOffset&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.DecimalNullableOfByteNullableOfByteNullableOfDecimalStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Decimal(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;Byte&gt; scale, Nullable`1&lt;Decimal&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.DoubleNullableOfDoubleStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Double(Nullable`1&lt;Double&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.EqualsObject">
            <summary>Sets the shim of ParameterBuilder.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.GeographyDbGeographyStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Geography(DbGeography defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.GeometryDbGeometryStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Geometry(DbGeometry defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.GetHashCode01">
            <summary>Sets the shim of ParameterBuilder.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.GetType01">
            <summary>Sets the shim of ParameterBuilder.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.GuidNullableOfGuidStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Guid(Nullable`1&lt;Guid&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.IntNullableOfInt32StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Int(Nullable`1&lt;Int32&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.LongNullableOfInt64StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Long(Nullable`1&lt;Int64&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of ParameterBuilder.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.ShortNullableOfInt16StringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Short(Nullable`1&lt;Int16&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.SingleNullableOfSingleStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Single(Nullable`1&lt;Single&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.StringNullableOfInt32NullableOfBooleanNullableOfBooleanStringStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.String(Nullable`1&lt;Int32&gt; maxLength, Nullable`1&lt;Boolean&gt; fixedLength, Nullable`1&lt;Boolean&gt; unicode, String defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.TimeNullableOfByteNullableOfTimeSpanStringStringStringBoolean">
            <summary>Sets the shim of ParameterBuilder.Time(Nullable`1&lt;Byte&gt; precision, Nullable`1&lt;TimeSpan&gt; defaultValue, String defaultValueSql, String name, String storeType, Boolean outParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimParameterBuilder.AllInstances.ToString01">
            <summary>Sets the shim of ParameterBuilder.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1">
            <summary>Shim type of System.Data.Entity.Migrations.Builders.TableBuilder`1</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.#ctor(System.Data.Entity.Migrations.Builders.TableBuilder{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.ConstructorCreateTableOperationDbMigration">
            <summary>Sets the shim of TableBuilder`1.TableBuilder`1(CreateTableOperation createTableOperation, DbMigration migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.EqualsObject">
            <summary>Sets the shim of TableBuilder`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.ForeignKeyStringExpressionOfFuncOfT0ObjectBooleanStringObject">
            <summary>Sets the shim of TableBuilder`1.ForeignKey(String principalTable, Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; dependentKeyExpression, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.GetHashCode">
            <summary>Sets the shim of TableBuilder`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.GetType">
            <summary>Sets the shim of TableBuilder`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.IndexExpressionOfFuncOfT0ObjectBooleanBooleanObject">
            <summary>Sets the shim of TableBuilder`1.Index(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; indexExpression, Boolean unique, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.MemberwiseClone">
            <summary>Sets the shim of TableBuilder`1.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.PrimaryKeyExpressionOfFuncOfT0ObjectStringBooleanObject">
            <summary>Sets the shim of TableBuilder`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; keyExpression, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.ToString">
            <summary>Sets the shim of TableBuilder`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.EqualsObject">
            <summary>Sets the shim of TableBuilder`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.ForeignKeyStringExpressionOfFuncOfT0ObjectBooleanStringObject">
            <summary>Sets the shim of TableBuilder`1.ForeignKey(String principalTable, Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; dependentKeyExpression, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of TableBuilder`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.GetType01">
            <summary>Sets the shim of TableBuilder`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.IndexExpressionOfFuncOfT0ObjectBooleanBooleanObject">
            <summary>Sets the shim of TableBuilder`1.Index(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; indexExpression, Boolean unique, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of TableBuilder`1.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.PrimaryKeyExpressionOfFuncOfT0ObjectStringBooleanObject">
            <summary>Sets the shim of TableBuilder`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; keyExpression, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.ShimTableBuilder`1.AllInstances.ToString01">
            <summary>Sets the shim of TableBuilder`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder">
            <summary>Stub type of System.Data.Entity.Migrations.Builders.ColumnBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.Equals(System.Object)">
            <summary>Sets the stub of ColumnBuilder.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.EqualsObject">
            <summary>Sets the stub of ColumnBuilder.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.GetHashCode">
            <summary>Sets the stub of ColumnBuilder.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.GetHashCode01">
            <summary>Sets the stub of ColumnBuilder.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubColumnBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.ToString">
            <summary>Sets the stub of ColumnBuilder.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.ToString01">
            <summary>Sets the stub of ColumnBuilder.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubColumnBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder">
            <summary>Stub type of System.Data.Entity.Migrations.Builders.ParameterBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.Equals(System.Object)">
            <summary>Sets the stub of ParameterBuilder.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.EqualsObject">
            <summary>Sets the stub of ParameterBuilder.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.GetHashCode">
            <summary>Sets the stub of ParameterBuilder.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.GetHashCode01">
            <summary>Sets the stub of ParameterBuilder.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubParameterBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.ToString">
            <summary>Sets the stub of ParameterBuilder.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.ToString01">
            <summary>Sets the stub of ParameterBuilder.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubParameterBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1">
            <summary>Stub type of System.Data.Entity.Migrations.Builders.TableBuilder`1</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.#ctor(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.DbMigration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.Equals(System.Object)">
            <summary>Sets the stub of TableBuilder`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.EqualsObject">
            <summary>Sets the stub of TableBuilder`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.GetHashCode">
            <summary>Sets the stub of TableBuilder`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.GetHashCode01">
            <summary>Sets the stub of TableBuilder`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.InitializeStub">
            <summary>Initializes a new instance of type StubTableBuilder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.ToString">
            <summary>Sets the stub of TableBuilder`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.ToString01">
            <summary>Sets the stub of TableBuilder`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Builders.Fakes.StubTableBuilder`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator">
            <summary>Shim type of System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.#ctor(System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.Constructor">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.CSharpMigrationCodeGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateAddColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateAlterProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateByteArray">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateColumnModelIndentedTextWriterBoolean">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateCreateProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateCreateTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDateTime">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDateTimeOffset">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDbGeography">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDbGeometry">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDecimal">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateDropTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateGuid">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateIEnumerableOfStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateInlineAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateInt64">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateMoveProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateMoveTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateObject">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateParameterModelIndentedTextWriterBoolean">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateProcedureOperationStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ProcedureOperation procedureOperation, String methodName, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateRenameProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateRenameTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateSingle">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateSqlOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateStringStringStringStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.GenerateTimeSpan">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.QuoteString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.ScrubNameString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.WriteClassEndStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.WriteClassStartStringStringIndentedTextWriterStringBooleanIEnumerableOfString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.WritePropertyStringStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__1dTupleOfCreateTableOperationAddForeignKeyOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__1d(Tuple`2&lt;CreateTableOperation,AddForeignKeyOperation&gt; t)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__1eTupleOfCreateTableOperationCreateIndexOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__1e(Tuple`2&lt;CreateTableOperation,CreateIndexOperation&gt; t)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__20MigrationOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__20(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__21MigrationOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__21(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__22MigrationOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__22(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__23MigrationOperation">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__23(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator._Generateb__41String">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__41(String c)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateAddColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateAlterProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateByteArray">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateColumnModelIndentedTextWriterBoolean">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateCreateProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateCreateTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDateTime">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDateTimeOffset">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDbGeography">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDbGeometry">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDecimal">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateDropTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateGuid">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateIEnumerableOfStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateInlineAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateInt64">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateMoveProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateMoveTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateObject">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateParameterModelIndentedTextWriterBoolean">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateProcedureOperationStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(ProcedureOperation procedureOperation, String methodName, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateRenameProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateRenameTableOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateSingle">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateSqlOperationIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateStringStringStringStringString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.GenerateTimeSpan">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.QuoteString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.ScrubNameString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.WriteClassEndStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.WriteClassStartStringStringIndentedTextWriterStringBooleanIEnumerableOfString">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances.WritePropertyStringStringIndentedTextWriter">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimCSharpMigrationCodeGenerator.AllInstances._Generateb__41String">
            <summary>Sets the shim of CSharpMigrationCodeGenerator.&lt;Generate&gt;b__41(String c)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator">
            <summary>Shim type of System.Data.Entity.Migrations.Design.MigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.#ctor(System.Data.Entity.Migrations.Design.MigrationCodeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.Constructor">
            <summary>Sets the shim of MigrationCodeGenerator.MigrationCodeGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.GetDefaultNamespacesBoolean">
            <summary>Sets the shim of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator._GetDefaultNamespacesb__5String">
            <summary>Sets the shim of MigrationCodeGenerator.&lt;GetDefaultNamespaces&gt;b__5(String n)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator._GetNamespacesb__0AddColumnOperation">
            <summary>Sets the shim of MigrationCodeGenerator.&lt;GetNamespaces&gt;b__0(AddColumnOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator._GetNamespacesb__1String">
            <summary>Sets the shim of MigrationCodeGenerator.&lt;GetNamespaces&gt;b__1(String n)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.AllInstances.GetDefaultNamespacesBoolean">
            <summary>Sets the shim of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationCodeGenerator.AllInstances.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder">
            <summary>Shim type of System.Data.Entity.Migrations.Design.MigrationScaffolder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.#ctor(System.Data.Entity.Migrations.Design.MigrationScaffolder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.ConstructorDbMigrationsConfiguration">
            <summary>Sets the shim of MigrationScaffolder.MigrationScaffolder(DbMigrationsConfiguration migrationsConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.NamespaceGet">
            <summary>Sets the shim of MigrationScaffolder.get_Namespace()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.NamespaceSetString">
            <summary>Sets the shim of MigrationScaffolder.set_Namespace(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.ScaffoldInitialCreate">
            <summary>Sets the shim of MigrationScaffolder.ScaffoldInitialCreate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.ScaffoldString">
            <summary>Sets the shim of MigrationScaffolder.Scaffold(String migrationName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.ScaffoldStringBoolean">
            <summary>Sets the shim of MigrationScaffolder.Scaffold(String migrationName, Boolean ignoreChanges)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances.NamespaceGet">
            <summary>Sets the shim of MigrationScaffolder.get_Namespace()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances.NamespaceSetString">
            <summary>Sets the shim of MigrationScaffolder.set_Namespace(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances.ScaffoldInitialCreate">
            <summary>Sets the shim of MigrationScaffolder.ScaffoldInitialCreate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances.ScaffoldString">
            <summary>Sets the shim of MigrationScaffolder.Scaffold(String migrationName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimMigrationScaffolder.AllInstances.ScaffoldStringBoolean">
            <summary>Sets the shim of MigrationScaffolder.Scaffold(String migrationName, Boolean ignoreChanges)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration">
            <summary>Shim type of System.Data.Entity.Migrations.Design.ScaffoldedMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.#ctor(System.Data.Entity.Migrations.Design.ScaffoldedMigration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.Constructor">
            <summary>Sets the shim of ScaffoldedMigration.ScaffoldedMigration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.DesignerCodeGet">
            <summary>Sets the shim of ScaffoldedMigration.get_DesignerCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.DesignerCodeSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_DesignerCode(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.DirectoryGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Directory()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.DirectorySetString">
            <summary>Sets the shim of ScaffoldedMigration.set_Directory(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.IsRescaffoldGet">
            <summary>Sets the shim of ScaffoldedMigration.get_IsRescaffold()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.IsRescaffoldSetBoolean">
            <summary>Sets the shim of ScaffoldedMigration.set_IsRescaffold(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.LanguageGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Language()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.LanguageSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_Language(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.MigrationIdGet">
            <summary>Sets the shim of ScaffoldedMigration.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.MigrationIdSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_MigrationId(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.ResourcesGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Resources()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.UserCodeGet">
            <summary>Sets the shim of ScaffoldedMigration.get_UserCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.UserCodeSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_UserCode(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.DesignerCodeGet">
            <summary>Sets the shim of ScaffoldedMigration.get_DesignerCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.DesignerCodeSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_DesignerCode(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.DirectoryGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Directory()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.DirectorySetString">
            <summary>Sets the shim of ScaffoldedMigration.set_Directory(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.IsRescaffoldGet">
            <summary>Sets the shim of ScaffoldedMigration.get_IsRescaffold()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.IsRescaffoldSetBoolean">
            <summary>Sets the shim of ScaffoldedMigration.set_IsRescaffold(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.LanguageGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Language()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.LanguageSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_Language(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.MigrationIdGet">
            <summary>Sets the shim of ScaffoldedMigration.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.MigrationIdSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_MigrationId(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.ResourcesGet">
            <summary>Sets the shim of ScaffoldedMigration.get_Resources()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.UserCodeGet">
            <summary>Sets the shim of ScaffoldedMigration.get_UserCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimScaffoldedMigration.AllInstances.UserCodeSetString">
            <summary>Sets the shim of ScaffoldedMigration.set_UserCode(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade">
            <summary>Shim type of System.Data.Entity.Migrations.Design.ToolingFacade</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.#ctor(System.Data.Entity.Migrations.Design.ToolingFacade)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.Constructor">
            <summary>Sets the shim of ToolingFacade.ToolingFacade()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.ConstructorStringStringStringStringStringStringDbConnectionInfo">
            <summary>Sets the shim of ToolingFacade.ToolingFacade(String migrationsAssemblyName, String contextAssemblyName, String configurationTypeName, String workingDirectory, String configurationFilePath, String dataDirectory, DbConnectionInfo connectionStringInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.Dispose">
            <summary>Sets the shim of ToolingFacade.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.DisposeBoolean">
            <summary>Sets the shim of ToolingFacade.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.GetContextTypeString">
            <summary>Sets the shim of ToolingFacade.GetContextType(String contextTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.GetContextTypes">
            <summary>Sets the shim of ToolingFacade.GetContextTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.GetDatabaseMigrations">
            <summary>Sets the shim of ToolingFacade.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.GetPendingMigrations">
            <summary>Sets the shim of ToolingFacade.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogInfoDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogInfoDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogInfoDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogInfoDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogVerboseDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogVerboseDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogVerboseDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogVerboseDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogWarningDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogWarningDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.LogWarningDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogWarningDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.ScaffoldInitialCreateStringString">
            <summary>Sets the shim of ToolingFacade.ScaffoldInitialCreate(String language, String rootNamespace)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.ScaffoldStringStringStringBoolean">
            <summary>Sets the shim of ToolingFacade.Scaffold(String migrationName, String language, String rootNamespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.ScriptUpdateStringStringBoolean">
            <summary>Sets the shim of ToolingFacade.ScriptUpdate(String sourceMigration, String targetMigration, Boolean force)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.UpdateStringBoolean">
            <summary>Sets the shim of ToolingFacade.Update(String targetMigration, Boolean force)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.Dispose">
            <summary>Sets the shim of ToolingFacade.Dispose()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ToolingFacade.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.GetContextTypeString">
            <summary>Sets the shim of ToolingFacade.GetContextType(String contextTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.GetContextTypes">
            <summary>Sets the shim of ToolingFacade.GetContextTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.GetDatabaseMigrations">
            <summary>Sets the shim of ToolingFacade.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.GetPendingMigrations">
            <summary>Sets the shim of ToolingFacade.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogInfoDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogInfoDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogInfoDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogInfoDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogVerboseDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogVerboseDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogVerboseDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogVerboseDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogWarningDelegateGet">
            <summary>Sets the shim of ToolingFacade.get_LogWarningDelegate()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.LogWarningDelegateSetActionOfString">
            <summary>Sets the shim of ToolingFacade.set_LogWarningDelegate(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.ScaffoldInitialCreateStringString">
            <summary>Sets the shim of ToolingFacade.ScaffoldInitialCreate(String language, String rootNamespace)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.ScaffoldStringStringStringBoolean">
            <summary>Sets the shim of ToolingFacade.Scaffold(String migrationName, String language, String rootNamespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.ScriptUpdateStringStringBoolean">
            <summary>Sets the shim of ToolingFacade.ScriptUpdate(String sourceMigration, String targetMigration, Boolean force)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimToolingFacade.AllInstances.UpdateStringBoolean">
            <summary>Sets the shim of ToolingFacade.Update(String targetMigration, Boolean force)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator">
            <summary>Shim type of System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.#ctor(System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.Constructor">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.VisualBasicMigrationCodeGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateAddColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateAlterProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateByteArray">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateColumnModelIndentedTextWriterBoolean">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateCreateProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateCreateTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDateTime">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDateTimeOffset">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDbGeography">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDbGeometry">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDecimal">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateDropTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateGuid">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateIEnumerableOfStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateInlineAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateInt64">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateMoveProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateMoveTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateObject">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateParameterModelIndentedTextWriterBoolean">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateProcedureOperationStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ProcedureOperation procedureOperation, String methodName, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateRenameProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateRenameTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateSingle">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateSqlOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateStringStringStringStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.GenerateTimeSpan">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.QuoteString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.ScrubNameString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.WriteClassEndStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.WriteClassStartStringStringIndentedTextWriterStringBooleanIEnumerableOfString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.WritePropertyStringStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__16TupleOfCreateTableOperationAddForeignKeyOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__16(Tuple`2&lt;CreateTableOperation,AddForeignKeyOperation&gt; t)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__17TupleOfCreateTableOperationCreateIndexOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__17(Tuple`2&lt;CreateTableOperation,CreateIndexOperation&gt; t)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__19MigrationOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__19(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__1aMigrationOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__1a(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__1bMigrationOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__1b(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__1cMigrationOperation">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__1c(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator._Generateb__3aString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__3a(String c)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateAddColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateAlterProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateByteArray">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateColumnModelIndentedTextWriterBoolean">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateCreateProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateCreateTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDateTime">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDateTimeOffset">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDbGeography">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDbGeometry">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDecimal">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateDropTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateGuid">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateIEnumerableOfStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateInlineAddPrimaryKeyOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateInt64">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateMoveProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateMoveTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateObject">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateParameterModelIndentedTextWriterBoolean">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateProcedureOperationStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(ProcedureOperation procedureOperation, String methodName, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateRenameProcedureOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateRenameTableOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateSingle">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateSqlOperationIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateStringStringStringStringString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.GenerateTimeSpan">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.QuoteString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.ScrubNameString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.WriteClassEndStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.WriteClassStartStringStringIndentedTextWriterStringBooleanIEnumerableOfString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances.WritePropertyStringStringIndentedTextWriter">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.ShimVisualBasicMigrationCodeGenerator.AllInstances._Generateb__3aString">
            <summary>Sets the shim of VisualBasicMigrationCodeGenerator.&lt;Generate&gt;b__3a(String c)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator">
            <summary>Stub type of System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Single)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.DateTimeOffset)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Decimal)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Byte[])">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Object)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.DateTime)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Guid)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Int64)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.TimeSpan)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateByteArray">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateDateTime">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateDateTimeOffset">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateDbGeography">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateDbGeometry">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateDecimal">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateGuid">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateInt64">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateObject">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateSingle">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateStringStringStringStringString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GenerateTimeSpan">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GetDefaultNamespacesBoolean">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubCSharpMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.Quote(System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.QuoteString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.ScrubName(System.String)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.ScrubNameString">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.TranslateColumnType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the stub of CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubCSharpMigrationCodeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator">
            <summary>Stub type of System.Data.Entity.Migrations.Design.MigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of MigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the stub of MigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.GetDefaultNamespacesBoolean">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationCodeGenerator</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationCodeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder">
            <summary>Stub type of System.Data.Entity.Migrations.Design.MigrationScaffolder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationScaffolder</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.Scaffold(System.String)">
            <summary>Sets the stub of MigrationScaffolder.Scaffold(String migrationName)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.Scaffold(System.String,System.Boolean)">
            <summary>Sets the stub of MigrationScaffolder.Scaffold(String migrationName, Boolean ignoreChanges)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.ScaffoldInitialCreate">
            <summary>Sets the stub of MigrationScaffolder.ScaffoldInitialCreate()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.ScaffoldInitialCreate01">
            <summary>Sets the stub of MigrationScaffolder.ScaffoldInitialCreate()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.ScaffoldString">
            <summary>Sets the stub of MigrationScaffolder.Scaffold(String migrationName)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.ScaffoldStringBoolean">
            <summary>Sets the stub of MigrationScaffolder.Scaffold(String migrationName, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubMigrationScaffolder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration">
            <summary>Stub type of System.Data.Entity.Migrations.Design.ScaffoldedMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration.InitializeStub">
            <summary>Initializes a new instance of type StubScaffoldedMigration</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubScaffoldedMigration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade">
            <summary>Stub type of System.Data.Entity.Migrations.Design.ToolingFacade</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Data.Entity.Infrastructure.DbConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.Dispose(System.Boolean)">
            <summary>Sets the stub of ToolingFacade.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.DisposeBoolean">
            <summary>Sets the stub of ToolingFacade.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.GetDatabaseMigrations">
            <summary>Sets the stub of ToolingFacade.GetDatabaseMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.GetDatabaseMigrations01">
            <summary>Sets the stub of ToolingFacade.GetDatabaseMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.GetPendingMigrations">
            <summary>Sets the stub of ToolingFacade.GetPendingMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.GetPendingMigrations01">
            <summary>Sets the stub of ToolingFacade.GetPendingMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.InitializeStub">
            <summary>Initializes a new instance of type StubToolingFacade</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.Scaffold(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of ToolingFacade.Scaffold(String migrationName, String language, String rootNamespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.ScaffoldStringStringStringBoolean">
            <summary>Sets the stub of ToolingFacade.Scaffold(String migrationName, String language, String rootNamespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubToolingFacade.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator">
            <summary>Stub type of System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Single)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.DateTimeOffset)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Decimal)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Byte[])">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Object)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.DateTime)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Guid)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Int64)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.TimeSpan)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateByteArray">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateDateTime">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateDateTimeOffset">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateDbGeography">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateDbGeometry">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateDecimal">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Decimal defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateGuid">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateInt64">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Int64 defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateObject">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateSingle">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(Single defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateStringStringStringStringString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GenerateTimeSpan">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GetDefaultNamespacesBoolean">
            <summary>Sets the stub of MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>Sets the stub of MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubVisualBasicMigrationCodeGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.Quote(System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.QuoteString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.Quote(String identifier)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.ScrubName(System.String)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.ScrubNameString">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.ScrubName(String name)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.TranslateColumnType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.TranslateColumnTypePrimitiveTypeKind">
            <summary>Sets the stub of VisualBasicMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.Fakes.StubVisualBasicMigrationCodeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigration">
            <summary>Shim type of System.Data.Entity.Migrations.DbMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.#ctor(System.Data.Entity.Migrations.DbMigration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AlterStoredProcedureOf1StringFuncOfParameterBuilderM0StringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object})">
            <summary>Sets the shim of DbMigration.AlterStoredProcedure(String name, Func`2&lt;ParameterBuilder,!!0&gt; parametersAction, String body, Object anonymousArguments)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.CreateStoredProcedureOf1StringFuncOfParameterBuilderM0StringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object})">
            <summary>Sets the shim of DbMigration.CreateStoredProcedure(String name, Func`2&lt;ParameterBuilder,!!0&gt; parametersAction, String body, Object anonymousArguments)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.CreateTableOf1StringFuncOfColumnBuilderM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object,System.Data.Entity.Migrations.Builders.TableBuilder{``0}})">
            <summary>Sets the shim of DbMigration.CreateTable(String name, Func`2&lt;ColumnBuilder,!!0&gt; columnsAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddColumnStringStringFuncOfColumnBuilderColumnModelObject">
            <summary>Sets the shim of DbMigration.AddColumn(String table, String name, Func`2&lt;ColumnBuilder,ColumnModel&gt; columnAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddForeignKeyStringStringArrayStringStringArrayBooleanStringObject">
            <summary>Sets the shim of DbMigration.AddForeignKey(String dependentTable, String[] dependentColumns, String principalTable, String[] principalColumns, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddForeignKeyStringStringStringStringBooleanStringObject">
            <summary>Sets the shim of DbMigration.AddForeignKey(String dependentTable, String dependentColumn, String principalTable, String principalColumn, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddOperationMigrationOperation">
            <summary>Sets the shim of DbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddPrimaryKeyStringStringArrayStringBooleanObject">
            <summary>Sets the shim of DbMigration.AddPrimaryKey(String table, String[] columns, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AddPrimaryKeyStringStringStringBooleanObject">
            <summary>Sets the shim of DbMigration.AddPrimaryKey(String table, String column, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AlterColumnStringStringFuncOfColumnBuilderColumnModelObject">
            <summary>Sets the shim of DbMigration.AlterColumn(String table, String name, Func`2&lt;ColumnBuilder,ColumnModel&gt; columnAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AlterStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.AlterStoredProcedure(String name, String body, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.Constructor">
            <summary>Sets the shim of DbMigration.DbMigration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.CreateIndexStringStringArrayBooleanStringBooleanObject">
            <summary>Sets the shim of DbMigration.CreateIndex(String table, String[] columns, Boolean unique, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.CreateIndexStringStringBooleanStringBooleanObject">
            <summary>Sets the shim of DbMigration.CreateIndex(String table, String column, Boolean unique, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.CreateStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.CreateStoredProcedure(String name, String body, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.Down">
            <summary>Sets the shim of DbMigration.Down()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropColumnStringStringObject">
            <summary>Sets the shim of DbMigration.DropColumn(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropForeignKeyStringStringArrayStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String[] dependentColumns, String principalTable, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropForeignKeyStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropForeignKeyStringStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String dependentColumn, String principalTable, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropForeignKeyStringStringStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String dependentColumn, String principalTable, String principalColumn, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropIndexStringStringArrayObject">
            <summary>Sets the shim of DbMigration.DropIndex(String table, String[] columns, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropIndexStringStringObject">
            <summary>Sets the shim of DbMigration.DropIndex(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropPrimaryKeyStringObject">
            <summary>Sets the shim of DbMigration.DropPrimaryKey(String table, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropPrimaryKeyStringStringObject">
            <summary>Sets the shim of DbMigration.DropPrimaryKey(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropStoredProcedureStringObject">
            <summary>Sets the shim of DbMigration.DropStoredProcedure(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.DropTableStringObject">
            <summary>Sets the shim of DbMigration.DropTable(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.EqualsObject">
            <summary>Sets the shim of DbMigration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.GetHashCode">
            <summary>Sets the shim of DbMigration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.GetType">
            <summary>Sets the shim of DbMigration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.MemberwiseClone">
            <summary>Sets the shim of DbMigration.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.MoveStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.MoveStoredProcedure(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.MoveTableStringStringObject">
            <summary>Sets the shim of DbMigration.MoveTable(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.OperationsGet">
            <summary>Sets the shim of DbMigration.get_Operations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.RenameColumnStringStringStringObject">
            <summary>Sets the shim of DbMigration.RenameColumn(String table, String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.RenameStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.RenameStoredProcedure(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.RenameTableStringStringObject">
            <summary>Sets the shim of DbMigration.RenameTable(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.Reset">
            <summary>Sets the shim of DbMigration.Reset()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.SqlStringBooleanObject">
            <summary>Sets the shim of DbMigration.Sql(String sql, Boolean suppressTransaction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.SystemDataEntityMigrationsInfrastructureIDbMigrationAddOperationMigrationOperation">
            <summary>Sets the shim of DbMigration.System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.ToString">
            <summary>Sets the shim of DbMigration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration._AlterStoredProcedureb__5ParameterBuilder">
            <summary>Sets the shim of DbMigration.&lt;AlterStoredProcedure&gt;b__5(ParameterBuilder _)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration._CreateStoredProcedureb__0ParameterBuilder">
            <summary>Sets the shim of DbMigration.&lt;CreateStoredProcedure&gt;b__0(ParameterBuilder _)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AlterStoredProcedureOf1StringFuncOfParameterBuilderM0StringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Migrations.DbMigration,System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object})">
            <summary>Sets the shim of DbMigration.AlterStoredProcedure(String name, Func`2&lt;ParameterBuilder,!!0&gt; parametersAction, String body, Object anonymousArguments)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.CreateStoredProcedureOf1StringFuncOfParameterBuilderM0StringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.Migrations.DbMigration,System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object})">
            <summary>Sets the shim of DbMigration.CreateStoredProcedure(String name, Func`2&lt;ParameterBuilder,!!0&gt; parametersAction, String body, Object anonymousArguments)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.CreateTableOf1StringFuncOfColumnBuilderM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Migrations.DbMigration,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object,System.Data.Entity.Migrations.Builders.TableBuilder{``0}})">
            <summary>Sets the shim of DbMigration.CreateTable(String name, Func`2&lt;ColumnBuilder,!!0&gt; columnsAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddColumnStringStringFuncOfColumnBuilderColumnModelObject">
            <summary>Sets the shim of DbMigration.AddColumn(String table, String name, Func`2&lt;ColumnBuilder,ColumnModel&gt; columnAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddForeignKeyStringStringArrayStringStringArrayBooleanStringObject">
            <summary>Sets the shim of DbMigration.AddForeignKey(String dependentTable, String[] dependentColumns, String principalTable, String[] principalColumns, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddForeignKeyStringStringStringStringBooleanStringObject">
            <summary>Sets the shim of DbMigration.AddForeignKey(String dependentTable, String dependentColumn, String principalTable, String principalColumn, Boolean cascadeDelete, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddOperationMigrationOperation">
            <summary>Sets the shim of DbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddPrimaryKeyStringStringArrayStringBooleanObject">
            <summary>Sets the shim of DbMigration.AddPrimaryKey(String table, String[] columns, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AddPrimaryKeyStringStringStringBooleanObject">
            <summary>Sets the shim of DbMigration.AddPrimaryKey(String table, String column, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AlterColumnStringStringFuncOfColumnBuilderColumnModelObject">
            <summary>Sets the shim of DbMigration.AlterColumn(String table, String name, Func`2&lt;ColumnBuilder,ColumnModel&gt; columnAction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.AlterStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.AlterStoredProcedure(String name, String body, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.CreateIndexStringStringArrayBooleanStringBooleanObject">
            <summary>Sets the shim of DbMigration.CreateIndex(String table, String[] columns, Boolean unique, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.CreateIndexStringStringBooleanStringBooleanObject">
            <summary>Sets the shim of DbMigration.CreateIndex(String table, String column, Boolean unique, String name, Boolean clustered, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.CreateStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.CreateStoredProcedure(String name, String body, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.Down">
            <summary>Sets the shim of DbMigration.Down()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropColumnStringStringObject">
            <summary>Sets the shim of DbMigration.DropColumn(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropForeignKeyStringStringArrayStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String[] dependentColumns, String principalTable, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropForeignKeyStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropForeignKeyStringStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String dependentColumn, String principalTable, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropForeignKeyStringStringStringStringObject">
            <summary>Sets the shim of DbMigration.DropForeignKey(String dependentTable, String dependentColumn, String principalTable, String principalColumn, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropIndexStringStringArrayObject">
            <summary>Sets the shim of DbMigration.DropIndex(String table, String[] columns, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropIndexStringStringObject">
            <summary>Sets the shim of DbMigration.DropIndex(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropPrimaryKeyStringObject">
            <summary>Sets the shim of DbMigration.DropPrimaryKey(String table, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropPrimaryKeyStringStringObject">
            <summary>Sets the shim of DbMigration.DropPrimaryKey(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropStoredProcedureStringObject">
            <summary>Sets the shim of DbMigration.DropStoredProcedure(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.DropTableStringObject">
            <summary>Sets the shim of DbMigration.DropTable(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.EqualsObject">
            <summary>Sets the shim of DbMigration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbMigration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.GetType01">
            <summary>Sets the shim of DbMigration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of DbMigration.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.MoveStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.MoveStoredProcedure(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.MoveTableStringStringObject">
            <summary>Sets the shim of DbMigration.MoveTable(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.OperationsGet">
            <summary>Sets the shim of DbMigration.get_Operations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.RenameColumnStringStringStringObject">
            <summary>Sets the shim of DbMigration.RenameColumn(String table, String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.RenameStoredProcedureStringStringObject">
            <summary>Sets the shim of DbMigration.RenameStoredProcedure(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.RenameTableStringStringObject">
            <summary>Sets the shim of DbMigration.RenameTable(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.Reset">
            <summary>Sets the shim of DbMigration.Reset()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.SqlStringBooleanObject">
            <summary>Sets the shim of DbMigration.Sql(String sql, Boolean suppressTransaction, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.SystemDataEntityMigrationsInfrastructureIDbMigrationAddOperationMigrationOperation">
            <summary>Sets the shim of DbMigration.System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigration.AllInstances.ToString01">
            <summary>Sets the shim of DbMigration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration">
            <summary>Shim type of System.Data.Entity.Migrations.DbMigrationsConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AutomaticMigrationDataLossAllowedGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_AutomaticMigrationDataLossAllowed()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AutomaticMigrationDataLossAllowedSetBoolean">
            <summary>Sets the shim of DbMigrationsConfiguration.set_AutomaticMigrationDataLossAllowed(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AutomaticMigrationsEnabledGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_AutomaticMigrationsEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AutomaticMigrationsEnabledSetBoolean">
            <summary>Sets the shim of DbMigrationsConfiguration.set_AutomaticMigrationsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.CodeGeneratorGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_CodeGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.CodeGeneratorSetMigrationCodeGenerator">
            <summary>Sets the shim of DbMigrationsConfiguration.set_CodeGenerator(MigrationCodeGenerator value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.CommandTimeoutGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of DbMigrationsConfiguration.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.Constructor">
            <summary>Sets the shim of DbMigrationsConfiguration.DbMigrationsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.ConstructorLazyOfIDbDependencyResolver">
            <summary>Sets the shim of DbMigrationsConfiguration.DbMigrationsConfiguration(Lazy`1&lt;IDbDependencyResolver&gt; resolver)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.ContextKeyGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.ContextKeySetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.ContextTypeGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.ContextTypeSetType">
            <summary>Sets the shim of DbMigrationsConfiguration.set_ContextType(Type value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.GetHistoryContextFactoryString">
            <summary>Sets the shim of DbMigrationsConfiguration.GetHistoryContextFactory(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.GetSqlGeneratorString">
            <summary>Sets the shim of DbMigrationsConfiguration.GetSqlGenerator(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsAssemblyGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsAssembly()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsAssemblySetAssembly">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsAssembly(Assembly value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsDirectoryGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsDirectory()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsDirectorySetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsDirectory(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsNamespaceGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsNamespace()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.MigrationsNamespaceSetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsNamespace(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.OnSeedDbContext">
            <summary>Sets the shim of DbMigrationsConfiguration.OnSeed(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.SetHistoryContextFactoryStringFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbMigrationsConfiguration.SetHistoryContextFactory(String providerInvariantName, Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.SetSqlGeneratorStringMigrationSqlGenerator">
            <summary>Sets the shim of DbMigrationsConfiguration.SetSqlGenerator(String providerInvariantName, MigrationSqlGenerator migrationSqlGenerator)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.TargetDatabaseGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.TargetDatabaseSetDbConnectionInfo">
            <summary>Sets the shim of DbMigrationsConfiguration.set_TargetDatabase(DbConnectionInfo value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration._ctorb__0">
            <summary>Sets the shim of DbMigrationsConfiguration.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.AutomaticMigrationDataLossAllowedGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_AutomaticMigrationDataLossAllowed()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.AutomaticMigrationDataLossAllowedSetBoolean">
            <summary>Sets the shim of DbMigrationsConfiguration.set_AutomaticMigrationDataLossAllowed(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.AutomaticMigrationsEnabledGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_AutomaticMigrationsEnabled()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.AutomaticMigrationsEnabledSetBoolean">
            <summary>Sets the shim of DbMigrationsConfiguration.set_AutomaticMigrationsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.CodeGeneratorGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_CodeGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.CodeGeneratorSetMigrationCodeGenerator">
            <summary>Sets the shim of DbMigrationsConfiguration.set_CodeGenerator(MigrationCodeGenerator value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of DbMigrationsConfiguration.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.ContextKeyGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.ContextKeySetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.ContextTypeGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.ContextTypeSetType">
            <summary>Sets the shim of DbMigrationsConfiguration.set_ContextType(Type value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.GetHistoryContextFactoryString">
            <summary>Sets the shim of DbMigrationsConfiguration.GetHistoryContextFactory(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.GetSqlGeneratorString">
            <summary>Sets the shim of DbMigrationsConfiguration.GetSqlGenerator(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsAssemblyGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsAssembly()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsAssemblySetAssembly">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsAssembly(Assembly value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsDirectoryGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsDirectory()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsDirectorySetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsDirectory(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsNamespaceGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_MigrationsNamespace()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.MigrationsNamespaceSetString">
            <summary>Sets the shim of DbMigrationsConfiguration.set_MigrationsNamespace(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.OnSeedDbContext">
            <summary>Sets the shim of DbMigrationsConfiguration.OnSeed(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.SetHistoryContextFactoryStringFuncOfDbConnectionStringHistoryContext">
            <summary>Sets the shim of DbMigrationsConfiguration.SetHistoryContextFactory(String providerInvariantName, Func`3&lt;DbConnection,String,HistoryContext&gt; factory)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.SetSqlGeneratorStringMigrationSqlGenerator">
            <summary>Sets the shim of DbMigrationsConfiguration.SetSqlGenerator(String providerInvariantName, MigrationSqlGenerator migrationSqlGenerator)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.TargetDatabaseGet">
            <summary>Sets the shim of DbMigrationsConfiguration.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration.AllInstances.TargetDatabaseSetDbConnectionInfo">
            <summary>Sets the shim of DbMigrationsConfiguration.set_TargetDatabase(DbConnectionInfo value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1">
            <summary>Shim type of System.Data.Entity.Migrations.DbMigrationsConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.Constructor">
            <summary>Sets the shim of DbMigrationsConfiguration`1.DbMigrationsConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.EqualsObject">
            <summary>Sets the shim of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.GetHashCode">
            <summary>Sets the shim of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.GetType">
            <summary>Sets the shim of DbMigrationsConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.MemberwiseClone">
            <summary>Sets the shim of DbMigrationsConfiguration`1.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.OnSeedDbContext">
            <summary>Sets the shim of DbMigrationsConfiguration`1.OnSeed(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.SeedT0">
            <summary>Sets the shim of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.StaticConstructor">
            <summary>Sets the shim of DbMigrationsConfiguration`1.DbMigrationsConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.ToString">
            <summary>Sets the shim of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of DbMigrationsConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.MemberwiseClone01">
            <summary>Sets the shim of DbMigrationsConfiguration`1.MemberwiseClone()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.OnSeedDbContext">
            <summary>Sets the shim of DbMigrationsConfiguration`1.OnSeed(DbContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.SeedT0">
            <summary>Sets the shim of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrationsConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrator">
            <summary>Shim type of System.Data.Entity.Migrations.DbMigrator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.#ctor(System.Data.Entity.Migrations.DbMigrator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of DbMigrator.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of DbMigrator.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.CheckLegacyCompatibilityAction">
            <summary>Sets the shim of DbMigrator.CheckLegacyCompatibility(Action onCompatible)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ConfigurationGet">
            <summary>Sets the shim of DbMigrator.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ConstructorDbMigrationsConfiguration">
            <summary>Sets the shim of DbMigrator.DbMigrator(DbMigrationsConfiguration configuration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ConstructorDbMigrationsConfigurationDbContext">
            <summary>Sets the shim of DbMigrator.DbMigrator(DbMigrationsConfiguration configuration, DbContext usersContext)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.CreateConnection">
            <summary>Sets the shim of DbMigrator.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.CreateDiscoveryQueryTrees">
            <summary>Sets the shim of DbMigrator.CreateDiscoveryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.DowngradeIEnumerableOfString">
            <summary>Sets the shim of DbMigrator.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.EnsureDatabaseExistsAction">
            <summary>Sets the shim of DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ExecuteOperationsStringXDocumentIEnumerableOfMigrationOperationIEnumerableOfMigrationOperationBooleanBoolean">
            <summary>Sets the shim of DbMigrator.ExecuteOperations(String migrationId, XDocument targetModel, IEnumerable`1&lt;MigrationOperation&gt; operations, IEnumerable`1&lt;MigrationOperation&gt; systemOperations, Boolean downgrading, Boolean auto)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of DbMigrator.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of DbMigrator.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ExecuteStatementsInternalIEnumerableOfMigrationStatementDbConnection">
            <summary>Sets the shim of DbMigrator.ExecuteStatementsInternal(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements, DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.FillInForeignKeyOperationsIEnumerableOfMigrationOperationXDocument">
            <summary>Sets the shim of DbMigrator.FillInForeignKeyOperations(IEnumerable`1&lt;MigrationOperation&gt; operations, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of DbMigrator.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetDatabaseMigrations">
            <summary>Sets the shim of DbMigrator.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetDefaultSchemaDbMigration">
            <summary>Sets the shim of DbMigrator.GetDefaultSchema(DbMigration migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetEmptyModel">
            <summary>Sets the shim of DbMigrator.GetEmptyModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetHistoryModelString">
            <summary>Sets the shim of DbMigrator.GetHistoryModel(String defaultSchema)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetHistorySchemas">
            <summary>Sets the shim of DbMigrator.GetHistorySchemas()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetLastDefaultSchemaString">
            <summary>Sets the shim of DbMigrator.GetLastDefaultSchema(String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetLastModelDbMigrationString">
            <summary>Sets the shim of DbMigrator.GetLastModel(DbMigration lastMigration, String currentMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetLocalMigrations">
            <summary>Sets the shim of DbMigrator.GetLocalMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetMigrationIdString">
            <summary>Sets the shim of DbMigrator.GetMigrationId(String migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetPendingMigrations">
            <summary>Sets the shim of DbMigrator.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.GetStandardizedTableNameString">
            <summary>Sets the shim of DbMigrator.GetStandardizedTableName(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.HistoryExists">
            <summary>Sets the shim of DbMigrator.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.IsModelOutOfDateXDocumentDbMigration">
            <summary>Sets the shim of DbMigrator.IsModelOutOfDate(XDocument model, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of DbMigrator.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ScaffoldInitialCreateString">
            <summary>Sets the shim of DbMigrator.ScaffoldInitialCreate(String namespace)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.ScaffoldStringStringBoolean">
            <summary>Sets the shim of DbMigrator.Scaffold(String migrationName, String namespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.SeedDatabase">
            <summary>Sets the shim of DbMigrator.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.SqlGeneratorGet">
            <summary>Sets the shim of DbMigrator.get_SqlGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.TargetDatabaseGet">
            <summary>Sets the shim of DbMigrator.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.UpdateInternalString">
            <summary>Sets the shim of DbMigrator.UpdateInternal(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.UpdateString">
            <summary>Sets the shim of DbMigrator.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of DbMigrator.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of DbMigrator.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._AutoMigrateb__1cMigrationOperation">
            <summary>Sets the shim of DbMigrator.&lt;AutoMigrate&gt;b__1c(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._AutoMigrateb__1dMigrationOperation">
            <summary>Sets the shim of DbMigrator.&lt;AutoMigrate&gt;b__1d(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._ExecuteOperationsb__25MigrationOperation">
            <summary>Sets the shim of DbMigrator.&lt;ExecuteOperations&gt;b__25(MigrationOperation o)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._ExecuteOperationsb__26MigrationStatementMigrationStatement">
            <summary>Sets the shim of DbMigrator.&lt;ExecuteOperations&gt;b__26(MigrationStatement m1, MigrationStatement m2)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._FillInForeignKeyOperationsb__34AddForeignKeyOperation">
            <summary>Sets the shim of DbMigrator.&lt;FillInForeignKeyOperations&gt;b__34(AddForeignKeyOperation fk)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._FillInForeignKeyOperationsb__36XElement">
            <summary>Sets the shim of DbMigrator.&lt;FillInForeignKeyOperations&gt;b__36(XElement es)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._GetEmptyModelb__3">
            <summary>Sets the shim of DbMigrator.&lt;GetEmptyModel&gt;b__3()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator._UpdateInternalb__e">
            <summary>Sets the shim of DbMigrator.&lt;UpdateInternal&gt;b__e()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of DbMigrator.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of DbMigrator.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.CheckLegacyCompatibilityAction">
            <summary>Sets the shim of DbMigrator.CheckLegacyCompatibility(Action onCompatible)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ConfigurationGet">
            <summary>Sets the shim of DbMigrator.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.CreateConnection">
            <summary>Sets the shim of DbMigrator.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.CreateDiscoveryQueryTrees">
            <summary>Sets the shim of DbMigrator.CreateDiscoveryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.DowngradeIEnumerableOfString">
            <summary>Sets the shim of DbMigrator.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.EnsureDatabaseExistsAction">
            <summary>Sets the shim of DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ExecuteOperationsStringXDocumentIEnumerableOfMigrationOperationIEnumerableOfMigrationOperationBooleanBoolean">
            <summary>Sets the shim of DbMigrator.ExecuteOperations(String migrationId, XDocument targetModel, IEnumerable`1&lt;MigrationOperation&gt; operations, IEnumerable`1&lt;MigrationOperation&gt; systemOperations, Boolean downgrading, Boolean auto)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of DbMigrator.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of DbMigrator.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ExecuteStatementsInternalIEnumerableOfMigrationStatementDbConnection">
            <summary>Sets the shim of DbMigrator.ExecuteStatementsInternal(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements, DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of DbMigrator.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetDatabaseMigrations">
            <summary>Sets the shim of DbMigrator.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetEmptyModel">
            <summary>Sets the shim of DbMigrator.GetEmptyModel()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetHistoryModelString">
            <summary>Sets the shim of DbMigrator.GetHistoryModel(String defaultSchema)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetHistorySchemas">
            <summary>Sets the shim of DbMigrator.GetHistorySchemas()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetLastDefaultSchemaString">
            <summary>Sets the shim of DbMigrator.GetLastDefaultSchema(String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetLastModelDbMigrationString">
            <summary>Sets the shim of DbMigrator.GetLastModel(DbMigration lastMigration, String currentMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetLocalMigrations">
            <summary>Sets the shim of DbMigrator.GetLocalMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetMigrationIdString">
            <summary>Sets the shim of DbMigrator.GetMigrationId(String migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.GetPendingMigrations">
            <summary>Sets the shim of DbMigrator.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.HistoryExists">
            <summary>Sets the shim of DbMigrator.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.IsModelOutOfDateXDocumentDbMigration">
            <summary>Sets the shim of DbMigrator.IsModelOutOfDate(XDocument model, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of DbMigrator.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ScaffoldInitialCreateString">
            <summary>Sets the shim of DbMigrator.ScaffoldInitialCreate(String namespace)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.ScaffoldStringStringBoolean">
            <summary>Sets the shim of DbMigrator.Scaffold(String migrationName, String namespace, Boolean ignoreChanges)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.SeedDatabase">
            <summary>Sets the shim of DbMigrator.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.SqlGeneratorGet">
            <summary>Sets the shim of DbMigrator.get_SqlGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.TargetDatabaseGet">
            <summary>Sets the shim of DbMigrator.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.UpdateInternalString">
            <summary>Sets the shim of DbMigrator.UpdateInternal(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.UpdateString">
            <summary>Sets the shim of DbMigrator.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of DbMigrator.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of DbMigrator.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances._GetEmptyModelb__3">
            <summary>Sets the shim of DbMigrator.&lt;GetEmptyModel&gt;b__3()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbMigrator.AllInstances._UpdateInternalb__e">
            <summary>Sets the shim of DbMigrator.&lt;UpdateInternal&gt;b__e()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions">
            <summary>Shim type of System.Data.Entity.Migrations.DbSetMigrationsExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.AddOrUpdateOf1IDbSetOfM0ExpressionOfFuncOfM0ObjectM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.IDbSet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0[]})">
            <summary>Sets the shim of DbSetMigrationsExtensions.AddOrUpdate(IDbSet`1&lt;!!0&gt; set, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; identifierExpression, !!0[] entities)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.AddOrUpdateOf1IDbSetOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.IDbSet{``0},``0[]})">
            <summary>Sets the shim of DbSetMigrationsExtensions.AddOrUpdate(IDbSet`1&lt;!!0&gt; set, !!0[] entities)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions._AddOrUpdateb__1Of1ExpressionBinaryExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.BinaryExpression,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of DbSetMigrationsExtensions.&lt;AddOrUpdate&gt;b__1(Expression current, BinaryExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.ShimDbSetMigrationsExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.StubDbMigration">
            <summary>Stub type of System.Data.Entity.Migrations.DbMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.Down">
            <summary>Sets the stub of DbMigration.Down()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigration.Down01">
            <summary>Sets the stub of DbMigration.Down()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.Equals(System.Object)">
            <summary>Sets the stub of DbMigration.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigration.EqualsObject">
            <summary>Sets the stub of DbMigration.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.GetHashCode">
            <summary>Sets the stub of DbMigration.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigration.GetHashCode01">
            <summary>Sets the stub of DbMigration.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.InitializeStub">
            <summary>Initializes a new instance of type StubDbMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.ToString">
            <summary>Sets the stub of DbMigration.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigration.ToString01">
            <summary>Sets the stub of DbMigration.ToString()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigration.Up">
            <summary>Sets the stub of DbMigration.Up()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigration.Up01">
            <summary>Sets the stub of DbMigration.Up()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration">
            <summary>Stub type of System.Data.Entity.Migrations.DbMigrationsConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubDbMigrationsConfiguration</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1">
            <summary>Stub type of System.Data.Entity.Migrations.DbMigrationsConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.Equals(System.Object)">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.EqualsObject">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.GetHashCode">
            <summary>Sets the stub of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.GetHashCode01">
            <summary>Sets the stub of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbMigrationsConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.Seed(`0)">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.SeedT0">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.ToString">
            <summary>Sets the stub of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.ToString01">
            <summary>Sets the stub of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrationsConfiguration`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Fakes.StubDbMigrator">
            <summary>Stub type of System.Data.Entity.Migrations.DbMigrator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrator.ConfigurationGet">
            <summary>Sets the stub of DbMigrator.get_Configuration()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetDatabaseMigrations">
            <summary>Sets the stub of DbMigrator.GetDatabaseMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetDatabaseMigrations01">
            <summary>Sets the stub of DbMigrator.GetDatabaseMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetLocalMigrations">
            <summary>Sets the stub of DbMigrator.GetLocalMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetLocalMigrations01">
            <summary>Sets the stub of DbMigrator.GetLocalMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetPendingMigrations">
            <summary>Sets the stub of DbMigrator.GetPendingMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrator.GetPendingMigrations01">
            <summary>Sets the stub of DbMigrator.GetPendingMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.InitializeStub">
            <summary>Initializes a new instance of type StubDbMigrator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Fakes.StubDbMigrator.Update(System.String)">
            <summary>Sets the stub of DbMigrator.Update(String targetMigration)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Fakes.StubDbMigrator.UpdateString">
            <summary>Sets the stub of DbMigrator.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrator.Configuration">
            <summary>Sets the stub of DbMigrator.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Fakes.StubDbMigrator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext">
            <summary>Shim type of System.Data.Entity.Migrations.History.HistoryContext</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.#ctor(System.Data.Entity.Migrations.History.HistoryContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.Bind(System.Data.Entity.Infrastructure.IDbModelCacheKeyProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.CacheKeyGet">
            <summary>Sets the shim of HistoryContext.get_CacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.Constructor">
            <summary>Sets the shim of HistoryContext.HistoryContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.ConstructorDbConnectionString">
            <summary>Sets the shim of HistoryContext.HistoryContext(DbConnection existingConnection, String defaultSchema)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.DefaultSchemaGet">
            <summary>Sets the shim of HistoryContext.get_DefaultSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.HistoryGet">
            <summary>Sets the shim of HistoryContext.get_History()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.HistorySetIDbSetOfHistoryRow">
            <summary>Sets the shim of HistoryContext.set_History(IDbSet`1&lt;HistoryRow&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of HistoryContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.StaticConstructor">
            <summary>Sets the shim of HistoryContext.HistoryContext()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext._cctorb__0DbConnectionString">
            <summary>Sets the shim of HistoryContext.&lt;.cctor&gt;b__0(DbConnection e, String d)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances.CacheKeyGet">
            <summary>Sets the shim of HistoryContext.get_CacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances.DefaultSchemaGet">
            <summary>Sets the shim of HistoryContext.get_DefaultSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances.HistoryGet">
            <summary>Sets the shim of HistoryContext.get_History()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances.HistorySetIDbSetOfHistoryRow">
            <summary>Sets the shim of HistoryContext.set_History(IDbSet`1&lt;HistoryRow&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of HistoryContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow">
            <summary>Shim type of System.Data.Entity.Migrations.History.HistoryRow</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.#ctor(System.Data.Entity.Migrations.History.HistoryRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.Constructor">
            <summary>Sets the shim of HistoryRow.HistoryRow()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ContextKeyGet">
            <summary>Sets the shim of HistoryRow.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ContextKeySetString">
            <summary>Sets the shim of HistoryRow.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.MigrationIdGet">
            <summary>Sets the shim of HistoryRow.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.MigrationIdSetString">
            <summary>Sets the shim of HistoryRow.set_MigrationId(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ModelGet">
            <summary>Sets the shim of HistoryRow.get_Model()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ModelSetByteArray">
            <summary>Sets the shim of HistoryRow.set_Model(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ProductVersionGet">
            <summary>Sets the shim of HistoryRow.get_ProductVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.ProductVersionSetString">
            <summary>Sets the shim of HistoryRow.set_ProductVersion(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ContextKeyGet">
            <summary>Sets the shim of HistoryRow.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ContextKeySetString">
            <summary>Sets the shim of HistoryRow.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.MigrationIdGet">
            <summary>Sets the shim of HistoryRow.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.MigrationIdSetString">
            <summary>Sets the shim of HistoryRow.set_MigrationId(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ModelGet">
            <summary>Sets the shim of HistoryRow.get_Model()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ModelSetByteArray">
            <summary>Sets the shim of HistoryRow.set_Model(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ProductVersionGet">
            <summary>Sets the shim of HistoryRow.get_ProductVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.ShimHistoryRow.AllInstances.ProductVersionSetString">
            <summary>Sets the shim of HistoryRow.set_ProductVersion(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext">
            <summary>Stub type of System.Data.Entity.Migrations.History.HistoryContext</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.#ctor(System.Data.Common.DbConnection,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.AttachBackingFieldToHistory">
            <summary>Attaches delegates to emulate StubHistoryContext.History as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.CacheKeyGet">
            <summary>Sets the stub of HistoryContext.get_CacheKey()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.HistoryGet">
            <summary>Sets the stub of HistoryContext.get_History()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.HistorySetIDbSetOfHistoryRow">
            <summary>Sets the stub of HistoryContext.set_History(IDbSet`1&lt;HistoryRow&gt; value)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.InitializeStub">
            <summary>Initializes a new instance of type StubHistoryContext</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of HistoryContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of HistoryContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.CacheKey">
            <summary>Sets the stub of HistoryContext.get_CacheKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.History">
            <summary>Sets the stub of HistoryContext.get_History()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow">
            <summary>Stub type of System.Data.Entity.Migrations.History.HistoryRow</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow.InitializeStub">
            <summary>Initializes a new instance of type StubHistoryRow</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.Fakes.StubHistoryRow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.#ctor(System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.Constructor">
            <summary>Sets the shim of AutomaticDataLossException.AutomaticDataLossException()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AutomaticDataLossException.AutomaticDataLossException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.ConstructorString">
            <summary>Sets the shim of AutomaticDataLossException.AutomaticDataLossException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.ConstructorStringException">
            <summary>Sets the shim of AutomaticDataLossException.AutomaticDataLossException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticDataLossException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.#ctor(System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.Constructor">
            <summary>Sets the shim of AutomaticMigrationsDisabledException.AutomaticMigrationsDisabledException()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AutomaticMigrationsDisabledException.AutomaticMigrationsDisabledException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.ConstructorString">
            <summary>Sets the shim of AutomaticMigrationsDisabledException.AutomaticMigrationsDisabledException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.ConstructorStringException">
            <summary>Sets the shim of AutomaticMigrationsDisabledException.AutomaticMigrationsDisabledException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimAutomaticMigrationsDisabledException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigrationsException</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.#ctor(System.Data.Entity.Migrations.Infrastructure.MigrationsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.Constructor">
            <summary>Sets the shim of MigrationsException.MigrationsException()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MigrationsException.MigrationsException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.ConstructorString">
            <summary>Sets the shim of MigrationsException.MigrationsException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.ConstructorStringException">
            <summary>Sets the shim of MigrationsException.MigrationsException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigrationsLogger</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.#ctor(System.Data.Entity.Migrations.Infrastructure.MigrationsLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.Constructor">
            <summary>Sets the shim of MigrationsLogger.MigrationsLogger()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.#ctor(System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.Constructor">
            <summary>Sets the shim of MigrationsPendingException.MigrationsPendingException()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MigrationsPendingException.MigrationsPendingException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.ConstructorString">
            <summary>Sets the shim of MigrationsPendingException.MigrationsPendingException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.ConstructorStringException">
            <summary>Sets the shim of MigrationsPendingException.MigrationsPendingException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigrationsPendingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigratorBase</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of MigratorBase.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of MigratorBase.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.ConfigurationGet">
            <summary>Sets the shim of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.ConstructorMigratorBase">
            <summary>Sets the shim of MigratorBase.MigratorBase(MigratorBase innerMigrator)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.CreateDiscoveryQueryTrees">
            <summary>Sets the shim of MigratorBase.CreateDiscoveryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.DowngradeIEnumerableOfString">
            <summary>Sets the shim of MigratorBase.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.EnsureDatabaseExistsAction">
            <summary>Sets the shim of MigratorBase.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of MigratorBase.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of MigratorBase.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of MigratorBase.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.GetDatabaseMigrations">
            <summary>Sets the shim of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.GetLocalMigrations">
            <summary>Sets the shim of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.GetMigrationIdString">
            <summary>Sets the shim of MigratorBase.GetMigrationId(String migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.GetPendingMigrations">
            <summary>Sets the shim of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.HistoryExists">
            <summary>Sets the shim of MigratorBase.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of MigratorBase.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.SeedDatabase">
            <summary>Sets the shim of MigratorBase.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.TargetDatabaseGet">
            <summary>Sets the shim of MigratorBase.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.Update">
            <summary>Sets the shim of MigratorBase.Update()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.UpdateString">
            <summary>Sets the shim of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigratorBase.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of MigratorBase.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of MigratorBase.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of MigratorBase.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.ConfigurationGet">
            <summary>Sets the shim of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.CreateDiscoveryQueryTrees">
            <summary>Sets the shim of MigratorBase.CreateDiscoveryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.DowngradeIEnumerableOfString">
            <summary>Sets the shim of MigratorBase.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.EnsureDatabaseExistsAction">
            <summary>Sets the shim of MigratorBase.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of MigratorBase.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of MigratorBase.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of MigratorBase.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.GetDatabaseMigrations">
            <summary>Sets the shim of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.GetLocalMigrations">
            <summary>Sets the shim of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.GetMigrationIdString">
            <summary>Sets the shim of MigratorBase.GetMigrationId(String migration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.GetPendingMigrations">
            <summary>Sets the shim of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.HistoryExists">
            <summary>Sets the shim of MigratorBase.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of MigratorBase.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.SeedDatabase">
            <summary>Sets the shim of MigratorBase.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.TargetDatabaseGet">
            <summary>Sets the shim of MigratorBase.get_TargetDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.Update">
            <summary>Sets the shim of MigratorBase.Update()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.UpdateString">
            <summary>Sets the shim of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigratorBase.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorBase.AllInstances.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of MigratorBase.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of MigratorLoggingDecorator.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of MigratorLoggingDecorator.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.ConstructorMigratorBaseMigrationsLogger">
            <summary>Sets the shim of MigratorLoggingDecorator.MigratorLoggingDecorator(MigratorBase innerMigrator, MigrationsLogger logger)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.DowngradeIEnumerableOfString">
            <summary>Sets the shim of MigratorLoggingDecorator.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of MigratorLoggingDecorator.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of MigratorLoggingDecorator.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.SeedDatabase">
            <summary>Sets the shim of MigratorLoggingDecorator.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigratorLoggingDecorator.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of MigratorLoggingDecorator.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator._ExecuteSqlb__0String">
            <summary>Sets the shim of MigratorLoggingDecorator.&lt;ExecuteSql&gt;b__0(String message)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.ApplyMigrationDbMigrationDbMigration">
            <summary>Sets the shim of MigratorLoggingDecorator.ApplyMigration(DbMigration migration, DbMigration lastMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.AutoMigrateStringXDocumentXDocumentBoolean">
            <summary>Sets the shim of MigratorLoggingDecorator.AutoMigrate(String migrationId, XDocument sourceModel, XDocument targetModel, Boolean downgrading)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.DowngradeIEnumerableOfString">
            <summary>Sets the shim of MigratorLoggingDecorator.Downgrade(IEnumerable`1&lt;String&gt; pendingMigrations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.ExecuteSqlDbTransactionMigrationStatement">
            <summary>Sets the shim of MigratorLoggingDecorator.ExecuteSql(DbTransaction transaction, MigrationStatement migrationStatement)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.RevertMigrationStringDbMigrationXDocument">
            <summary>Sets the shim of MigratorLoggingDecorator.RevertMigration(String migrationId, DbMigration migration, XDocument targetModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.SeedDatabase">
            <summary>Sets the shim of MigratorLoggingDecorator.SeedDatabase()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.UpgradeHistoryIEnumerableOfMigrationOperation">
            <summary>Sets the shim of MigratorLoggingDecorator.UpgradeHistory(IEnumerable`1&lt;MigrationOperation&gt; upgradeOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances.UpgradeIEnumerableOfStringStringString">
            <summary>Sets the shim of MigratorLoggingDecorator.Upgrade(IEnumerable`1&lt;String&gt; pendingMigrations, String targetMigrationId, String lastMigrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorLoggingDecorator.AllInstances._ExecuteSqlb__0String">
            <summary>Sets the shim of MigratorLoggingDecorator.&lt;ExecuteSql&gt;b__0(String message)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator">
            <summary>Shim type of System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.ConstructorMigratorBase">
            <summary>Sets the shim of MigratorScriptingDecorator.MigratorScriptingDecorator(MigratorBase innerMigrator)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.EnsureDatabaseExistsAction">
            <summary>Sets the shim of MigratorScriptingDecorator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of MigratorScriptingDecorator.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of MigratorScriptingDecorator.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.HistoryExists">
            <summary>Sets the shim of MigratorScriptingDecorator.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.ScriptUpdateStringString">
            <summary>Sets the shim of MigratorScriptingDecorator.ScriptUpdate(String sourceMigration, String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.SeedDatabase">
            <summary>Sets the shim of MigratorScriptingDecorator.SeedDatabase()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.EnsureDatabaseExistsAction">
            <summary>Sets the shim of MigratorScriptingDecorator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.ExecuteStatementsIEnumerableOfMigrationStatement">
            <summary>Sets the shim of MigratorScriptingDecorator.ExecuteStatements(IEnumerable`1&lt;MigrationStatement&gt; migrationStatements)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.GenerateStatementsIListOfMigrationOperationString">
            <summary>Sets the shim of MigratorScriptingDecorator.GenerateStatements(IList`1&lt;MigrationOperation&gt; operations, String migrationId)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.HistoryExists">
            <summary>Sets the shim of MigratorScriptingDecorator.HistoryExists()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.ScriptUpdateStringString">
            <summary>Sets the shim of MigratorScriptingDecorator.ScriptUpdate(String sourceMigration, String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.ShimMigratorScriptingDecorator.AllInstances.SeedDatabase">
            <summary>Sets the shim of MigratorScriptingDecorator.SeedDatabase()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIDbMigration">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.IDbMigration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIDbMigration.#ctor">
            <summary>Initializes a new instance of type StubIDbMigration</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIDbMigration.AddOperationMigrationOperation">
            <summary>Sets the stub of IDbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIDbMigration.ef::System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)">
            <summary>Sets the stub of IDbMigration.AddOperation(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.#ctor">
            <summary>Initializes a new instance of type StubIMigrationMetadata</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.IdGet">
            <summary>Sets the stub of IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.SourceGet">
            <summary>Sets the stub of IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.TargetGet">
            <summary>Sets the stub of IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.ef::System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id">
            <summary>Sets the stub of IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.ef::System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source">
            <summary>Sets the stub of IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubIMigrationMetadata.ef::System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target">
            <summary>Sets the stub of IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.MigrationsException</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMigrationsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMigrationsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationsException</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.MigrationsLogger</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.Info(System.String)">
            <summary>Sets the stub of MigrationsLogger.Info(String message)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.InfoString">
            <summary>Sets the stub of MigrationsLogger.Info(String message)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationsLogger</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.Verbose(System.String)">
            <summary>Sets the stub of MigrationsLogger.Verbose(String message)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.VerboseString">
            <summary>Sets the stub of MigrationsLogger.Verbose(String message)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.Warning(System.String)">
            <summary>Sets the stub of MigrationsLogger.Warning(String message)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.WarningString">
            <summary>Sets the stub of MigrationsLogger.Warning(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigrationsLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.MigratorBase</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.ConfigurationGet">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetDatabaseMigrations">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetDatabaseMigrations01">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetLocalMigrations">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetLocalMigrations01">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetPendingMigrations">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.GetPendingMigrations01">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.InitializeStub">
            <summary>Initializes a new instance of type StubMigratorBase</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.Update(System.String)">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.UpdateString">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.Configuration">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase,System.Data.Entity.Migrations.Infrastructure.MigrationsLogger)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.ConfigurationGet">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetDatabaseMigrations">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetDatabaseMigrations01">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetLocalMigrations">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetLocalMigrations01">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetPendingMigrations">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.GetPendingMigrations01">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.InitializeStub">
            <summary>Initializes a new instance of type StubMigratorLoggingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.Update(System.String)">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.UpdateString">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.Configuration">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorLoggingDecorator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator">
            <summary>Stub type of System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.ConfigurationGet">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetDatabaseMigrations">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetDatabaseMigrations01">
            <summary>Sets the stub of MigratorBase.GetDatabaseMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetLocalMigrations">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetLocalMigrations01">
            <summary>Sets the stub of MigratorBase.GetLocalMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetPendingMigrations">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.GetPendingMigrations01">
            <summary>Sets the stub of MigratorBase.GetPendingMigrations()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.InitializeStub">
            <summary>Initializes a new instance of type StubMigratorScriptingDecorator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.Update(System.String)">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.UpdateString">
            <summary>Sets the stub of MigratorBase.Update(String targetMigration)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.Configuration">
            <summary>Sets the stub of MigratorBase.get_Configuration()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.Fakes.StubMigratorScriptingDecorator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.AddColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.#ctor(System.Data.Entity.Migrations.Model.AddColumnOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.ColumnGet">
            <summary>Sets the shim of AddColumnOperation.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.ConstructorStringColumnModelObject">
            <summary>Sets the shim of AddColumnOperation.AddColumnOperation(String table, ColumnModel column, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.InverseGet">
            <summary>Sets the shim of AddColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of AddColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.TableGet">
            <summary>Sets the shim of AddColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.AllInstances.ColumnGet">
            <summary>Sets the shim of AddColumnOperation.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.AllInstances.InverseGet">
            <summary>Sets the shim of AddColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of AddColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddColumnOperation.AllInstances.TableGet">
            <summary>Sets the shim of AddColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.AddForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.CascadeDeleteGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_CascadeDelete()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.CascadeDeleteSetBoolean">
            <summary>Sets the shim of AddForeignKeyOperation.set_CascadeDelete(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.ConstructorObject">
            <summary>Sets the shim of AddForeignKeyOperation.AddForeignKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.CreateCreateIndexOperation">
            <summary>Sets the shim of AddForeignKeyOperation.CreateCreateIndexOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.InverseGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.PrincipalColumnsGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_PrincipalColumns()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.CascadeDeleteGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_CascadeDelete()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.CascadeDeleteSetBoolean">
            <summary>Sets the shim of AddForeignKeyOperation.set_CascadeDelete(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.CreateCreateIndexOperation">
            <summary>Sets the shim of AddForeignKeyOperation.CreateCreateIndexOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.InverseGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddForeignKeyOperation.AllInstances.PrincipalColumnsGet">
            <summary>Sets the shim of AddForeignKeyOperation.get_PrincipalColumns()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.ConstructorObject">
            <summary>Sets the shim of AddPrimaryKeyOperation.AddPrimaryKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.InverseGet">
            <summary>Sets the shim of AddPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.IsClusteredGet">
            <summary>Sets the shim of AddPrimaryKeyOperation.get_IsClustered()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.IsClusteredSetBoolean">
            <summary>Sets the shim of AddPrimaryKeyOperation.set_IsClustered(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.AllInstances.InverseGet">
            <summary>Sets the shim of AddPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.AllInstances.IsClusteredGet">
            <summary>Sets the shim of AddPrimaryKeyOperation.get_IsClustered()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAddPrimaryKeyOperation.AllInstances.IsClusteredSetBoolean">
            <summary>Sets the shim of AddPrimaryKeyOperation.set_IsClustered(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.AlterColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.#ctor(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.ColumnGet">
            <summary>Sets the shim of AlterColumnOperation.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.ConstructorStringColumnModelBooleanAlterColumnOperationObject">
            <summary>Sets the shim of AlterColumnOperation.AlterColumnOperation(String table, ColumnModel column, Boolean isDestructiveChange, AlterColumnOperation inverse, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.ConstructorStringColumnModelBooleanObject">
            <summary>Sets the shim of AlterColumnOperation.AlterColumnOperation(String table, ColumnModel column, Boolean isDestructiveChange, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.InverseGet">
            <summary>Sets the shim of AlterColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of AlterColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.TableGet">
            <summary>Sets the shim of AlterColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.AllInstances.ColumnGet">
            <summary>Sets the shim of AlterColumnOperation.get_Column()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.AllInstances.InverseGet">
            <summary>Sets the shim of AlterColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of AlterColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterColumnOperation.AllInstances.TableGet">
            <summary>Sets the shim of AlterColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.AlterProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.ConstructorStringStringObject">
            <summary>Sets the shim of AlterProcedureOperation.AlterProcedureOperation(String name, String bodySql, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.InverseGet">
            <summary>Sets the shim of AlterProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimAlterProcedureOperation.AllInstances.InverseGet">
            <summary>Sets the shim of AlterProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel">
            <summary>Shim type of System.Data.Entity.Migrations.Model.ColumnModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.#ctor(System.Data.Entity.Migrations.Model.ColumnModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ApiPropertyInfoGet">
            <summary>Sets the shim of ColumnModel.get_ApiPropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ApiPropertyInfoSetPropertyInfo">
            <summary>Sets the shim of ColumnModel.set_ApiPropertyInfo(PropertyInfo value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ClrDefaultValueGet">
            <summary>Sets the shim of ColumnModel.get_ClrDefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ClrTypeGet">
            <summary>Sets the shim of ColumnModel.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ConstructorPrimitiveTypeKind">
            <summary>Sets the shim of ColumnModel.ColumnModel(PrimitiveTypeKind type)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.ConstructorPrimitiveTypeKindTypeUsage">
            <summary>Sets the shim of ColumnModel.ColumnModel(PrimitiveTypeKind type, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.CreateDefaultValue">
            <summary>Sets the shim of ColumnModel.CreateDefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsIdentityGet">
            <summary>Sets the shim of ColumnModel.get_IsIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsIdentitySetBoolean">
            <summary>Sets the shim of ColumnModel.set_IsIdentity(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsNarrowerThanColumnModelDbProviderManifest">
            <summary>Sets the shim of ColumnModel.IsNarrowerThan(ColumnModel column, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsNarrowerThanTypeUsageTypeUsage">
            <summary>Sets the shim of ColumnModel.IsNarrowerThan(TypeUsage typeUsage, TypeUsage other)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsNullableGet">
            <summary>Sets the shim of ColumnModel.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsNullableSetNullableOfBoolean">
            <summary>Sets the shim of ColumnModel.set_IsNullable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsTimestampGet">
            <summary>Sets the shim of ColumnModel.get_IsTimestamp()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.IsTimestampSetBoolean">
            <summary>Sets the shim of ColumnModel.set_IsTimestamp(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.StaticConstructor">
            <summary>Sets the shim of ColumnModel.ColumnModel()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.ApiPropertyInfoGet">
            <summary>Sets the shim of ColumnModel.get_ApiPropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.ApiPropertyInfoSetPropertyInfo">
            <summary>Sets the shim of ColumnModel.set_ApiPropertyInfo(PropertyInfo value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.ClrDefaultValueGet">
            <summary>Sets the shim of ColumnModel.get_ClrDefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.ClrTypeGet">
            <summary>Sets the shim of ColumnModel.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.CreateDefaultValue">
            <summary>Sets the shim of ColumnModel.CreateDefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsIdentityGet">
            <summary>Sets the shim of ColumnModel.get_IsIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsIdentitySetBoolean">
            <summary>Sets the shim of ColumnModel.set_IsIdentity(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsNarrowerThanColumnModelDbProviderManifest">
            <summary>Sets the shim of ColumnModel.IsNarrowerThan(ColumnModel column, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsNullableGet">
            <summary>Sets the shim of ColumnModel.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsNullableSetNullableOfBoolean">
            <summary>Sets the shim of ColumnModel.set_IsNullable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsTimestampGet">
            <summary>Sets the shim of ColumnModel.get_IsTimestamp()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimColumnModel.AllInstances.IsTimestampSetBoolean">
            <summary>Sets the shim of ColumnModel.set_IsTimestamp(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.CreateIndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.#ctor(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.ConstructorObject">
            <summary>Sets the shim of CreateIndexOperation.CreateIndexOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.InverseGet">
            <summary>Sets the shim of CreateIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.IsClusteredGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsClustered()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.IsClusteredSetBoolean">
            <summary>Sets the shim of CreateIndexOperation.set_IsClustered(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.IsUniqueGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsUnique()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.IsUniqueSetBoolean">
            <summary>Sets the shim of CreateIndexOperation.set_IsUnique(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.InverseGet">
            <summary>Sets the shim of CreateIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.IsClusteredGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsClustered()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.IsClusteredSetBoolean">
            <summary>Sets the shim of CreateIndexOperation.set_IsClustered(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.IsUniqueGet">
            <summary>Sets the shim of CreateIndexOperation.get_IsUnique()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateIndexOperation.AllInstances.IsUniqueSetBoolean">
            <summary>Sets the shim of CreateIndexOperation.set_IsUnique(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.CreateProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.ConstructorStringStringObject">
            <summary>Sets the shim of CreateProcedureOperation.CreateProcedureOperation(String name, String bodySql, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.InverseGet">
            <summary>Sets the shim of CreateProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateProcedureOperation.AllInstances.InverseGet">
            <summary>Sets the shim of CreateProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.CreateTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.#ctor(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.ColumnsGet">
            <summary>Sets the shim of CreateTableOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.ConstructorStringObject">
            <summary>Sets the shim of CreateTableOperation.CreateTableOperation(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.InverseGet">
            <summary>Sets the shim of CreateTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of CreateTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.NameGet">
            <summary>Sets the shim of CreateTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.PrimaryKeyGet">
            <summary>Sets the shim of CreateTableOperation.get_PrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.PrimaryKeySetAddPrimaryKeyOperation">
            <summary>Sets the shim of CreateTableOperation.set_PrimaryKey(AddPrimaryKeyOperation value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.ColumnsGet">
            <summary>Sets the shim of CreateTableOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.InverseGet">
            <summary>Sets the shim of CreateTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of CreateTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.NameGet">
            <summary>Sets the shim of CreateTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.PrimaryKeyGet">
            <summary>Sets the shim of CreateTableOperation.get_PrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimCreateTableOperation.AllInstances.PrimaryKeySetAddPrimaryKeyOperation">
            <summary>Sets the shim of CreateTableOperation.set_PrimaryKey(AddPrimaryKeyOperation value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.#ctor(System.Data.Entity.Migrations.Model.DropColumnOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.ConstructorStringStringAddColumnOperationObject">
            <summary>Sets the shim of DropColumnOperation.DropColumnOperation(String table, String name, AddColumnOperation inverse, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.ConstructorStringStringObject">
            <summary>Sets the shim of DropColumnOperation.DropColumnOperation(String table, String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.InverseGet">
            <summary>Sets the shim of DropColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of DropColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.NameGet">
            <summary>Sets the shim of DropColumnOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.TableGet">
            <summary>Sets the shim of DropColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of DropColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.AllInstances.NameGet">
            <summary>Sets the shim of DropColumnOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropColumnOperation.AllInstances.TableGet">
            <summary>Sets the shim of DropColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.ConstructorAddForeignKeyOperationObject">
            <summary>Sets the shim of DropForeignKeyOperation.DropForeignKeyOperation(AddForeignKeyOperation inverse, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.ConstructorObject">
            <summary>Sets the shim of DropForeignKeyOperation.DropForeignKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.CreateDropIndexOperation">
            <summary>Sets the shim of DropForeignKeyOperation.CreateDropIndexOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.InverseGet">
            <summary>Sets the shim of DropForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of DropForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.AllInstances.CreateDropIndexOperation">
            <summary>Sets the shim of DropForeignKeyOperation.CreateDropIndexOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropForeignKeyOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of DropForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropIndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.#ctor(System.Data.Entity.Migrations.Model.DropIndexOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.ConstructorCreateIndexOperationObject">
            <summary>Sets the shim of DropIndexOperation.DropIndexOperation(CreateIndexOperation inverse, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.ConstructorObject">
            <summary>Sets the shim of DropIndexOperation.DropIndexOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.InverseGet">
            <summary>Sets the shim of DropIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of DropIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropIndexOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of DropIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.#ctor(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.ConstructorObject">
            <summary>Sets the shim of DropPrimaryKeyOperation.DropPrimaryKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.CreateTableOperationGet">
            <summary>Sets the shim of DropPrimaryKeyOperation.get_CreateTableOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.CreateTableOperationSetCreateTableOperation">
            <summary>Sets the shim of DropPrimaryKeyOperation.set_CreateTableOperation(CreateTableOperation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.InverseGet">
            <summary>Sets the shim of DropPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.AllInstances.CreateTableOperationGet">
            <summary>Sets the shim of DropPrimaryKeyOperation.get_CreateTableOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.AllInstances.CreateTableOperationSetCreateTableOperation">
            <summary>Sets the shim of DropPrimaryKeyOperation.set_CreateTableOperation(CreateTableOperation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropPrimaryKeyOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.ConstructorStringObject">
            <summary>Sets the shim of DropProcedureOperation.DropProcedureOperation(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.InverseGet">
            <summary>Sets the shim of DropProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of DropProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.NameGet">
            <summary>Sets the shim of DropProcedureOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of DropProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropProcedureOperation.AllInstances.NameGet">
            <summary>Sets the shim of DropProcedureOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.DropTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.#ctor(System.Data.Entity.Migrations.Model.DropTableOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.ConstructorStringCreateTableOperationObject">
            <summary>Sets the shim of DropTableOperation.DropTableOperation(String name, CreateTableOperation inverse, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.ConstructorStringObject">
            <summary>Sets the shim of DropTableOperation.DropTableOperation(String name, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.InverseGet">
            <summary>Sets the shim of DropTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of DropTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.NameGet">
            <summary>Sets the shim of DropTableOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.AllInstances.InverseGet">
            <summary>Sets the shim of DropTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of DropTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimDropTableOperation.AllInstances.NameGet">
            <summary>Sets the shim of DropTableOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.ForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.ForeignKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.ConstructorObject">
            <summary>Sets the shim of ForeignKeyOperation.ForeignKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.DefaultNameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.DependentColumnsGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DependentColumns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.DependentTableGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DependentTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.DependentTableSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_DependentTable(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.HasDefaultNameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.NameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.NameSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.PrincipalTableGet">
            <summary>Sets the shim of ForeignKeyOperation.get_PrincipalTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.PrincipalTableSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_PrincipalTable(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.DefaultNameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.DependentColumnsGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DependentColumns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.DependentTableGet">
            <summary>Sets the shim of ForeignKeyOperation.get_DependentTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.DependentTableSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_DependentTable(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.HasDefaultNameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.NameGet">
            <summary>Sets the shim of ForeignKeyOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.NameSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.PrincipalTableGet">
            <summary>Sets the shim of ForeignKeyOperation.get_PrincipalTable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimForeignKeyOperation.AllInstances.PrincipalTableSetString">
            <summary>Sets the shim of ForeignKeyOperation.set_PrincipalTable(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.HistoryOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.#ctor(System.Data.Entity.Migrations.Model.HistoryOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.CommandTreesGet">
            <summary>Sets the shim of HistoryOperation.get_CommandTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.ConstructorIListOfDbModificationCommandTreeObject">
            <summary>Sets the shim of HistoryOperation.HistoryOperation(IList`1&lt;DbModificationCommandTree&gt; commandTrees, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of HistoryOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.AllInstances.CommandTreesGet">
            <summary>Sets the shim of HistoryOperation.get_CommandTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimHistoryOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of HistoryOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.IndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.#ctor(System.Data.Entity.Migrations.Model.IndexOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.ColumnsGet">
            <summary>Sets the shim of IndexOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.ConstructorObject">
            <summary>Sets the shim of IndexOperation.IndexOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.DefaultNameGet">
            <summary>Sets the shim of IndexOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.HasDefaultNameGet">
            <summary>Sets the shim of IndexOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.NameGet">
            <summary>Sets the shim of IndexOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.NameSetString">
            <summary>Sets the shim of IndexOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.TableGet">
            <summary>Sets the shim of IndexOperation.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.TableSetString">
            <summary>Sets the shim of IndexOperation.set_Table(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.ColumnsGet">
            <summary>Sets the shim of IndexOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.DefaultNameGet">
            <summary>Sets the shim of IndexOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.HasDefaultNameGet">
            <summary>Sets the shim of IndexOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.NameGet">
            <summary>Sets the shim of IndexOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.NameSetString">
            <summary>Sets the shim of IndexOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.TableGet">
            <summary>Sets the shim of IndexOperation.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimIndexOperation.AllInstances.TableSetString">
            <summary>Sets the shim of IndexOperation.set_Table(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.MigrationOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.#ctor(System.Data.Entity.Migrations.Model.MigrationOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.AnonymousArgumentsGet">
            <summary>Sets the shim of MigrationOperation.get_AnonymousArguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.ConstructorObject">
            <summary>Sets the shim of MigrationOperation.MigrationOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.InverseGet">
            <summary>Sets the shim of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.AllInstances.AnonymousArgumentsGet">
            <summary>Sets the shim of MigrationOperation.get_AnonymousArguments()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMigrationOperation.AllInstances.InverseGet">
            <summary>Sets the shim of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.MoveProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.ConstructorStringStringObject">
            <summary>Sets the shim of MoveProcedureOperation.MoveProcedureOperation(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.InverseGet">
            <summary>Sets the shim of MoveProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of MoveProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.NameGet">
            <summary>Sets the shim of MoveProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.NewSchemaGet">
            <summary>Sets the shim of MoveProcedureOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.AllInstances.InverseGet">
            <summary>Sets the shim of MoveProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of MoveProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.AllInstances.NameGet">
            <summary>Sets the shim of MoveProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveProcedureOperation.AllInstances.NewSchemaGet">
            <summary>Sets the shim of MoveProcedureOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.MoveTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.#ctor(System.Data.Entity.Migrations.Model.MoveTableOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.ConstructorStringStringObject">
            <summary>Sets the shim of MoveTableOperation.MoveTableOperation(String name, String newSchema, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.ContextKeyGet">
            <summary>Sets the shim of MoveTableOperation.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.ContextKeySetString">
            <summary>Sets the shim of MoveTableOperation.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.CreateTableOperationGet">
            <summary>Sets the shim of MoveTableOperation.get_CreateTableOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.CreateTableOperationSetCreateTableOperation">
            <summary>Sets the shim of MoveTableOperation.set_CreateTableOperation(CreateTableOperation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.InverseGet">
            <summary>Sets the shim of MoveTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of MoveTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.IsSystemGet">
            <summary>Sets the shim of MoveTableOperation.get_IsSystem()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.IsSystemSetBoolean">
            <summary>Sets the shim of MoveTableOperation.set_IsSystem(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.NameGet">
            <summary>Sets the shim of MoveTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.NewSchemaGet">
            <summary>Sets the shim of MoveTableOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.ContextKeyGet">
            <summary>Sets the shim of MoveTableOperation.get_ContextKey()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.ContextKeySetString">
            <summary>Sets the shim of MoveTableOperation.set_ContextKey(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.CreateTableOperationGet">
            <summary>Sets the shim of MoveTableOperation.get_CreateTableOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.CreateTableOperationSetCreateTableOperation">
            <summary>Sets the shim of MoveTableOperation.set_CreateTableOperation(CreateTableOperation value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.InverseGet">
            <summary>Sets the shim of MoveTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of MoveTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.IsSystemGet">
            <summary>Sets the shim of MoveTableOperation.get_IsSystem()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.IsSystemSetBoolean">
            <summary>Sets the shim of MoveTableOperation.set_IsSystem(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.NameGet">
            <summary>Sets the shim of MoveTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimMoveTableOperation.AllInstances.NewSchemaGet">
            <summary>Sets the shim of MoveTableOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.NotSupportedOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.#ctor(System.Data.Entity.Migrations.Model.NotSupportedOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.Constructor">
            <summary>Sets the shim of NotSupportedOperation.NotSupportedOperation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of NotSupportedOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.StaticConstructor">
            <summary>Sets the shim of NotSupportedOperation.NotSupportedOperation()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimNotSupportedOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of NotSupportedOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel">
            <summary>Shim type of System.Data.Entity.Migrations.Model.ParameterModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.#ctor(System.Data.Entity.Migrations.Model.ParameterModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.ConstructorPrimitiveTypeKind">
            <summary>Sets the shim of ParameterModel.ParameterModel(PrimitiveTypeKind type)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.ConstructorPrimitiveTypeKindTypeUsage">
            <summary>Sets the shim of ParameterModel.ParameterModel(PrimitiveTypeKind type, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.IsOutParameterGet">
            <summary>Sets the shim of ParameterModel.get_IsOutParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.IsOutParameterSetBoolean">
            <summary>Sets the shim of ParameterModel.set_IsOutParameter(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.AllInstances.IsOutParameterGet">
            <summary>Sets the shim of ParameterModel.get_IsOutParameter()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimParameterModel.AllInstances.IsOutParameterSetBoolean">
            <summary>Sets the shim of ParameterModel.set_IsOutParameter(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.PrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.#ctor(System.Data.Entity.Migrations.Model.PrimaryKeyOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.ColumnsGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.ConstructorObject">
            <summary>Sets the shim of PrimaryKeyOperation.PrimaryKeyOperation(Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.DefaultNameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.HasDefaultNameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.NameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.NameSetString">
            <summary>Sets the shim of PrimaryKeyOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.TableGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.TableSetString">
            <summary>Sets the shim of PrimaryKeyOperation.set_Table(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.ColumnsGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.DefaultNameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_DefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.HasDefaultNameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_HasDefaultName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.NameGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.NameSetString">
            <summary>Sets the shim of PrimaryKeyOperation.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.TableGet">
            <summary>Sets the shim of PrimaryKeyOperation.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPrimaryKeyOperation.AllInstances.TableSetString">
            <summary>Sets the shim of PrimaryKeyOperation.set_Table(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.ProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.ProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.BodySqlGet">
            <summary>Sets the shim of ProcedureOperation.get_BodySql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.ConstructorStringStringObject">
            <summary>Sets the shim of ProcedureOperation.ProcedureOperation(String name, String bodySql, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.NameGet">
            <summary>Sets the shim of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.ParametersGet">
            <summary>Sets the shim of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.AllInstances.BodySqlGet">
            <summary>Sets the shim of ProcedureOperation.get_BodySql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.AllInstances.NameGet">
            <summary>Sets the shim of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimProcedureOperation.AllInstances.ParametersGet">
            <summary>Sets the shim of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel">
            <summary>Shim type of System.Data.Entity.Migrations.Model.PropertyModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.#ctor(System.Data.Entity.Migrations.Model.PropertyModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.BuildTypeUsage">
            <summary>Sets the shim of PropertyModel.BuildTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.ConstructorPrimitiveTypeKindTypeUsage">
            <summary>Sets the shim of PropertyModel.PropertyModel(PrimitiveTypeKind type, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.DefaultValueGet">
            <summary>Sets the shim of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.DefaultValueSetObject">
            <summary>Sets the shim of PropertyModel.set_DefaultValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.DefaultValueSqlGet">
            <summary>Sets the shim of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.DefaultValueSqlSetString">
            <summary>Sets the shim of PropertyModel.set_DefaultValueSql(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.IsFixedLengthGet">
            <summary>Sets the shim of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the shim of PropertyModel.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.IsUnicodeGet">
            <summary>Sets the shim of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the shim of PropertyModel.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.MaxLengthGet">
            <summary>Sets the shim of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.MaxLengthSetNullableOfInt32">
            <summary>Sets the shim of PropertyModel.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.NameGet">
            <summary>Sets the shim of PropertyModel.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.NameSetString">
            <summary>Sets the shim of PropertyModel.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.PrecisionGet">
            <summary>Sets the shim of PropertyModel.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.PrecisionSetNullableOfByte">
            <summary>Sets the shim of PropertyModel.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.ScaleGet">
            <summary>Sets the shim of PropertyModel.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.ScaleSetNullableOfByte">
            <summary>Sets the shim of PropertyModel.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.StoreTypeGet">
            <summary>Sets the shim of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.StoreTypeSetString">
            <summary>Sets the shim of PropertyModel.set_StoreType(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.TypeGet">
            <summary>Sets the shim of PropertyModel.get_Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.TypeUsageGet">
            <summary>Sets the shim of PropertyModel.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.BuildTypeUsage">
            <summary>Sets the shim of PropertyModel.BuildTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.DefaultValueGet">
            <summary>Sets the shim of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.DefaultValueSetObject">
            <summary>Sets the shim of PropertyModel.set_DefaultValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.DefaultValueSqlGet">
            <summary>Sets the shim of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.DefaultValueSqlSetString">
            <summary>Sets the shim of PropertyModel.set_DefaultValueSql(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.IsFixedLengthGet">
            <summary>Sets the shim of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the shim of PropertyModel.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.IsUnicodeGet">
            <summary>Sets the shim of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the shim of PropertyModel.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.MaxLengthGet">
            <summary>Sets the shim of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.MaxLengthSetNullableOfInt32">
            <summary>Sets the shim of PropertyModel.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.NameGet">
            <summary>Sets the shim of PropertyModel.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.NameSetString">
            <summary>Sets the shim of PropertyModel.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.PrecisionGet">
            <summary>Sets the shim of PropertyModel.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.PrecisionSetNullableOfByte">
            <summary>Sets the shim of PropertyModel.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.ScaleGet">
            <summary>Sets the shim of PropertyModel.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.ScaleSetNullableOfByte">
            <summary>Sets the shim of PropertyModel.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.StoreTypeGet">
            <summary>Sets the shim of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.StoreTypeSetString">
            <summary>Sets the shim of PropertyModel.set_StoreType(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.TypeGet">
            <summary>Sets the shim of PropertyModel.get_Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimPropertyModel.AllInstances.TypeUsageGet">
            <summary>Sets the shim of PropertyModel.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.RenameColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.#ctor(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.ConstructorStringStringStringObject">
            <summary>Sets the shim of RenameColumnOperation.RenameColumnOperation(String table, String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.InverseGet">
            <summary>Sets the shim of RenameColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.NameGet">
            <summary>Sets the shim of RenameColumnOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.NewNameGet">
            <summary>Sets the shim of RenameColumnOperation.get_NewName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.NewNameSetString">
            <summary>Sets the shim of RenameColumnOperation.set_NewName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.TableGet">
            <summary>Sets the shim of RenameColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.InverseGet">
            <summary>Sets the shim of RenameColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.NameGet">
            <summary>Sets the shim of RenameColumnOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.NewNameGet">
            <summary>Sets the shim of RenameColumnOperation.get_NewName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.NewNameSetString">
            <summary>Sets the shim of RenameColumnOperation.set_NewName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameColumnOperation.AllInstances.TableGet">
            <summary>Sets the shim of RenameColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.RenameProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.#ctor(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.ConstructorStringStringObject">
            <summary>Sets the shim of RenameProcedureOperation.RenameProcedureOperation(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.InverseGet">
            <summary>Sets the shim of RenameProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.NameGet">
            <summary>Sets the shim of RenameProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.NewNameGet">
            <summary>Sets the shim of RenameProcedureOperation.get_NewName()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.AllInstances.InverseGet">
            <summary>Sets the shim of RenameProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.AllInstances.NameGet">
            <summary>Sets the shim of RenameProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameProcedureOperation.AllInstances.NewNameGet">
            <summary>Sets the shim of RenameProcedureOperation.get_NewName()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.RenameTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.#ctor(System.Data.Entity.Migrations.Model.RenameTableOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.ConstructorStringStringObject">
            <summary>Sets the shim of RenameTableOperation.RenameTableOperation(String name, String newName, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.InverseGet">
            <summary>Sets the shim of RenameTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.NameGet">
            <summary>Sets the shim of RenameTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.NewNameGet">
            <summary>Sets the shim of RenameTableOperation.get_NewName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.NewNameSetString">
            <summary>Sets the shim of RenameTableOperation.set_NewName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances.InverseGet">
            <summary>Sets the shim of RenameTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of RenameTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances.NameGet">
            <summary>Sets the shim of RenameTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances.NewNameGet">
            <summary>Sets the shim of RenameTableOperation.get_NewName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimRenameTableOperation.AllInstances.NewNameSetString">
            <summary>Sets the shim of RenameTableOperation.set_NewName(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.SqlOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.#ctor(System.Data.Entity.Migrations.Model.SqlOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.ConstructorStringObject">
            <summary>Sets the shim of SqlOperation.SqlOperation(String sql, Object anonymousArguments)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of SqlOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.SqlGet">
            <summary>Sets the shim of SqlOperation.get_Sql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.SuppressTransactionGet">
            <summary>Sets the shim of SqlOperation.get_SuppressTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.SuppressTransactionSetBoolean">
            <summary>Sets the shim of SqlOperation.set_SuppressTransaction(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of SqlOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.AllInstances.SqlGet">
            <summary>Sets the shim of SqlOperation.get_Sql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.AllInstances.SuppressTransactionGet">
            <summary>Sets the shim of SqlOperation.get_SuppressTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimSqlOperation.AllInstances.SuppressTransactionSetBoolean">
            <summary>Sets the shim of SqlOperation.set_SuppressTransaction(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation">
            <summary>Shim type of System.Data.Entity.Migrations.Model.UpdateDatabaseOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.#ctor(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AddMigrationStringIListOfMigrationOperation">
            <summary>Sets the shim of UpdateDatabaseOperation.AddMigration(String migrationId, IList`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ConstructorIListOfDbQueryCommandTree">
            <summary>Sets the shim of UpdateDatabaseOperation.UpdateDatabaseOperation(IList`1&lt;DbQueryCommandTree&gt; historyQueryTrees)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.HistoryQueryTreesGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_HistoryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.IsDestructiveChangeGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.MigrationsGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_Migrations()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AllInstances.AddMigrationStringIListOfMigrationOperation">
            <summary>Sets the shim of UpdateDatabaseOperation.AddMigration(String migrationId, IList`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AllInstances.HistoryQueryTreesGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_HistoryQueryTrees()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AllInstances.IsDestructiveChangeGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.AllInstances.MigrationsGet">
            <summary>Sets the shim of UpdateDatabaseOperation.get_Migrations()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration">
            <summary>Shim type of System.Data.Entity.Migrations.Model.UpdateDatabaseOperation+Migration</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.#ctor(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.Migration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.ConstructorStringIListOfMigrationOperation">
            <summary>Sets the shim of Migration.Migration(String migrationId, IList`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.MigrationIdGet">
            <summary>Sets the shim of Migration.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.OperationsGet">
            <summary>Sets the shim of Migration.get_Operations()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.AllInstances.MigrationIdGet">
            <summary>Sets the shim of Migration.get_MigrationId()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.ShimUpdateDatabaseOperation.ShimMigration.AllInstances.OperationsGet">
            <summary>Sets the shim of Migration.get_Operations()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.AddColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.InitializeStub">
            <summary>Initializes a new instance of type StubAddColumnOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.InverseGet">
            <summary>Sets the stub of AddColumnOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of AddColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.Inverse">
            <summary>Sets the stub of AddColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddColumnOperation.IsDestructiveChange">
            <summary>Sets the stub of AddColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.AddForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.CreateCreateIndexOperation">
            <summary>Sets the stub of AddForeignKeyOperation.CreateCreateIndexOperation()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.CreateCreateIndexOperation01">
            <summary>Sets the stub of AddForeignKeyOperation.CreateCreateIndexOperation()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubAddForeignKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.InverseGet">
            <summary>Sets the stub of AddForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of AddForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.Inverse">
            <summary>Sets the stub of AddForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddForeignKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of AddForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubAddPrimaryKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.InverseGet">
            <summary>Sets the stub of AddPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.Inverse">
            <summary>Sets the stub of AddPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAddPrimaryKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.AlterColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.InitializeStub">
            <summary>Initializes a new instance of type StubAlterColumnOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.InverseGet">
            <summary>Sets the stub of AlterColumnOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of AlterColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.Inverse">
            <summary>Sets the stub of AlterColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterColumnOperation.IsDestructiveChange">
            <summary>Sets the stub of AlterColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.AlterProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubAlterProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.InverseGet">
            <summary>Sets the stub of AlterProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.NameGet">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.ParametersGet">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.Inverse">
            <summary>Sets the stub of AlterProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.Name">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubAlterProcedureOperation.Parameters">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel">
            <summary>Stub type of System.Data.Entity.Migrations.Model.ColumnModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToDefaultValue">
            <summary>Attaches delegates to emulate StubColumnModel.DefaultValue as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToDefaultValueSql">
            <summary>Attaches delegates to emulate StubColumnModel.DefaultValueSql as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToIsFixedLength">
            <summary>Attaches delegates to emulate StubColumnModel.IsFixedLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToIsIdentity">
            <summary>Attaches delegates to emulate StubColumnModel.IsIdentity as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToIsNullable">
            <summary>Attaches delegates to emulate StubColumnModel.IsNullable as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToIsTimestamp">
            <summary>Attaches delegates to emulate StubColumnModel.IsTimestamp as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToIsUnicode">
            <summary>Attaches delegates to emulate StubColumnModel.IsUnicode as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToMaxLength">
            <summary>Attaches delegates to emulate StubColumnModel.MaxLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubColumnModel.Name as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToPrecision">
            <summary>Attaches delegates to emulate StubColumnModel.Precision as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToScale">
            <summary>Attaches delegates to emulate StubColumnModel.Scale as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.AttachBackingFieldToStoreType">
            <summary>Attaches delegates to emulate StubColumnModel.StoreType as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ClrDefaultValueGet">
            <summary>Sets the stub of ColumnModel.get_ClrDefaultValue()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ClrTypeGet">
            <summary>Sets the stub of ColumnModel.get_ClrType()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValueGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValueSetObject">
            <summary>Sets the stub of PropertyModel.set_DefaultValue(Object value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValueSqlGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValueSqlSetString">
            <summary>Sets the stub of PropertyModel.set_DefaultValueSql(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.InitializeStub">
            <summary>Initializes a new instance of type StubColumnModel</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsFixedLengthGet">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsIdentityGet">
            <summary>Sets the stub of ColumnModel.get_IsIdentity()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsIdentitySetBoolean">
            <summary>Sets the stub of ColumnModel.set_IsIdentity(Boolean value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsNullableGet">
            <summary>Sets the stub of ColumnModel.get_IsNullable()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsNullableSetNullableOfBoolean">
            <summary>Sets the stub of ColumnModel.set_IsNullable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsTimestampGet">
            <summary>Sets the stub of ColumnModel.get_IsTimestamp()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsTimestampSetBoolean">
            <summary>Sets the stub of ColumnModel.set_IsTimestamp(Boolean value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsUnicodeGet">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.MaxLengthGet">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.MaxLengthSetNullableOfInt32">
            <summary>Sets the stub of PropertyModel.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.NameGet">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.NameSetString">
            <summary>Sets the stub of PropertyModel.set_Name(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.PrecisionGet">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.PrecisionSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ScaleGet">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ScaleSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.StoreTypeGet">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.StoreTypeSetString">
            <summary>Sets the stub of PropertyModel.set_StoreType(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.TypeGet">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ClrDefaultValue">
            <summary>Sets the stub of ColumnModel.get_ClrDefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.ClrType">
            <summary>Sets the stub of ColumnModel.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValue">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.DefaultValueSql">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsFixedLength">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsIdentity">
            <summary>Sets the stub of ColumnModel.get_IsIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsNullable">
            <summary>Sets the stub of ColumnModel.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsTimestamp">
            <summary>Sets the stub of ColumnModel.get_IsTimestamp()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.IsUnicode">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.MaxLength">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.Name">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.Precision">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.Scale">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.StoreType">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubColumnModel.Type">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.CreateIndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.InitializeStub">
            <summary>Initializes a new instance of type StubCreateIndexOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.InverseGet">
            <summary>Sets the stub of CreateIndexOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of CreateIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.Inverse">
            <summary>Sets the stub of CreateIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateIndexOperation.IsDestructiveChange">
            <summary>Sets the stub of CreateIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.CreateProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubCreateProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.InverseGet">
            <summary>Sets the stub of CreateProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.NameGet">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.ParametersGet">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.Inverse">
            <summary>Sets the stub of CreateProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.Name">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateProcedureOperation.Parameters">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.CreateTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.ColumnsGet">
            <summary>Sets the stub of CreateTableOperation.get_Columns()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.InitializeStub">
            <summary>Initializes a new instance of type StubCreateTableOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.InverseGet">
            <summary>Sets the stub of CreateTableOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of CreateTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.NameGet">
            <summary>Sets the stub of CreateTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.Columns">
            <summary>Sets the stub of CreateTableOperation.get_Columns()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.Inverse">
            <summary>Sets the stub of CreateTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.IsDestructiveChange">
            <summary>Sets the stub of CreateTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubCreateTableOperation.Name">
            <summary>Sets the stub of CreateTableOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.#ctor(System.String,System.String,System.Data.Entity.Migrations.Model.AddColumnOperation,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropColumnOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.InverseGet">
            <summary>Sets the stub of DropColumnOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of DropColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.Inverse">
            <summary>Sets the stub of DropColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropColumnOperation.IsDestructiveChange">
            <summary>Sets the stub of DropColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.CreateDropIndexOperation">
            <summary>Sets the stub of DropForeignKeyOperation.CreateDropIndexOperation()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.CreateDropIndexOperation01">
            <summary>Sets the stub of DropForeignKeyOperation.CreateDropIndexOperation()</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropForeignKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.InverseGet">
            <summary>Sets the stub of DropForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of DropForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.Inverse">
            <summary>Sets the stub of DropForeignKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropForeignKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of DropForeignKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropIndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.#ctor(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropIndexOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.InverseGet">
            <summary>Sets the stub of DropIndexOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of DropIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.Inverse">
            <summary>Sets the stub of DropIndexOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropIndexOperation.IsDestructiveChange">
            <summary>Sets the stub of DropIndexOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropPrimaryKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.InverseGet">
            <summary>Sets the stub of DropPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.Inverse">
            <summary>Sets the stub of DropPrimaryKeyOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropPrimaryKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.InverseGet">
            <summary>Sets the stub of DropProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of DropProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.NameGet">
            <summary>Sets the stub of DropProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.Inverse">
            <summary>Sets the stub of DropProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of DropProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropProcedureOperation.Name">
            <summary>Sets the stub of DropProcedureOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.DropTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.CreateTableOperation,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.InitializeStub">
            <summary>Initializes a new instance of type StubDropTableOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.InverseGet">
            <summary>Sets the stub of DropTableOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of DropTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.NameGet">
            <summary>Sets the stub of DropTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.Inverse">
            <summary>Sets the stub of DropTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.IsDestructiveChange">
            <summary>Sets the stub of DropTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubDropTableOperation.Name">
            <summary>Sets the stub of DropTableOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.ForeignKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubForeignKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.HistoryOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.#ctor(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.InitializeStub">
            <summary>Initializes a new instance of type StubHistoryOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of HistoryOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubHistoryOperation.IsDestructiveChange">
            <summary>Sets the stub of HistoryOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.IndexOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.InitializeStub">
            <summary>Initializes a new instance of type StubIndexOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubIndexOperation.IsDestructiveChange">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.MigrationOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMigrationOperation.IsDestructiveChange">
            <summary>Sets the stub of MigrationOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.MoveProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubMoveProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.InverseGet">
            <summary>Sets the stub of MoveProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of MoveProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.NameGet">
            <summary>Sets the stub of MoveProcedureOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.NewSchemaGet">
            <summary>Sets the stub of MoveProcedureOperation.get_NewSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.Inverse">
            <summary>Sets the stub of MoveProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of MoveProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.Name">
            <summary>Sets the stub of MoveProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveProcedureOperation.NewSchema">
            <summary>Sets the stub of MoveProcedureOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.MoveTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.InitializeStub">
            <summary>Initializes a new instance of type StubMoveTableOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.InverseGet">
            <summary>Sets the stub of MoveTableOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of MoveTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.NameGet">
            <summary>Sets the stub of MoveTableOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.NewSchemaGet">
            <summary>Sets the stub of MoveTableOperation.get_NewSchema()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.Inverse">
            <summary>Sets the stub of MoveTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.IsDestructiveChange">
            <summary>Sets the stub of MoveTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.Name">
            <summary>Sets the stub of MoveTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubMoveTableOperation.NewSchema">
            <summary>Sets the stub of MoveTableOperation.get_NewSchema()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel">
            <summary>Stub type of System.Data.Entity.Migrations.Model.ParameterModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToDefaultValue">
            <summary>Attaches delegates to emulate StubParameterModel.DefaultValue as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToDefaultValueSql">
            <summary>Attaches delegates to emulate StubParameterModel.DefaultValueSql as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToIsFixedLength">
            <summary>Attaches delegates to emulate StubParameterModel.IsFixedLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToIsUnicode">
            <summary>Attaches delegates to emulate StubParameterModel.IsUnicode as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToMaxLength">
            <summary>Attaches delegates to emulate StubParameterModel.MaxLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubParameterModel.Name as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToPrecision">
            <summary>Attaches delegates to emulate StubParameterModel.Precision as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToScale">
            <summary>Attaches delegates to emulate StubParameterModel.Scale as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.AttachBackingFieldToStoreType">
            <summary>Attaches delegates to emulate StubParameterModel.StoreType as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValueGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValueSetObject">
            <summary>Sets the stub of PropertyModel.set_DefaultValue(Object value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValueSqlGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValueSqlSetString">
            <summary>Sets the stub of PropertyModel.set_DefaultValueSql(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.InitializeStub">
            <summary>Initializes a new instance of type StubParameterModel</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsFixedLengthGet">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsUnicodeGet">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.MaxLengthGet">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.MaxLengthSetNullableOfInt32">
            <summary>Sets the stub of PropertyModel.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.NameGet">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.NameSetString">
            <summary>Sets the stub of PropertyModel.set_Name(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.PrecisionGet">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.PrecisionSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.ScaleGet">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.ScaleSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.StoreTypeGet">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.StoreTypeSetString">
            <summary>Sets the stub of PropertyModel.set_StoreType(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.TypeGet">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValue">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.DefaultValueSql">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsFixedLength">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.IsUnicode">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.MaxLength">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.Name">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.Precision">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.Scale">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.StoreType">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubParameterModel.Type">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.PrimaryKeyOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.InitializeStub">
            <summary>Initializes a new instance of type StubPrimaryKeyOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPrimaryKeyOperation.IsDestructiveChange">
            <summary>Sets the stub of PrimaryKeyOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.ProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.NameGet">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.ParametersGet">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of ProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.Name">
            <summary>Sets the stub of ProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubProcedureOperation.Parameters">
            <summary>Sets the stub of ProcedureOperation.get_Parameters()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel">
            <summary>Stub type of System.Data.Entity.Migrations.Model.PropertyModel</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToDefaultValue">
            <summary>Attaches delegates to emulate StubPropertyModel.DefaultValue as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToDefaultValueSql">
            <summary>Attaches delegates to emulate StubPropertyModel.DefaultValueSql as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToIsFixedLength">
            <summary>Attaches delegates to emulate StubPropertyModel.IsFixedLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToIsUnicode">
            <summary>Attaches delegates to emulate StubPropertyModel.IsUnicode as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToMaxLength">
            <summary>Attaches delegates to emulate StubPropertyModel.MaxLength as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubPropertyModel.Name as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToPrecision">
            <summary>Attaches delegates to emulate StubPropertyModel.Precision as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToScale">
            <summary>Attaches delegates to emulate StubPropertyModel.Scale as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.AttachBackingFieldToStoreType">
            <summary>Attaches delegates to emulate StubPropertyModel.StoreType as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValueGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValueSetObject">
            <summary>Sets the stub of PropertyModel.set_DefaultValue(Object value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValueSqlGet">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValueSqlSetString">
            <summary>Sets the stub of PropertyModel.set_DefaultValueSql(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyModel</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsFixedLengthGet">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsFixedLengthSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsFixedLength(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsUnicodeGet">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsUnicodeSetNullableOfBoolean">
            <summary>Sets the stub of PropertyModel.set_IsUnicode(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.MaxLengthGet">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.MaxLengthSetNullableOfInt32">
            <summary>Sets the stub of PropertyModel.set_MaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.NameGet">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.NameSetString">
            <summary>Sets the stub of PropertyModel.set_Name(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.PrecisionGet">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.PrecisionSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Precision(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.ScaleGet">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.ScaleSetNullableOfByte">
            <summary>Sets the stub of PropertyModel.set_Scale(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.StoreTypeGet">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.StoreTypeSetString">
            <summary>Sets the stub of PropertyModel.set_StoreType(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.TypeGet">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValue">
            <summary>Sets the stub of PropertyModel.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.DefaultValueSql">
            <summary>Sets the stub of PropertyModel.get_DefaultValueSql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsFixedLength">
            <summary>Sets the stub of PropertyModel.get_IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.IsUnicode">
            <summary>Sets the stub of PropertyModel.get_IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.MaxLength">
            <summary>Sets the stub of PropertyModel.get_MaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.Name">
            <summary>Sets the stub of PropertyModel.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.Precision">
            <summary>Sets the stub of PropertyModel.get_Precision()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.Scale">
            <summary>Sets the stub of PropertyModel.get_Scale()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.StoreType">
            <summary>Sets the stub of PropertyModel.get_StoreType()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubPropertyModel.Type">
            <summary>Sets the stub of PropertyModel.get_Type()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.RenameColumnOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.InitializeStub">
            <summary>Initializes a new instance of type StubRenameColumnOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.InverseGet">
            <summary>Sets the stub of RenameColumnOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of RenameColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.NameGet">
            <summary>Sets the stub of RenameColumnOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.TableGet">
            <summary>Sets the stub of RenameColumnOperation.get_Table()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.Inverse">
            <summary>Sets the stub of RenameColumnOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.IsDestructiveChange">
            <summary>Sets the stub of RenameColumnOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.Name">
            <summary>Sets the stub of RenameColumnOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameColumnOperation.Table">
            <summary>Sets the stub of RenameColumnOperation.get_Table()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.RenameProcedureOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.InitializeStub">
            <summary>Initializes a new instance of type StubRenameProcedureOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.InverseGet">
            <summary>Sets the stub of RenameProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of RenameProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.NameGet">
            <summary>Sets the stub of RenameProcedureOperation.get_Name()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.NewNameGet">
            <summary>Sets the stub of RenameProcedureOperation.get_NewName()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.Inverse">
            <summary>Sets the stub of RenameProcedureOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.IsDestructiveChange">
            <summary>Sets the stub of RenameProcedureOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.Name">
            <summary>Sets the stub of RenameProcedureOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameProcedureOperation.NewName">
            <summary>Sets the stub of RenameProcedureOperation.get_NewName()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.RenameTableOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.#ctor(System.String,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.InitializeStub">
            <summary>Initializes a new instance of type StubRenameTableOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.InverseGet">
            <summary>Sets the stub of RenameTableOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of RenameTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.NameGet">
            <summary>Sets the stub of RenameTableOperation.get_Name()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.Inverse">
            <summary>Sets the stub of RenameTableOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.IsDestructiveChange">
            <summary>Sets the stub of RenameTableOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubRenameTableOperation.Name">
            <summary>Sets the stub of RenameTableOperation.get_Name()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.SqlOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.AttachBackingFieldToSuppressTransaction">
            <summary>Attaches delegates to emulate StubSqlOperation.SuppressTransaction as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.InitializeStub">
            <summary>Initializes a new instance of type StubSqlOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of SqlOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.SqlGet">
            <summary>Sets the stub of SqlOperation.get_Sql()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.SuppressTransactionGet">
            <summary>Sets the stub of SqlOperation.get_SuppressTransaction()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.SuppressTransactionSetBoolean">
            <summary>Sets the stub of SqlOperation.set_SuppressTransaction(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.IsDestructiveChange">
            <summary>Sets the stub of SqlOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.Sql">
            <summary>Sets the stub of SqlOperation.get_Sql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubSqlOperation.SuppressTransaction">
            <summary>Sets the stub of SqlOperation.get_SuppressTransaction()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation">
            <summary>Stub type of System.Data.Entity.Migrations.Model.UpdateDatabaseOperation</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.#ctor(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.InitializeStub">
            <summary>Initializes a new instance of type StubUpdateDatabaseOperation</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.InverseGet">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.IsDestructiveChangeGet">
            <summary>Sets the stub of UpdateDatabaseOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.Inverse">
            <summary>Sets the stub of MigrationOperation.get_Inverse()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.Fakes.StubUpdateDatabaseOperation.IsDestructiveChange">
            <summary>Sets the stub of UpdateDatabaseOperation.get_IsDestructiveChange()</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator">
            <summary>Shim type of System.Data.Entity.Migrations.Sql.MigrationSqlGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.#ctor(System.Data.Entity.Migrations.Sql.MigrationSqlGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.BuildStoreTypeUsageStringPropertyModel">
            <summary>Sets the shim of MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.Constructor">
            <summary>Sets the shim of MigrationSqlGenerator.MigrationSqlGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Sets the shim of MigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.ProviderManifestGet">
            <summary>Sets the shim of MigrationSqlGenerator.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of MigrationSqlGenerator.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.AllInstances.BuildStoreTypeUsageStringPropertyModel">
            <summary>Sets the shim of MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.AllInstances.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Sets the shim of MigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of MigrationSqlGenerator.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationSqlGenerator.AllInstances.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of MigrationSqlGenerator.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement">
            <summary>Shim type of System.Data.Entity.Migrations.Sql.MigrationStatement</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.#ctor(System.Data.Entity.Migrations.Sql.MigrationStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.BatchTerminatorGet">
            <summary>Sets the shim of MigrationStatement.get_BatchTerminator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.BatchTerminatorSetString">
            <summary>Sets the shim of MigrationStatement.set_BatchTerminator(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.Constructor">
            <summary>Sets the shim of MigrationStatement.MigrationStatement()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.SqlGet">
            <summary>Sets the shim of MigrationStatement.get_Sql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.SqlSetString">
            <summary>Sets the shim of MigrationStatement.set_Sql(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.SuppressTransactionGet">
            <summary>Sets the shim of MigrationStatement.get_SuppressTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.SuppressTransactionSetBoolean">
            <summary>Sets the shim of MigrationStatement.set_SuppressTransaction(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.BatchTerminatorGet">
            <summary>Sets the shim of MigrationStatement.get_BatchTerminator()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.BatchTerminatorSetString">
            <summary>Sets the shim of MigrationStatement.set_BatchTerminator(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.SqlGet">
            <summary>Sets the shim of MigrationStatement.get_Sql()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.SqlSetString">
            <summary>Sets the shim of MigrationStatement.set_Sql(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.SuppressTransactionGet">
            <summary>Sets the shim of MigrationStatement.get_SuppressTransaction()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.ShimMigrationStatement.AllInstances.SuppressTransactionSetBoolean">
            <summary>Sets the shim of MigrationStatement.set_SuppressTransaction(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator">
            <summary>Stub type of System.Data.Entity.Migrations.Sql.MigrationSqlGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.BuildStoreTypeUsage(System.String,System.Data.Entity.Migrations.Model.PropertyModel)">
            <summary>Sets the stub of MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.BuildStoreTypeUsageStringPropertyModel">
            <summary>Sets the stub of MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>Sets the stub of MigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.GenerateIEnumerableOfMigrationOperationString">
            <summary>Sets the stub of MigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
            <summary>Sets the stub of MigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Sets the stub of MigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationSqlGenerator</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationSqlGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement">
            <summary>Stub type of System.Data.Entity.Migrations.Sql.MigrationStatement</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationStatement</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.Fakes.StubMigrationStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter">
            <summary>Shim type of System.Data.Entity.Migrations.Utilities.IndentedTextWriter</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.#ctor(System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.BuildIndentInt32">
            <summary>Sets the shim of IndentedTextWriter.BuildIndent(Int32 numberOfIndents)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.Close">
            <summary>Sets the shim of IndentedTextWriter.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.ConstructorTextWriter">
            <summary>Sets the shim of IndentedTextWriter.IndentedTextWriter(TextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.ConstructorTextWriterString">
            <summary>Sets the shim of IndentedTextWriter.IndentedTextWriter(TextWriter writer, String tabString)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.CurrentIndentation">
            <summary>Sets the shim of IndentedTextWriter.CurrentIndentation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.EncodingGet">
            <summary>Sets the shim of IndentedTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.Flush">
            <summary>Sets the shim of IndentedTextWriter.Flush()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.IndentGet">
            <summary>Sets the shim of IndentedTextWriter.get_Indent()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.IndentSetInt32">
            <summary>Sets the shim of IndentedTextWriter.set_Indent(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.InnerWriterGet">
            <summary>Sets the shim of IndentedTextWriter.get_InnerWriter()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.NewLineGet">
            <summary>Sets the shim of IndentedTextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.NewLineSetString">
            <summary>Sets the shim of IndentedTextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.OutputTabs">
            <summary>Sets the shim of IndentedTextWriter.OutputTabs()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.StaticConstructor">
            <summary>Sets the shim of IndentedTextWriter.IndentedTextWriter()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteBoolean">
            <summary>Sets the shim of IndentedTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteChar">
            <summary>Sets the shim of IndentedTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteCharArray">
            <summary>Sets the shim of IndentedTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the shim of IndentedTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteDouble">
            <summary>Sets the shim of IndentedTextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteInt32">
            <summary>Sets the shim of IndentedTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteInt64">
            <summary>Sets the shim of IndentedTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLine">
            <summary>Sets the shim of IndentedTextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineBoolean">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineChar">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineCharArray">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineDouble">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineInt32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineInt64">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineNoTabsString">
            <summary>Sets the shim of IndentedTextWriter.WriteLineNoTabs(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineSingle">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineString">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineStringObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineStringObjectArray">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineStringObjectObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteLineUInt32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteObject">
            <summary>Sets the shim of IndentedTextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteSingle">
            <summary>Sets the shim of IndentedTextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteString">
            <summary>Sets the shim of IndentedTextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteStringObject">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteStringObjectArray">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.WriteStringObjectObject">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.BuildIndentInt32">
            <summary>Sets the shim of IndentedTextWriter.BuildIndent(Int32 numberOfIndents)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.Close">
            <summary>Sets the shim of IndentedTextWriter.Close()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.CurrentIndentation">
            <summary>Sets the shim of IndentedTextWriter.CurrentIndentation()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.EncodingGet">
            <summary>Sets the shim of IndentedTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.Flush">
            <summary>Sets the shim of IndentedTextWriter.Flush()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.IndentGet">
            <summary>Sets the shim of IndentedTextWriter.get_Indent()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.IndentSetInt32">
            <summary>Sets the shim of IndentedTextWriter.set_Indent(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.InnerWriterGet">
            <summary>Sets the shim of IndentedTextWriter.get_InnerWriter()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.NewLineGet">
            <summary>Sets the shim of IndentedTextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.NewLineSetString">
            <summary>Sets the shim of IndentedTextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.OutputTabs">
            <summary>Sets the shim of IndentedTextWriter.OutputTabs()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteBoolean">
            <summary>Sets the shim of IndentedTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteChar">
            <summary>Sets the shim of IndentedTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteCharArray">
            <summary>Sets the shim of IndentedTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Sets the shim of IndentedTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteDouble">
            <summary>Sets the shim of IndentedTextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteInt32">
            <summary>Sets the shim of IndentedTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteInt64">
            <summary>Sets the shim of IndentedTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLine">
            <summary>Sets the shim of IndentedTextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineBoolean">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineChar">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineCharArray">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineDouble">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineInt32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineInt64">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineNoTabsString">
            <summary>Sets the shim of IndentedTextWriter.WriteLineNoTabs(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineSingle">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineString">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineStringObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineStringObjectArray">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineStringObjectObject">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteLineUInt32">
            <summary>Sets the shim of IndentedTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteObject">
            <summary>Sets the shim of IndentedTextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteSingle">
            <summary>Sets the shim of IndentedTextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteString">
            <summary>Sets the shim of IndentedTextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteStringObject">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteStringObjectArray">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.Fakes.ShimIndentedTextWriter.AllInstances.WriteStringObjectObject">
            <summary>Sets the shim of IndentedTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.Constructor">
            <summary>Sets the shim of AssociationMappingConfiguration.AssociationMappingConfiguration()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationMappingConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of AssociationModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of AssociationModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of AssociationModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimAssociationModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of AssociationModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsFixedLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsMaxLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsOptional">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsRequired">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsRowVersion">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsRowVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.IsVariableLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of BinaryPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsRowVersion">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsRowVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimBinaryPropertyConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of BinaryPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.EqualsObject">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.GetHashCode">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.GetType">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.ToString">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.WillCascadeOnDelete">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.WillCascadeOnDelete()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.WillCascadeOnDeleteBoolean">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.WillCascadeOnDelete(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.WillCascadeOnDelete">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.WillCascadeOnDelete()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimCascadableNavigationPropertyConfiguration.AllInstances.WillCascadeOnDeleteBoolean">
            <summary>Sets the shim of CascadableNavigationPropertyConfiguration.WillCascadeOnDelete(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AddOf1ComplexTypeConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0},System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar})">
            <summary>Sets the shim of ConfigurationRegistrar.Add(ComplexTypeConfiguration`1&lt;!!0&gt; complexTypeConfiguration)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AddOf1EntityTypeConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0},System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar})">
            <summary>Sets the shim of ConfigurationRegistrar.Add(EntityTypeConfiguration`1&lt;!!0&gt; entityTypeConfiguration)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AddFromAssemblyAssembly">
            <summary>Sets the shim of ConfigurationRegistrar.AddFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.EqualsObject">
            <summary>Sets the shim of ConfigurationRegistrar.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.GetConfiguredTypes">
            <summary>Sets the shim of ConfigurationRegistrar.GetConfiguredTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.GetHashCode">
            <summary>Sets the shim of ConfigurationRegistrar.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.GetType">
            <summary>Sets the shim of ConfigurationRegistrar.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.ToString">
            <summary>Sets the shim of ConfigurationRegistrar.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.AddOf1ComplexTypeConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0},System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar})">
            <summary>Sets the shim of ConfigurationRegistrar.Add(ComplexTypeConfiguration`1&lt;!!0&gt; complexTypeConfiguration)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.AddOf1EntityTypeConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0},System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar})">
            <summary>Sets the shim of ConfigurationRegistrar.Add(EntityTypeConfiguration`1&lt;!!0&gt; entityTypeConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.AddFromAssemblyAssembly">
            <summary>Sets the shim of ConfigurationRegistrar.AddFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.EqualsObject">
            <summary>Sets the shim of ConfigurationRegistrar.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.GetConfiguredTypes">
            <summary>Sets the shim of ConfigurationRegistrar.GetConfiguredTypes()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConfigurationRegistrar.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.GetType01">
            <summary>Sets the shim of ConfigurationRegistrar.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConfigurationRegistrar.AllInstances.ToString01">
            <summary>Sets the shim of ConfigurationRegistrar.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.ConstructorType">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.ConventionDeleteModificationStoredProcedureConfiguration(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.GetType">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.HasNameString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.HasNameStringString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.ParameterStringString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.RowsAffectedParameterString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.ToString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.HasNameString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.HasNameStringString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.ParameterStringString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.RowsAffectedParameterString">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionDeleteModificationStoredProcedureConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionDeleteModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ConstructorType">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.ConventionInsertModificationStoredProcedureConfiguration(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.GetType">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.HasNameString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.HasNameStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ParameterStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ResultPropertyInfoString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Result(PropertyInfo propertyInfo, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ResultStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Result(String propertyName, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.ToString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.HasNameString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.HasNameStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.ParameterStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.ResultPropertyInfoString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Result(PropertyInfo propertyInfo, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.ResultStringString">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.Result(String propertyName, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionInsertModificationStoredProcedureConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionInsertModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProcedureConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProcedureConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.Constructor">
            <summary>Sets the shim of ConventionModificationStoredProcedureConfiguration.ConventionModificationStoredProcedureConfiguration()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProcedureConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.ConstructorType">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.ConventionModificationStoredProceduresConfiguration(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.DeleteActionOfConventionDeleteModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Delete(Action`1&lt;ConventionDeleteModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.GetType">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.InsertActionOfConventionInsertModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Insert(Action`1&lt;ConventionInsertModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.ToString">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.UpdateActionOfConventionUpdateModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Update(Action`1&lt;ConventionUpdateModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.DeleteActionOfConventionDeleteModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Delete(Action`1&lt;ConventionDeleteModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.InsertActionOfConventionInsertModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Insert(Action`1&lt;ConventionInsertModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionModificationStoredProceduresConfiguration.AllInstances.UpdateActionOfConventionUpdateModificationStoredProcedureConfiguration">
            <summary>Sets the shim of ConventionModificationStoredProceduresConfiguration.Update(Action`1&lt;ConventionUpdateModificationStoredProcedureConfiguration&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.ClrPropertyInfoGet">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.get_ClrPropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.GetType">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasColumnOrderInt32">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnOrder(Int32 columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasDatabaseGeneratedOptionDatabaseGeneratedOption">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasDatabaseGeneratedOption(DatabaseGeneratedOption databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasMaxLengthInt32">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasMaxLength(Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasParameterNameString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasPrecisionByte">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasPrecision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.HasPrecisionByteByte">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasPrecision(Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsConcurrencyTokenBoolean">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsConcurrencyToken(Boolean concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsFixedLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsKey">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsKey()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsMaxLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsOptional">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsRequired">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsRowVersion">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsRowVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsUnicode">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsUnicodeBoolean">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsUnicode(Boolean unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.IsVariableLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.ToString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.ClrPropertyInfoGet">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.get_ClrPropertyInfo()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasColumnOrderInt32">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnOrder(Int32 columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionDatabaseGeneratedOption">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasDatabaseGeneratedOption(DatabaseGeneratedOption databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasMaxLengthInt32">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasMaxLength(Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasParameterNameString">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasPrecisionByte">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasPrecision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.HasPrecisionByteByte">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.HasPrecision(Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsConcurrencyTokenBoolean">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsConcurrencyToken(Boolean concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsKey">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsKey()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsRowVersion">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsRowVersion()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsUnicode">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsUnicodeBoolean">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsUnicode(Boolean unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionPrimitivePropertyConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionPrimitivePropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.ClrTypeGet">
            <summary>Sets the shim of ConventionTypeConfiguration.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionTypeConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionTypeConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.GetType">
            <summary>Sets the shim of ConventionTypeConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.HasEntitySetNameString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.HasKeyIEnumerableOfPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(IEnumerable`1&lt;PropertyInfo&gt; keyProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.HasKeyIEnumerableOfString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(IEnumerable`1&lt;String&gt; propertyNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.HasKeyPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.HasKeyString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.Ignore">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.IgnorePropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.IgnoreString">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.IsComplexType">
            <summary>Sets the shim of ConventionTypeConfiguration.IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.MapToStoredProcedures">
            <summary>Sets the shim of ConventionTypeConfiguration.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.MapToStoredProceduresActionOfConventionModificationStoredProceduresConfiguration">
            <summary>Sets the shim of ConventionTypeConfiguration.MapToStoredProcedures(Action`1&lt;ConventionModificationStoredProceduresConfiguration&gt; modificationStoredProceduresConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.PropertyPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.Property(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.PropertyString">
            <summary>Sets the shim of ConventionTypeConfiguration.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.StaticConstructor">
            <summary>Sets the shim of ConventionTypeConfiguration.ConventionTypeConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.ToString">
            <summary>Sets the shim of ConventionTypeConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.ToTableString">
            <summary>Sets the shim of ConventionTypeConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.ToTableStringString">
            <summary>Sets the shim of ConventionTypeConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration._HasKeyb__3String">
            <summary>Sets the shim of ConventionTypeConfiguration.&lt;HasKey&gt;b__3(String n)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration._HasKeyb__4String">
            <summary>Sets the shim of ConventionTypeConfiguration.&lt;HasKey&gt;b__4(String p)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.ClrTypeGet">
            <summary>Sets the shim of ConventionTypeConfiguration.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionTypeConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionTypeConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionTypeConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.HasEntitySetNameString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.HasKeyIEnumerableOfPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(IEnumerable`1&lt;PropertyInfo&gt; keyProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.HasKeyIEnumerableOfString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(IEnumerable`1&lt;String&gt; propertyNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.HasKeyPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.HasKeyString">
            <summary>Sets the shim of ConventionTypeConfiguration.HasKey(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.Ignore">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.IgnorePropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.IgnoreString">
            <summary>Sets the shim of ConventionTypeConfiguration.Ignore(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.IsComplexType">
            <summary>Sets the shim of ConventionTypeConfiguration.IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.MapToStoredProcedures">
            <summary>Sets the shim of ConventionTypeConfiguration.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.MapToStoredProceduresActionOfConventionModificationStoredProceduresConfiguration">
            <summary>Sets the shim of ConventionTypeConfiguration.MapToStoredProcedures(Action`1&lt;ConventionModificationStoredProceduresConfiguration&gt; modificationStoredProceduresConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.PropertyPropertyInfo">
            <summary>Sets the shim of ConventionTypeConfiguration.Property(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.PropertyString">
            <summary>Sets the shim of ConventionTypeConfiguration.Property(String propertyName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionTypeConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.ToTableString">
            <summary>Sets the shim of ConventionTypeConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances.ToTableStringString">
            <summary>Sets the shim of ConventionTypeConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration.AllInstances._HasKeyb__3String">
            <summary>Sets the shim of ConventionTypeConfiguration.&lt;HasKey&gt;b__3(String n)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.HasKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0}})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.HasKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0}})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.PropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.ClrTypeGet">
            <summary>Sets the shim of ConventionTypeConfiguration`1.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.EqualsObject">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.GetHashCode">
            <summary>Sets the shim of ConventionTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.GetType">
            <summary>Sets the shim of ConventionTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.HasEntitySetNameString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.Ignore">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Ignore()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.IsComplexType">
            <summary>Sets the shim of ConventionTypeConfiguration`1.IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.MapToStoredProcedures">
            <summary>Sets the shim of ConventionTypeConfiguration`1.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.MapToStoredProceduresActionOfModificationStoredProceduresConfigurationOfT0">
            <summary>Sets the shim of ConventionTypeConfiguration`1.MapToStoredProcedures(Action`1&lt;ModificationStoredProceduresConfiguration`1&lt;!0&gt;&gt; modificationStoredProceduresConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.ToString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.ToTableString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.ToTableStringString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.VerifyTypeType">
            <summary>Sets the shim of ConventionTypeConfiguration`1.VerifyType(Type type)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.HasKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0}})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.HasKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0}})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.PropertyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration})">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.ClrTypeGet">
            <summary>Sets the shim of ConventionTypeConfiguration`1.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of ConventionTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.HasEntitySetNameString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.Ignore">
            <summary>Sets the shim of ConventionTypeConfiguration`1.Ignore()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.IsComplexType">
            <summary>Sets the shim of ConventionTypeConfiguration`1.IsComplexType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.MapToStoredProcedures">
            <summary>Sets the shim of ConventionTypeConfiguration`1.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.MapToStoredProceduresActionOfModificationStoredProceduresConfigurationOfT0">
            <summary>Sets the shim of ConventionTypeConfiguration`1.MapToStoredProcedures(Action`1&lt;ModificationStoredProceduresConfiguration`1&lt;!0&gt;&gt; modificationStoredProceduresConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.ToTableString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionTypeConfiguration`1.AllInstances.ToTableStringString">
            <summary>Sets the shim of ConventionTypeConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ConstructorType">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.ConventionUpdateModificationStoredProcedureConfiguration(Type type)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.GetType">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.HasNameString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.HasNameStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ParameterPropertyInfoStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ParameterStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ParameterStringStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(String propertyName, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ResultPropertyInfoString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Result(PropertyInfo propertyInfo, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ResultStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Result(String propertyName, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.RowsAffectedParameterString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.ToString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.HasNameString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.HasNameStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ParameterPropertyInfoString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ParameterPropertyInfoStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(PropertyInfo propertyInfo, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ParameterStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(String propertyName, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ParameterStringStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Parameter(String propertyName, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ResultPropertyInfoString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Result(PropertyInfo propertyInfo, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ResultStringString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.Result(String propertyName, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.RowsAffectedParameterString">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionUpdateModificationStoredProcedureConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionUpdateModificationStoredProcedureConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AddAfterOf1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Conventions.IConvention})">
            <summary>Sets the shim of ConventionsConfiguration.AddAfter(IConvention newConvention)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AddBeforeOf1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Conventions.IConvention})">
            <summary>Sets the shim of ConventionsConfiguration.AddBefore(IConvention newConvention)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of ConventionsConfiguration.Add()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of ConventionsConfiguration.Remove()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._Removeb__2Of1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.IConvention,System.Boolean})">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Remove&gt;b__2(IConvention c)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._Removeb__3Of1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.IConvention,System.Boolean})">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Remove&gt;b__3(IConvention c)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._Removeb__4Of1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.IConvention,System.Boolean})">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Remove&gt;b__4(IConvention c)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._Removeb__5Of1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.IConvention,System.Boolean})">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Remove&gt;b__5(IConvention c)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AddIConventionArray">
            <summary>Sets the shim of ConventionsConfiguration.Add(IConvention[] conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ApplyConceptualModelDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyConceptualModel(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ApplyPluralizingTableNameConventionDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyPluralizingTableNameConvention(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ApplyStoreModelDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyStoreModel(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.Clone">
            <summary>Sets the shim of ConventionsConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ConceptualModelConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConceptualModelConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ConceptualToStoreMappingConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConceptualToStoreMappingConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ConfigurationConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConfigurationConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.Constructor">
            <summary>Sets the shim of ConventionsConfiguration.ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ConstructorConventionsConfiguration">
            <summary>Sets the shim of ConventionsConfiguration.ConventionsConfiguration(ConventionsConfiguration source)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.EqualsObject">
            <summary>Sets the shim of ConventionsConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.GetHashCode">
            <summary>Sets the shim of ConventionsConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.GetType">
            <summary>Sets the shim of ConventionsConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.IndexOfTypeIListOfIConvention">
            <summary>Sets the shim of ConventionsConfiguration.IndexOf(Type existingConventionType, IList`1&lt;IConvention&gt; conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.InsertTypeInt32IConventionIListOfIConvention">
            <summary>Sets the shim of ConventionsConfiguration.Insert(Type existingConventionType, Int32 offset, IConvention newConvention, IList`1&lt;IConvention&gt; conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.IsConceptualModelConventionType">
            <summary>Sets the shim of ConventionsConfiguration.IsConceptualModelConvention(Type conventionType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.IsConceptualToStoreMappingConventionType">
            <summary>Sets the shim of ConventionsConfiguration.IsConceptualToStoreMappingConvention(Type conventionType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.IsConfigurationConventionType">
            <summary>Sets the shim of ConventionsConfiguration.IsConfigurationConvention(Type conventionType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.IsStoreModelConventionType">
            <summary>Sets the shim of ConventionsConfiguration.IsStoreModelConvention(Type conventionType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.RemoveIConventionArray">
            <summary>Sets the shim of ConventionsConfiguration.Remove(IConvention[] conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.StoreModelConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_StoreModelConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.ToString">
            <summary>Sets the shim of ConventionsConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._Addb__0IConvention">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Add&gt;b__0(IConvention initialConvention)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration._ApplyPluralizingTableNameConventionb__aIConvention">
            <summary>Sets the shim of ConventionsConfiguration.&lt;ApplyPluralizingTableNameConvention&gt;b__a(IConvention c)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.AddAfterOf1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,System.Data.Entity.ModelConfiguration.Conventions.IConvention})">
            <summary>Sets the shim of ConventionsConfiguration.AddAfter(IConvention newConvention)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.AddBeforeOf1IConvention``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,System.Data.Entity.ModelConfiguration.Conventions.IConvention})">
            <summary>Sets the shim of ConventionsConfiguration.AddBefore(IConvention newConvention)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration})">
            <summary>Sets the shim of ConventionsConfiguration.Add()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration})">
            <summary>Sets the shim of ConventionsConfiguration.Remove()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.AddIConventionArray">
            <summary>Sets the shim of ConventionsConfiguration.Add(IConvention[] conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ApplyConceptualModelDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyConceptualModel(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ApplyPluralizingTableNameConventionDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyPluralizingTableNameConvention(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ApplyStoreModelDbModel">
            <summary>Sets the shim of ConventionsConfiguration.ApplyStoreModel(DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.Clone">
            <summary>Sets the shim of ConventionsConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ConceptualModelConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConceptualModelConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ConceptualToStoreMappingConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConceptualToStoreMappingConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ConfigurationConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_ConfigurationConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ConventionsConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConventionsConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ConventionsConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.RemoveIConventionArray">
            <summary>Sets the shim of ConventionsConfiguration.Remove(IConvention[] conventions)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.StoreModelConventionsGet">
            <summary>Sets the shim of ConventionsConfiguration.get_StoreModelConventions()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ConventionsConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimConventionsConfiguration.AllInstances._Addb__0IConvention">
            <summary>Sets the shim of ConventionsConfiguration.&lt;Add&gt;b__0(IConvention initialConvention)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.HasPrecisionByte">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasPrecision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.IsOptional">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.IsRequired">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.HasPrecisionByte">
            <summary>Sets the shim of DateTimePropertyConfiguration.HasPrecision(Byte value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDateTimePropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of DateTimePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.HasPrecisionByteByte">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasPrecision(Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.IsOptional">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.IsRequired">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.HasPrecisionByteByte">
            <summary>Sets the shim of DecimalPropertyConfiguration.HasPrecision(Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDecimalPropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of DecimalPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.Constructor">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.DeleteModificationStoredProcedureConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.EqualsObject">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.GetHashCode">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.GetType">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.HasNameString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.HasNameStringString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.RowsAffectedParameterString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.ToString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.HasNameString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.HasNameStringString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.RowsAffectedParameterString">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDeleteModificationStoredProcedureConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of DeleteModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.HasForeignKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration})">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.HasForeignKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; foreignKeyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.EqualsObject">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.GetHashCode">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.GetType">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.ToString">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances.HasForeignKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration})">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.HasForeignKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; foreignKeyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimDependentNavigationPropertyConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of DependentNavigationPropertyConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertiesOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Sets the shim of EntityMappingConfiguration`1.Properties(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertiesExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.RequiresOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration})">
            <summary>Sets the shim of EntityMappingConfiguration`1.Requires(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.Constructor">
            <summary>Sets the shim of EntityMappingConfiguration`1.EntityMappingConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.EqualsObject">
            <summary>Sets the shim of EntityMappingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.GetHashCode">
            <summary>Sets the shim of EntityMappingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.GetType">
            <summary>Sets the shim of EntityMappingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.MapInheritedProperties">
            <summary>Sets the shim of EntityMappingConfiguration`1.MapInheritedProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0ByteArray">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0DateTime">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTime&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0DateTimeOffset">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTimeOffset&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0DbGeography">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0DbGeometry">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0Decimal">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Decimal&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDateTime">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTime&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDateTimeOffset">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTimeOffset&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDecimal">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;Decimal&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfTimeSpan">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;TimeSpan&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0String">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.PropertyExpressionOfFuncOfT0TimeSpan">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,TimeSpan&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.RequiresString">
            <summary>Sets the shim of EntityMappingConfiguration`1.Requires(String discriminator)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.ToString">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.ToTableString">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.ToTableStringString">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertiesOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Sets the shim of EntityMappingConfiguration`1.Properties(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertiesExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.RequiresOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration})">
            <summary>Sets the shim of EntityMappingConfiguration`1.Requires(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of EntityMappingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of EntityMappingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of EntityMappingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.MapInheritedProperties">
            <summary>Sets the shim of EntityMappingConfiguration`1.MapInheritedProperties()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0ByteArray">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DateTime">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTime&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DateTimeOffset">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTimeOffset&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DbGeography">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DbGeometry">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0Decimal">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Decimal&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDateTime">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTime&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDateTimeOffset">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTimeOffset&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDecimal">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;Decimal&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfTimeSpan">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;TimeSpan&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0String">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0TimeSpan">
            <summary>Sets the shim of EntityMappingConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,TimeSpan&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.RequiresString">
            <summary>Sets the shim of EntityMappingConfiguration`1.Requires(String discriminator)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.ToTableString">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimEntityMappingConfiguration`1.AllInstances.ToTableStringString">
            <summary>Sets the shim of EntityMappingConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.Clone">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.Constructor">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ForeignKeyAssociationMappingConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.ConstructorForeignKeyAssociationMappingConfiguration">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ForeignKeyAssociationMappingConfiguration(ForeignKeyAssociationMappingConfiguration source)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.EqualsForeignKeyAssociationMappingConfiguration">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Equals(ForeignKeyAssociationMappingConfiguration other)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.EqualsObject">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.GetHashCode">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.GetType">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.MapKeyStringArray">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.MapKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.ToString">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.ToTableString">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.ToTableStringString">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration._Configureb__4EntitySet">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.&lt;Configure&gt;b__4(EntitySet es)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration._Configureb__5EntitySet">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.&lt;Configure&gt;b__5(EntitySet es)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration._GetHashCodeb__16Int32String">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.&lt;GetHashCode&gt;b__16(Int32 t, String n)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.Clone">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.EqualsForeignKeyAssociationMappingConfiguration">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Equals(ForeignKeyAssociationMappingConfiguration other)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.MapKeyStringArray">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.MapKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.ToTableString">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances.ToTableStringString">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyAssociationMappingConfiguration.AllInstances._Configureb__4EntitySet">
            <summary>Sets the shim of ForeignKeyAssociationMappingConfiguration.&lt;Configure&gt;b__4(EntitySet es)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.EqualsObject">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.GetHashCode">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.GetType">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.MapActionOfForeignKeyAssociationMappingConfiguration">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.Map(Action`1&lt;ForeignKeyAssociationMappingConfiguration&gt; configurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.ToString">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances.MapActionOfForeignKeyAssociationMappingConfiguration">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.Map(Action`1&lt;ForeignKeyAssociationMappingConfiguration&gt; configurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimForeignKeyNavigationPropertyConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ForeignKeyNavigationPropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.Constructor">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.InsertModificationStoredProcedureConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.EqualsObject">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.GetHashCode">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.GetType">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.HasNameString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.HasNameStringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.ToString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.HasNameString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.HasNameStringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimInsertModificationStoredProcedureConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of InsertModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.EqualsObject">
            <summary>Sets the shim of LengthColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.GetHashCode">
            <summary>Sets the shim of LengthColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.GetType">
            <summary>Sets the shim of LengthColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of LengthColumnConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.IsFixedLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.IsMaxLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.IsVariableLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.ToString">
            <summary>Sets the shim of LengthColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of LengthColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of LengthColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of LengthColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of LengthColumnConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of LengthColumnConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthColumnConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of LengthColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of LengthPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.IsFixedLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.IsMaxLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.IsVariableLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.AllInstances.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of LengthPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimLengthPropertyConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of LengthPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.EqualsObject">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.GetHashCode">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.GetType">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.ToString">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithMany">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithOptional">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithOptionalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithOptional(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithRequired">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.WithRequiredExpressionOfFuncOfT1T0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithRequired(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithMany">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithOptional">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithOptionalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithOptional(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithRequired">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyNavigationPropertyConfiguration`2.AllInstances.WithRequiredExpressionOfFuncOfT1T0">
            <summary>Sets the shim of ManyNavigationPropertyConfiguration`2.WithRequired(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.Clone">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.Constructor">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ManyToManyAssociationMappingConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.ConstructorManyToManyAssociationMappingConfiguration">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ManyToManyAssociationMappingConfiguration(ManyToManyAssociationMappingConfiguration source)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.EqualsManyToManyAssociationMappingConfiguration">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Equals(ManyToManyAssociationMappingConfiguration other)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.EqualsObject">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.GetHashCode">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.GetType">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.MapLeftKeyStringArray">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.MapLeftKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.MapRightKeyStringArray">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.MapRightKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.ToString">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.ToTableString">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.ToTableStringString">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration._GetHashCodeb__3Int32String">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.&lt;GetHashCode&gt;b__3(Int32 t, String n)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.Clone">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Clone()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.EqualsManyToManyAssociationMappingConfiguration">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Equals(ManyToManyAssociationMappingConfiguration other)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.MapLeftKeyStringArray">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.MapLeftKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.MapRightKeyStringArray">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.MapRightKey(String[] keyColumnNames)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.ToTableString">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyAssociationMappingConfiguration.AllInstances.ToTableStringString">
            <summary>Sets the shim of ManyToManyAssociationMappingConfiguration.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.Constructor">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.ManyToManyModificationStoredProcedureConfiguration`2()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.EqualsObject">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.GetHashCode">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.GetType">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.HasNameString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.HasNameStringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameterExpressionOfFuncOfT1ByteArrayString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(Expression`1&lt;Func`2&lt;!1,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameterExpressionOfFuncOfT1StringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(Expression`1&lt;Func`2&lt;!1,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.ToString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.HasNameString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.HasNameStringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.LeftKeyParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.LeftKeyParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.RightKeyParameterExpressionOfFuncOfT1ByteArrayString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(Expression`1&lt;Func`2&lt;!1,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.RightKeyParameterExpressionOfFuncOfT1StringString">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(Expression`1&lt;Func`2&lt;!1,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProcedureConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of ManyToManyModificationStoredProcedureConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.Constructor">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.ManyToManyModificationStoredProceduresConfiguration`2()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.DeleteActionOfManyToManyModificationStoredProcedureConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Delete(Action`1&lt;ManyToManyModificationStoredProcedureConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.EqualsObject">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.GetHashCode">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.GetType">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.InsertActionOfManyToManyModificationStoredProcedureConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Insert(Action`1&lt;ManyToManyModificationStoredProcedureConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.ToString">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.DeleteActionOfManyToManyModificationStoredProcedureConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Delete(Action`1&lt;ManyToManyModificationStoredProcedureConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.InsertActionOfManyToManyModificationStoredProcedureConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.Insert(Action`1&lt;ManyToManyModificationStoredProcedureConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyModificationStoredProceduresConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of ManyToManyModificationStoredProceduresConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.EqualsObject">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.GetHashCode">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.GetType">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.MapActionOfManyToManyAssociationMappingConfiguration">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.Map(Action`1&lt;ManyToManyAssociationMappingConfiguration&gt; configurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.MapToStoredProceduresActionOfManyToManyModificationStoredProceduresConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures(Action`1&lt;ManyToManyModificationStoredProceduresConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.ToString">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.MapActionOfManyToManyAssociationMappingConfiguration">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.Map(Action`1&lt;ManyToManyAssociationMappingConfiguration&gt; configurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.MapToStoredProcedures">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.MapToStoredProceduresActionOfManyToManyModificationStoredProceduresConfigurationOfT0T1">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures(Action`1&lt;ManyToManyModificationStoredProceduresConfiguration`2&lt;!0,!1&gt;&gt; modificationStoredProcedureMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimManyToManyNavigationPropertyConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of ManyToManyNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProcedureConfigurationBase</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProcedureConfigurationBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.Constructor">
            <summary>Sets the shim of ModificationStoredProcedureConfigurationBase.ModificationStoredProcedureConfigurationBase()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProcedureConfigurationBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.Constructor">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.ModificationStoredProceduresConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.DeleteActionOfDeleteModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Delete(Action`1&lt;DeleteModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.EqualsObject">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.GetHashCode">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.GetType">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.InsertActionOfInsertModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Insert(Action`1&lt;InsertModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.ToString">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.UpdateActionOfUpdateModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Update(Action`1&lt;UpdateModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.DeleteActionOfDeleteModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Delete(Action`1&lt;DeleteModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.InsertActionOfInsertModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Insert(Action`1&lt;InsertModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimModificationStoredProceduresConfiguration`1.AllInstances.UpdateActionOfUpdateModificationStoredProcedureConfigurationOfT0">
            <summary>Sets the shim of ModificationStoredProceduresConfiguration`1.Update(Action`1&lt;UpdateModificationStoredProcedureConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.EqualsObject">
            <summary>Sets the shim of NotNullConditionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.GetHashCode">
            <summary>Sets the shim of NotNullConditionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.GetType">
            <summary>Sets the shim of NotNullConditionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.HasValue">
            <summary>Sets the shim of NotNullConditionConfiguration.HasValue()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.ToString">
            <summary>Sets the shim of NotNullConditionConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of NotNullConditionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of NotNullConditionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of NotNullConditionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances.HasValue">
            <summary>Sets the shim of NotNullConditionConfiguration.HasValue()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimNotNullConditionConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of NotNullConditionConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.EqualsObject">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.GetHashCode">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.GetType">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.ToString">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithMany">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithOptionalDependent">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalDependent()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithOptionalDependentExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalDependent(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithOptionalPrincipalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithRequired">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.WithRequiredExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithRequired(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithMany">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithOptionalDependent">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalDependent()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithOptionalDependentExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalDependent(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithOptionalPrincipal">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithOptionalPrincipalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithRequired">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimOptionalNavigationPropertyConfiguration`2.AllInstances.WithRequiredExpressionOfFuncOfT1T0">
            <summary>Sets the shim of OptionalNavigationPropertyConfiguration`2.WithRequired(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.EqualsObject">
            <summary>Sets the shim of PrimitiveColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.GetHashCode">
            <summary>Sets the shim of PrimitiveColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.GetType">
            <summary>Sets the shim of PrimitiveColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of PrimitiveColumnConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.HasColumnTypeString">
            <summary>Sets the shim of PrimitiveColumnConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.IsOptional">
            <summary>Sets the shim of PrimitiveColumnConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.IsRequired">
            <summary>Sets the shim of PrimitiveColumnConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.ToString">
            <summary>Sets the shim of PrimitiveColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of PrimitiveColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of PrimitiveColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of PrimitiveColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of PrimitiveColumnConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of PrimitiveColumnConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of PrimitiveColumnConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of PrimitiveColumnConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitiveColumnConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of PrimitiveColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.EqualsObject">
            <summary>Sets the shim of PrimitivePropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.GetHashCode">
            <summary>Sets the shim of PrimitivePropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.GetType">
            <summary>Sets the shim of PrimitivePropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.HasParameterNameString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.IsOptional">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.IsRequired">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.ToString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of PrimitivePropertyConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of PrimitivePropertyConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of PrimitivePropertyConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.HasParameterNameString">
            <summary>Sets the shim of PrimitivePropertyConfiguration.HasParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of PrimitivePropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPrimitivePropertyConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of PrimitivePropertyConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.HavingOf1FuncOfPropertyInfoM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Reflection.PropertyInfo,``0},System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration{``0}})">
            <summary>Sets the shim of PropertyConventionConfiguration.Having(Func`2&lt;PropertyInfo,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.ConfigureActionOfConventionPrimitivePropertyConfiguration">
            <summary>Sets the shim of PropertyConventionConfiguration.Configure(Action`1&lt;ConventionPrimitivePropertyConfiguration&gt; propertyConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.ConstructorConventionsConfiguration">
            <summary>Sets the shim of PropertyConventionConfiguration.PropertyConventionConfiguration(ConventionsConfiguration conventionsConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.ConstructorConventionsConfigurationIEnumerableOfFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of PropertyConventionConfiguration.PropertyConventionConfiguration(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;PropertyInfo,Boolean&gt;&gt; predicates)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.ConventionsConfigurationGet">
            <summary>Sets the shim of PropertyConventionConfiguration.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.EqualsObject">
            <summary>Sets the shim of PropertyConventionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.GetHashCode">
            <summary>Sets the shim of PropertyConventionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.GetType">
            <summary>Sets the shim of PropertyConventionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.PredicatesGet">
            <summary>Sets the shim of PropertyConventionConfiguration.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.ToString">
            <summary>Sets the shim of PropertyConventionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.WhereFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of PropertyConventionConfiguration.Where(Func`2&lt;PropertyInfo,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.HavingOf1FuncOfPropertyInfoM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration,System.Func{System.Reflection.PropertyInfo,``0},System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration{``0}})">
            <summary>Sets the shim of PropertyConventionConfiguration.Having(Func`2&lt;PropertyInfo,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.ConfigureActionOfConventionPrimitivePropertyConfiguration">
            <summary>Sets the shim of PropertyConventionConfiguration.Configure(Action`1&lt;ConventionPrimitivePropertyConfiguration&gt; propertyConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of PropertyConventionConfiguration.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of PropertyConventionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of PropertyConventionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of PropertyConventionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.PredicatesGet">
            <summary>Sets the shim of PropertyConventionConfiguration.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of PropertyConventionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionConfiguration.AllInstances.WhereFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of PropertyConventionConfiguration.Where(Func`2&lt;PropertyInfo,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.CapturingPredicateGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.ConfigureActionOfConventionPrimitivePropertyConfigurationT0">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.Configure(Action`2&lt;ConventionPrimitivePropertyConfiguration,!0&gt; propertyConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.ConstructorConventionsConfigurationIEnumerableOfFuncOfPropertyInfoBooleanFuncOfPropertyInfoT0">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.PropertyConventionWithHavingConfiguration`1(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;PropertyInfo,Boolean&gt;&gt; predicates, Func`2&lt;PropertyInfo,!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.ConventionsConfigurationGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.EqualsObject">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.GetHashCode">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.GetType">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.PredicatesGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.ToString">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.CapturingPredicateGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.ConfigureActionOfConventionPrimitivePropertyConfigurationT0">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.Configure(Action`2&lt;ConventionPrimitivePropertyConfiguration,!0&gt; propertyConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.PredicatesGet">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyConventionWithHavingConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of PropertyConventionWithHavingConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.HasColumnNameString">
            <summary>Sets the shim of PropertyMappingConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimPropertyMappingConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of PropertyMappingConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.EqualsObject">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.GetHashCode">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.GetType">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.ToString">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithMany">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithOptional">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithOptionalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithOptional(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithRequiredDependent">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredDependent()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithRequiredDependentExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredDependent(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.WithRequiredPrincipalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithMany">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithMany()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithManyExpressionOfFuncOfT1ICollectionOfT0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithMany(Expression`1&lt;Func`2&lt;!1,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithOptional">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithOptionalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithOptional(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithRequiredDependent">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredDependent()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithRequiredDependentExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredDependent(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithRequiredPrincipal">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimRequiredNavigationPropertyConfiguration`2.AllInstances.WithRequiredPrincipalExpressionOfFuncOfT1T0">
            <summary>Sets the shim of RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal(Expression`1&lt;Func`2&lt;!1,!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.EqualsObject">
            <summary>Sets the shim of StringColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.GetHashCode">
            <summary>Sets the shim of StringColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.GetType">
            <summary>Sets the shim of StringColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of StringColumnConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.HasColumnTypeString">
            <summary>Sets the shim of StringColumnConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of StringColumnConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsFixedLength">
            <summary>Sets the shim of StringColumnConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsMaxLength">
            <summary>Sets the shim of StringColumnConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsOptional">
            <summary>Sets the shim of StringColumnConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsRequired">
            <summary>Sets the shim of StringColumnConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsUnicode">
            <summary>Sets the shim of StringColumnConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsUnicodeNullableOfBoolean">
            <summary>Sets the shim of StringColumnConfiguration.IsUnicode(Nullable`1&lt;Boolean&gt; unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.IsVariableLength">
            <summary>Sets the shim of StringColumnConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.ToString">
            <summary>Sets the shim of StringColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of StringColumnConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of StringColumnConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of StringColumnConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of StringColumnConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of StringColumnConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of StringColumnConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of StringColumnConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of StringColumnConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of StringColumnConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of StringColumnConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsUnicode">
            <summary>Sets the shim of StringColumnConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsUnicodeNullableOfBoolean">
            <summary>Sets the shim of StringColumnConfiguration.IsUnicode(Nullable`1&lt;Boolean&gt; unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of StringColumnConfiguration.IsVariableLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringColumnConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of StringColumnConfiguration.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.HasColumnNameString">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.HasColumnTypeString">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of StringPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of StringPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsConcurrencyToken">
            <summary>Sets the shim of StringPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of StringPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsFixedLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsMaxLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsOptional">
            <summary>Sets the shim of StringPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsRequired">
            <summary>Sets the shim of StringPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsUnicode">
            <summary>Sets the shim of StringPropertyConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsUnicodeNullableOfBoolean">
            <summary>Sets the shim of StringPropertyConfiguration.IsUnicode(Nullable`1&lt;Boolean&gt; unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.IsVariableLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.HasColumnNameString">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnName(String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.HasColumnOrderNullableOfInt32">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnOrder(Nullable`1&lt;Int32&gt; columnOrder)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.HasColumnTypeString">
            <summary>Sets the shim of StringPropertyConfiguration.HasColumnType(String columnType)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.HasDatabaseGeneratedOptionNullableOfDatabaseGeneratedOption">
            <summary>Sets the shim of StringPropertyConfiguration.HasDatabaseGeneratedOption(Nullable`1&lt;DatabaseGeneratedOption&gt; databaseGeneratedOption)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.HasMaxLengthNullableOfInt32">
            <summary>Sets the shim of StringPropertyConfiguration.HasMaxLength(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsConcurrencyToken">
            <summary>Sets the shim of StringPropertyConfiguration.IsConcurrencyToken()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsConcurrencyTokenNullableOfBoolean">
            <summary>Sets the shim of StringPropertyConfiguration.IsConcurrencyToken(Nullable`1&lt;Boolean&gt; concurrencyToken)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsFixedLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsFixedLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsMaxLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsMaxLength()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsOptional">
            <summary>Sets the shim of StringPropertyConfiguration.IsOptional()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsRequired">
            <summary>Sets the shim of StringPropertyConfiguration.IsRequired()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsUnicode">
            <summary>Sets the shim of StringPropertyConfiguration.IsUnicode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsUnicodeNullableOfBoolean">
            <summary>Sets the shim of StringPropertyConfiguration.IsUnicode(Nullable`1&lt;Boolean&gt; unicode)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStringPropertyConfiguration.AllInstances.IsVariableLength">
            <summary>Sets the shim of StringPropertyConfiguration.IsVariableLength()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.Constructor">
            <summary>Sets the shim of StructuralTypeConfiguration`1.StructuralTypeConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.EqualsObject">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.GetHashCode">
            <summary>Sets the shim of StructuralTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.GetType">
            <summary>Sets the shim of StructuralTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0ByteArray">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0DateTime">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTime&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0DateTimeOffset">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTimeOffset&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0DbGeography">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0DbGeometry">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0Decimal">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Decimal&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDateTime">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTime&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDateTimeOffset">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTimeOffset&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfDecimal">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;Decimal&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0NullableOfTimeSpan">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;TimeSpan&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0String">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.PropertyExpressionOfFuncOfT0TimeSpan">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,TimeSpan&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.ToString">
            <summary>Sets the shim of StructuralTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of StructuralTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of StructuralTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0ByteArray">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DateTime">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTime&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DateTimeOffset">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DateTimeOffset&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DbGeography">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0DbGeometry">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0Decimal">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Decimal&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDateTime">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTime&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDateTimeOffset">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;DateTimeOffset&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfDecimal">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;Decimal&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0NullableOfTimeSpan">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,Nullable`1&lt;TimeSpan&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0String">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.PropertyExpressionOfFuncOfT0TimeSpan">
            <summary>Sets the shim of StructuralTypeConfiguration`1.Property(Expression`1&lt;Func`2&lt;!0,TimeSpan&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimStructuralTypeConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of StructuralTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.HavingOf1FuncOfTypeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Type,``0},System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{``0}})">
            <summary>Sets the shim of TypeConventionConfiguration.Having(Func`2&lt;Type,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.ConfigureActionOfConventionTypeConfiguration">
            <summary>Sets the shim of TypeConventionConfiguration.Configure(Action`1&lt;ConventionTypeConfiguration&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.ConstructorConventionsConfiguration">
            <summary>Sets the shim of TypeConventionConfiguration.TypeConventionConfiguration(ConventionsConfiguration conventionsConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.ConstructorConventionsConfigurationIEnumerableOfFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration.TypeConventionConfiguration(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;Type,Boolean&gt;&gt; predicates)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionConfiguration.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.EqualsObject">
            <summary>Sets the shim of TypeConventionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.GetHashCode">
            <summary>Sets the shim of TypeConventionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.GetType">
            <summary>Sets the shim of TypeConventionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.PredicatesGet">
            <summary>Sets the shim of TypeConventionConfiguration.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.ToString">
            <summary>Sets the shim of TypeConventionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.WhereFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration.Where(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.HavingOf1FuncOfTypeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration,System.Func{System.Type,``0},System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{``0}})">
            <summary>Sets the shim of TypeConventionConfiguration.Having(Func`2&lt;Type,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.ConfigureActionOfConventionTypeConfiguration">
            <summary>Sets the shim of TypeConventionConfiguration.Configure(Action`1&lt;ConventionTypeConfiguration&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionConfiguration.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of TypeConventionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of TypeConventionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of TypeConventionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.PredicatesGet">
            <summary>Sets the shim of TypeConventionConfiguration.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of TypeConventionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration.AllInstances.WhereFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration.Where(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.HavingOf1FuncOfTypeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Type,``0},System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{`0,``0}})">
            <summary>Sets the shim of TypeConventionConfiguration`1.Having(Func`2&lt;Type,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.ConfigureActionOfConventionTypeConfigurationOfT0">
            <summary>Sets the shim of TypeConventionConfiguration`1.Configure(Action`1&lt;ConventionTypeConfiguration`1&lt;!0&gt;&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.ConstructorConventionsConfiguration">
            <summary>Sets the shim of TypeConventionConfiguration`1.TypeConventionConfiguration`1(ConventionsConfiguration conventionsConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.ConstructorConventionsConfigurationIEnumerableOfFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration`1.TypeConventionConfiguration`1(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;Type,Boolean&gt;&gt; predicates)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.EqualsObject">
            <summary>Sets the shim of TypeConventionConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.GetHashCode">
            <summary>Sets the shim of TypeConventionConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.GetType">
            <summary>Sets the shim of TypeConventionConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.PredicatesGet">
            <summary>Sets the shim of TypeConventionConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.ToString">
            <summary>Sets the shim of TypeConventionConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.WhereFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration`1.Where(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.HavingOf1FuncOfTypeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{`0},System.Func{System.Type,``0},System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{`0,``0}})">
            <summary>Sets the shim of TypeConventionConfiguration`1.Having(Func`2&lt;Type,!!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.ConfigureActionOfConventionTypeConfigurationOfT0">
            <summary>Sets the shim of TypeConventionConfiguration`1.Configure(Action`1&lt;ConventionTypeConfiguration`1&lt;!0&gt;&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of TypeConventionConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of TypeConventionConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of TypeConventionConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.PredicatesGet">
            <summary>Sets the shim of TypeConventionConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of TypeConventionConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionConfiguration`1.AllInstances.WhereFuncOfTypeBoolean">
            <summary>Sets the shim of TypeConventionConfiguration`1.Where(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.CapturingPredicateGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.ConfigureActionOfConventionTypeConfigurationT0">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.Configure(Action`2&lt;ConventionTypeConfiguration,!0&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.ConstructorConventionsConfigurationIEnumerableOfFuncOfTypeBooleanFuncOfTypeT0">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.TypeConventionWithHavingConfiguration`1(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;Type,Boolean&gt;&gt; predicates, Func`2&lt;Type,!0&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.EqualsObject">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.GetHashCode">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.GetType">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.PredicatesGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.ToString">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.CapturingPredicateGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.ConfigureActionOfConventionTypeConfigurationT0">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.Configure(Action`2&lt;ConventionTypeConfiguration,!0&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.PredicatesGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.#ctor(System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.CapturingPredicateGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.ConfigureActionOfConventionTypeConfigurationOfT0T1">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.Configure(Action`2&lt;ConventionTypeConfiguration`1&lt;!0&gt;,!1&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.ConstructorConventionsConfigurationIEnumerableOfFuncOfTypeBooleanFuncOfTypeT1">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.TypeConventionWithHavingConfiguration`2(ConventionsConfiguration conventionsConfiguration, IEnumerable`1&lt;Func`2&lt;Type,Boolean&gt;&gt; predicates, Func`2&lt;Type,!1&gt; capturingPredicate)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.EqualsObject">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.GetHashCode">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.GetType">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.PredicatesGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.ToString">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.CapturingPredicateGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_CapturingPredicate()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.ConfigureActionOfConventionTypeConfigurationOfT0T1">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.Configure(Action`2&lt;ConventionTypeConfiguration`1&lt;!0&gt;,!1&gt; entityConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.ConventionsConfigurationGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_ConventionsConfiguration()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.EqualsObject">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.GetType01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.PredicatesGet">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.get_Predicates()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimTypeConventionWithHavingConfiguration`2.AllInstances.ToString01">
            <summary>Sets the shim of TypeConventionWithHavingConfiguration`2.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.Constructor">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.UpdateModificationStoredProcedureConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.EqualsObject">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.GetHashCode">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.GetType">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.HasNameString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.HasNameStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0ByteArrayStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeographyStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0DbGeometryStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ParameterExpressionOfFuncOfT0StringStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ResultExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.RowsAffectedParameterString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.ToString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0ICollectionOfT0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,ICollection`1&lt;!0&gt;&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.NavigationOf1ExpressionOfFuncOfM0T0ActionOfAssociationModificationStoredProcedureConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0},System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}},System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0}})">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Navigation(Expression`1&lt;Func`2&lt;!!0,!0&gt;&gt; navigationPropertyExpression, Action`1&lt;AssociationModificationStoredProcedureConfiguration`1&lt;!!0&gt;&gt; associationModificationStoredProcedureConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.HasNameString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.HasName(String procedureName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.HasNameStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.HasName(String procedureName, String schemaName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0ByteArrayStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeographyStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0DbGeometryStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ParameterExpressionOfFuncOfT0StringStringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Parameter(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String currentValueParameterName, String originalValueParameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0ByteArrayString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,Byte[]&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0DbGeographyString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeography&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0DbGeometryString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,DbGeometry&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ResultExpressionOfFuncOfT0StringString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.Result(Expression`1&lt;Func`2&lt;!0,String&gt;&gt; propertyExpression, String columnName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.RowsAffectedParameterString">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.RowsAffectedParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimUpdateModificationStoredProcedureConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of UpdateModificationStoredProcedureConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.#ctor(System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.DiscriminatorGet">
            <summary>Sets the shim of ValueConditionConfiguration.get_Discriminator()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.DiscriminatorSetString">
            <summary>Sets the shim of ValueConditionConfiguration.set_Discriminator(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.EqualsObject">
            <summary>Sets the shim of ValueConditionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.GetHashCode">
            <summary>Sets the shim of ValueConditionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.GetType">
            <summary>Sets the shim of ValueConditionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.HasValueString">
            <summary>Sets the shim of ValueConditionConfiguration.HasValue(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.ToString">
            <summary>Sets the shim of ValueConditionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.ValidateValueTypeObject">
            <summary>Sets the shim of ValueConditionConfiguration.ValidateValueType(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.ValueGet">
            <summary>Sets the shim of ValueConditionConfiguration.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.ValueSetObject">
            <summary>Sets the shim of ValueConditionConfiguration.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration._Configureb__bEdmProperty">
            <summary>Sets the shim of ValueConditionConfiguration.&lt;Configure&gt;b__b(EdmProperty c)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.DiscriminatorGet">
            <summary>Sets the shim of ValueConditionConfiguration.get_Discriminator()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.DiscriminatorSetString">
            <summary>Sets the shim of ValueConditionConfiguration.set_Discriminator(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.EqualsObject">
            <summary>Sets the shim of ValueConditionConfiguration.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.GetHashCode01">
            <summary>Sets the shim of ValueConditionConfiguration.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.GetType01">
            <summary>Sets the shim of ValueConditionConfiguration.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.HasValueString">
            <summary>Sets the shim of ValueConditionConfiguration.HasValue(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of ValueConditionConfiguration.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.ValueGet">
            <summary>Sets the shim of ValueConditionConfiguration.get_Value()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances.ValueSetObject">
            <summary>Sets the shim of ValueConditionConfiguration.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.ShimValueConditionConfiguration.AllInstances._Configureb__bEdmProperty">
            <summary>Sets the shim of ValueConditionConfiguration.&lt;Configure&gt;b__b(EdmProperty c)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.Equals(System.Object)">
            <summary>Sets the stub of EntityMappingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.EqualsObject">
            <summary>Sets the stub of EntityMappingConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.GetHashCode">
            <summary>Sets the stub of EntityMappingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.GetHashCode01">
            <summary>Sets the stub of EntityMappingConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityMappingConfiguration</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.ToString">
            <summary>Sets the stub of EntityMappingConfiguration`1.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.ToString01">
            <summary>Sets the stub of EntityMappingConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Configuration.Fakes.StubEntityMappingConfiguration`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EdmModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.ApplyEdmModelDbModel">
            <summary>Sets the shim of AssociationInverseDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.Constructor">
            <summary>Sets the shim of AssociationInverseDiscoveryConvention.AssociationInverseDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.FixNavigationPropertiesEdmModelAssociationTypeAssociationType">
            <summary>Sets the shim of AssociationInverseDiscoveryConvention.FixNavigationProperties(EdmModel model, AssociationType unifiedAssociation, AssociationType redundantAssociation)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention._FixNavigationPropertiesb__1cEntityType">
            <summary>Sets the shim of AssociationInverseDiscoveryConvention.&lt;FixNavigationProperties&gt;b__1c(EntityType e)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimAssociationInverseDiscoveryConvention.AllInstances.ApplyEdmModelDbModel">
            <summary>Sets the shim of AssociationInverseDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.ApplyConventionPrimitivePropertyConfigurationColumnAttribute">
            <summary>Sets the shim of ColumnAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ColumnAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.Constructor">
            <summary>Sets the shim of ColumnAttributeConvention.ColumnAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationColumnAttribute">
            <summary>Sets the shim of ColumnAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ColumnAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.Constructor">
            <summary>Sets the shim of ColumnOrderingConvention.ColumnOrderingConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.OrderColumnsIEnumerableOfEdmProperty">
            <summary>Sets the shim of ColumnOrderingConvention.OrderColumns(IEnumerable`1&lt;EdmProperty&gt; columns)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.ValidateColumnsEntityTypeString">
            <summary>Sets the shim of ColumnOrderingConvention.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConvention.AllInstances.ValidateColumnsEntityTypeString">
            <summary>Sets the shim of ColumnOrderingConvention.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.Bind(System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.Constructor">
            <summary>Sets the shim of ColumnOrderingConventionStrict.ColumnOrderingConventionStrict()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.ValidateColumnsEntityTypeString">
            <summary>Sets the shim of ColumnOrderingConventionStrict.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict._ValidateColumnsb__bEdmProperty">
            <summary>Sets the shim of ColumnOrderingConventionStrict.&lt;ValidateColumns&gt;b__b(EdmProperty c)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict._ValidateColumnsb__cNullableOfInt32">
            <summary>Sets the shim of ColumnOrderingConventionStrict.&lt;ValidateColumns&gt;b__c(Nullable`1&lt;Int32&gt; o)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict._ValidateColumnsb__dNullableOfInt32">
            <summary>Sets the shim of ColumnOrderingConventionStrict.&lt;ValidateColumns&gt;b__d(Nullable`1&lt;Int32&gt; o)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict._ValidateColumnsb__eIGroupingOfNullableOfInt32NullableOfInt32">
            <summary>Sets the shim of ColumnOrderingConventionStrict.&lt;ValidateColumns&gt;b__e(IGrouping`2&lt;Nullable`1&lt;Int32&gt;,Nullable`1&lt;Int32&gt;&gt; g)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimColumnOrderingConventionStrict.AllInstances.ValidateColumnsEntityTypeString">
            <summary>Sets the shim of ColumnOrderingConventionStrict.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.ApplyConventionTypeConfigurationComplexTypeAttribute">
            <summary>Sets the shim of ComplexTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, ComplexTypeAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.Constructor">
            <summary>Sets the shim of ComplexTypeAttributeConvention.ComplexTypeAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeAttributeConvention.AllInstances.ApplyConventionTypeConfigurationComplexTypeAttribute">
            <summary>Sets the shim of ComplexTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, ComplexTypeAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EdmModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.ApplyEdmModelDbModel">
            <summary>Sets the shim of ComplexTypeDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.Constructor">
            <summary>Sets the shim of ComplexTypeDiscoveryConvention.ComplexTypeDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention._Applyb__11NavigationProperty">
            <summary>Sets the shim of ComplexTypeDiscoveryConvention.&lt;Apply&gt;b__11(NavigationProperty n)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention._Applyb__5EntityType">
            <summary>Sets the shim of ComplexTypeDiscoveryConvention.&lt;Apply&gt;b__5(EntityType entityType)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimComplexTypeDiscoveryConvention.AllInstances.ApplyEdmModelDbModel">
            <summary>Sets the shim of ComplexTypeDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.ApplyConventionPrimitivePropertyConfigurationConcurrencyCheckAttribute">
            <summary>Sets the shim of ConcurrencyCheckAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ConcurrencyCheckAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.Constructor">
            <summary>Sets the shim of ConcurrencyCheckAttributeConvention.ConcurrencyCheckAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConcurrencyCheckAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationConcurrencyCheckAttribute">
            <summary>Sets the shim of ConcurrencyCheckAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ConcurrencyCheckAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.Convention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.Convention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.PropertiesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration})">
            <summary>Sets the shim of Convention.Properties()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.TypesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{``0}})">
            <summary>Sets the shim of Convention.Types()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention._Propertiesb__0Of1PropertyInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <summary>Sets the shim of Convention.&lt;Properties&gt;b__0(PropertyInfo p)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.Constructor">
            <summary>Sets the shim of Convention.Convention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.ConstructorConventionsConfiguration">
            <summary>Sets the shim of Convention.Convention(ConventionsConfiguration conventionsConfiguration)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.Properties">
            <summary>Sets the shim of Convention.Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.Types">
            <summary>Sets the shim of Convention.Types()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.AllInstances.PropertiesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.Convention,System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration})">
            <summary>Sets the shim of Convention.Properties()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.AllInstances.TypesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.Conventions.Convention,System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration{``0}})">
            <summary>Sets the shim of Convention.Types()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.AllInstances.Properties">
            <summary>Sets the shim of Convention.Properties()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimConvention.AllInstances.Types">
            <summary>Sets the shim of Convention.Types()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.ApplyConventionPrimitivePropertyConfigurationDatabaseGeneratedAttribute">
            <summary>Sets the shim of DatabaseGeneratedAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, DatabaseGeneratedAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.Constructor">
            <summary>Sets the shim of DatabaseGeneratedAttributeConvention.DatabaseGeneratedAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDatabaseGeneratedAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationDatabaseGeneratedAttribute">
            <summary>Sets the shim of DatabaseGeneratedAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, DatabaseGeneratedAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.ApplyEdmPropertyDbModel">
            <summary>Sets the shim of DecimalPropertyConvention.Apply(EdmProperty item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.Constructor">
            <summary>Sets the shim of DecimalPropertyConvention.DecimalPropertyConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.ConstructorByteByte">
            <summary>Sets the shim of DecimalPropertyConvention.DecimalPropertyConvention(Byte precision, Byte scale)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDecimalPropertyConvention.AllInstances.ApplyEdmPropertyDbModel">
            <summary>Sets the shim of DecimalPropertyConvention.Apply(EdmProperty item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of DeclaredPropertyOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.Constructor">
            <summary>Sets the shim of DeclaredPropertyOrderingConvention.DeclaredPropertyOrderingConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimDeclaredPropertyOrderingConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of DeclaredPropertyOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of ForeignKeyAssociationMultiplicityConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.Constructor">
            <summary>Sets the shim of ForeignKeyAssociationMultiplicityConvention.ForeignKeyAssociationMultiplicityConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention._Applyb__0EdmProperty">
            <summary>Sets the shim of ForeignKeyAssociationMultiplicityConvention.&lt;Apply&gt;b__0(EdmProperty p)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention._Applyb__1EntityType">
            <summary>Sets the shim of ForeignKeyAssociationMultiplicityConvention.&lt;Apply&gt;b__1(EntityType et)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyAssociationMultiplicityConvention.AllInstances.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of ForeignKeyAssociationMultiplicityConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.ForeignKeyDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention._Applyb__5EdmProperty">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.&lt;Apply&gt;b__5(EdmProperty p)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.AllInstances.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyDiscoveryConvention.AllInstances.SupportsMultipleAssociationsGet">
            <summary>Sets the shim of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.NavigationProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.ApplyNavigationPropertyDbModel">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.Apply(NavigationProperty item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.Constructor">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.ForeignKeyNavigationPropertyAttributeConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.GetDependentPropertiesEntityTypeIEnumerableOfStringEntityTypeNavigationProperty">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.GetDependentProperties(EntityType dependentType, IEnumerable`1&lt;String&gt; dependentPropertyNames, EntityType declaringEntityType, NavigationProperty navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention._Applyb__0String">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.&lt;Apply&gt;b__0(String p)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention._Applyb__3EdmProperty">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.&lt;Apply&gt;b__3(EdmProperty p)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyNavigationPropertyAttributeConvention.AllInstances.ApplyNavigationPropertyDbModel">
            <summary>Sets the shim of ForeignKeyNavigationPropertyAttributeConvention.Apply(NavigationProperty item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationForeignKeyAttribute">
            <summary>Sets the shim of ForeignKeyPrimitivePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, ForeignKeyAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.Constructor">
            <summary>Sets the shim of ForeignKeyPrimitivePropertyAttributeConvention.ForeignKeyPrimitivePropertyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimForeignKeyPrimitivePropertyAttributeConvention.AllInstances.ApplyPropertyInfoConventionTypeConfigurationForeignKeyAttribute">
            <summary>Sets the shim of ForeignKeyPrimitivePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, ForeignKeyAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of IdKeyDiscoveryConvention.IdKeyDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.MatchKeyPropertyEntityTypeIEnumerableOfEdmProperty">
            <summary>Sets the shim of IdKeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention._MatchKeyPropertyb__0EdmProperty">
            <summary>Sets the shim of IdKeyDiscoveryConvention.&lt;MatchKeyProperty&gt;b__0(EdmProperty p)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimIdKeyDiscoveryConvention.AllInstances.MatchKeyPropertyEntityTypeIEnumerableOfEdmProperty">
            <summary>Sets the shim of IdKeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationInversePropertyAttribute">
            <summary>Sets the shim of InversePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, InversePropertyAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.Constructor">
            <summary>Sets the shim of InversePropertyAttributeConvention.InversePropertyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimInversePropertyAttributeConvention.AllInstances.ApplyPropertyInfoConventionTypeConfigurationInversePropertyAttribute">
            <summary>Sets the shim of InversePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, InversePropertyAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.Constructor">
            <summary>Sets the shim of KeyAttributeConvention.KeyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of KeyDiscoveryConvention.KeyDiscoveryConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimKeyDiscoveryConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.Constructor">
            <summary>Sets the shim of ManyToManyCascadeDeleteConvention.ManyToManyCascadeDeleteConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimManyToManyCascadeDeleteConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.Constructor">
            <summary>Sets the shim of MappingInheritedPropertiesSupportConvention.MappingInheritedPropertiesSupportConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMappingInheritedPropertiesSupportConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.ApplyConventionPrimitivePropertyConfigurationMaxLengthAttribute">
            <summary>Sets the shim of MaxLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, MaxLengthAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.Constructor">
            <summary>Sets the shim of MaxLengthAttributeConvention.MaxLengthAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimMaxLengthAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationMaxLengthAttribute">
            <summary>Sets the shim of MaxLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, MaxLengthAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of NavigationPropertyNameForeignKeyDiscoveryConvention.NavigationPropertyNameForeignKeyDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of NavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the shim of NavigationPropertyNameForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.AllInstances.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of NavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNavigationPropertyNameForeignKeyDiscoveryConvention.AllInstances.SupportsMultipleAssociationsGet">
            <summary>Sets the shim of NavigationPropertyNameForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the shim of NotMappedPropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.Constructor">
            <summary>Sets the shim of NotMappedPropertyAttributeConvention.NotMappedPropertyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedPropertyAttributeConvention.AllInstances.ApplyPropertyInfoConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the shim of NotMappedPropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.ApplyConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the shim of NotMappedTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.Constructor">
            <summary>Sets the shim of NotMappedTypeAttributeConvention.NotMappedTypeAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimNotMappedTypeAttributeConvention.AllInstances.ApplyConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the shim of NotMappedTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of OneToManyCascadeDeleteConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.Constructor">
            <summary>Sets the shim of OneToManyCascadeDeleteConvention.OneToManyCascadeDeleteConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToManyCascadeDeleteConvention.AllInstances.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of OneToManyCascadeDeleteConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of OneToOneConstraintIntroductionConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.Constructor">
            <summary>Sets the shim of OneToOneConstraintIntroductionConvention.OneToOneConstraintIntroductionConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention._Applyb__0EdmProperty">
            <summary>Sets the shim of OneToOneConstraintIntroductionConvention.&lt;Apply&gt;b__0(EdmProperty p)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention._Applyb__1EdmProperty">
            <summary>Sets the shim of OneToOneConstraintIntroductionConvention.&lt;Apply&gt;b__1(EdmProperty p)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimOneToOneConstraintIntroductionConvention.AllInstances.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of OneToOneConstraintIntroductionConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntitySet})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.ApplyEntitySetDbModel">
            <summary>Sets the shim of PluralizingEntitySetNameConvention.Apply(EntitySet item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.Constructor">
            <summary>Sets the shim of PluralizingEntitySetNameConvention.PluralizingEntitySetNameConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.StaticConstructor">
            <summary>Sets the shim of PluralizingEntitySetNameConvention.PluralizingEntitySetNameConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingEntitySetNameConvention.AllInstances.ApplyEntitySetDbModel">
            <summary>Sets the shim of PluralizingEntitySetNameConvention.Apply(EntitySet item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of PluralizingTableNameConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.Constructor">
            <summary>Sets the shim of PluralizingTableNameConvention.PluralizingTableNameConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention._Applyb__1EntitySet">
            <summary>Sets the shim of PluralizingTableNameConvention.&lt;Apply&gt;b__1(EntitySet n)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPluralizingTableNameConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of PluralizingTableNameConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of PrimaryKeyNameForeignKeyDiscoveryConvention.PrimaryKeyNameForeignKeyDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of PrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimaryKeyNameForeignKeyDiscoveryConvention.AllInstances.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of PrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.Constructor">
            <summary>Sets the shim of PrimitivePropertyAttributeConfigurationConvention`1.PrimitivePropertyAttributeConfigurationConvention`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1._ctorb__1ConventionPrimitivePropertyConfigurationIEnumerableOfT0">
            <summary>Sets the shim of PrimitivePropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__1(ConventionPrimitivePropertyConfiguration configuration, IEnumerable`1&lt;!0&gt; attributes)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1._ctorb__2PropertyInfo">
            <summary>Sets the shim of PrimitivePropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__2(PropertyInfo pi)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.AllInstances._ctorb__1ConventionPrimitivePropertyConfigurationIEnumerableOfT0">
            <summary>Sets the shim of PrimitivePropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__1(ConventionPrimitivePropertyConfiguration configuration, IEnumerable`1&lt;!0&gt; attributes)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPrimitivePropertyAttributeConfigurationConvention`1.AllInstances._ctorb__2PropertyInfo">
            <summary>Sets the shim of PrimitivePropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__2(PropertyInfo pi)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.Constructor">
            <summary>Sets the shim of PropertyAttributeConfigurationConvention`1.PropertyAttributeConfigurationConvention`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1._ctorb__0ConventionTypeConfiguration">
            <summary>Sets the shim of PropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__0(ConventionTypeConfiguration ec)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyAttributeConfigurationConvention`1.AllInstances._ctorb__0ConventionTypeConfiguration">
            <summary>Sets the shim of PropertyAttributeConfigurationConvention`1.&lt;.ctor&gt;b__0(ConventionTypeConfiguration ec)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.ComplexType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.ApplyComplexTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.Constructor">
            <summary>Sets the shim of PropertyMaxLengthConvention.PropertyMaxLengthConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.ConstructorInt32">
            <summary>Sets the shim of PropertyMaxLengthConvention.PropertyMaxLengthConvention(Int32 length)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.SetBinaryDefaultsEdmPropertyBoolean">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetBinaryDefaults(EdmProperty property, Boolean isKey)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.SetLengthIEnumerableOfEdmPropertyICollectionOfEdmProperty">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetLength(IEnumerable`1&lt;EdmProperty&gt; properties, ICollection`1&lt;EdmProperty&gt; keyProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.SetStringDefaultsEdmPropertyBoolean">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetStringDefaults(EdmProperty property, Boolean isKey)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.ApplyAssociationTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.ApplyComplexTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of PropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.SetBinaryDefaultsEdmPropertyBoolean">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetBinaryDefaults(EdmProperty property, Boolean isKey)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.SetLengthIEnumerableOfEdmPropertyICollectionOfEdmProperty">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetLength(IEnumerable`1&lt;EdmProperty&gt; properties, ICollection`1&lt;EdmProperty&gt; keyProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimPropertyMaxLengthConvention.AllInstances.SetStringDefaultsEdmPropertyBoolean">
            <summary>Sets the shim of PropertyMaxLengthConvention.SetStringDefaults(EdmProperty property, Boolean isKey)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.Constructor">
            <summary>Sets the shim of RequiredNavigationPropertyAttributeConvention.RequiredNavigationPropertyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredNavigationPropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.ApplyConventionPrimitivePropertyConfigurationRequiredAttribute">
            <summary>Sets the shim of RequiredPrimitivePropertyAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, RequiredAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.Constructor">
            <summary>Sets the shim of RequiredPrimitivePropertyAttributeConvention.RequiredPrimitivePropertyAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimRequiredPrimitivePropertyAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationRequiredAttribute">
            <summary>Sets the shim of RequiredPrimitivePropertyAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, RequiredAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.ComplexType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.ApplyComplexTypeDbModel">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.Constructor">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.SqlCePropertyMaxLengthConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.SetDefaultsEdmProperty">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.SetDefaults(EdmProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.SetLengthIEnumerableOfEdmProperty">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.SetLength(IEnumerable`1&lt;EdmProperty&gt; properties)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.AllInstances.ApplyComplexTypeDbModel">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimSqlCePropertyMaxLengthConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of SqlCePropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.EntityType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.ApplyEntityTypeDbModel">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.Constructor">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.StoreGeneratedIdentityKeyConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.IsNonTableSplittingForeignKeyAssociationTypeEdmProperty">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.IsNonTableSplittingForeignKey(AssociationType association, EdmProperty property)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.ParentOfTpcEntityTypeEdmModel">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.ParentOfTpc(EntityType entityType, EdmModel model)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.StaticConstructor">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.StoreGeneratedIdentityKeyConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStoreGeneratedIdentityKeyConvention.AllInstances.ApplyEntityTypeDbModel">
            <summary>Sets the shim of StoreGeneratedIdentityKeyConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.ApplyConventionPrimitivePropertyConfigurationStringLengthAttribute">
            <summary>Sets the shim of StringLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, StringLengthAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.Constructor">
            <summary>Sets the shim of StringLengthAttributeConvention.StringLengthAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimStringLengthAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationStringLengthAttribute">
            <summary>Sets the shim of StringLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, StringLengthAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.ApplyConventionTypeConfigurationTableAttribute">
            <summary>Sets the shim of TableAttributeConvention.Apply(ConventionTypeConfiguration configuration, TableAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.Constructor">
            <summary>Sets the shim of TableAttributeConvention.TableAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTableAttributeConvention.AllInstances.ApplyConventionTypeConfigurationTableAttribute">
            <summary>Sets the shim of TableAttributeConvention.Apply(ConventionTypeConfiguration configuration, TableAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.ApplyConventionPrimitivePropertyConfigurationTimestampAttribute">
            <summary>Sets the shim of TimestampAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, TimestampAttribute attribute)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.Constructor">
            <summary>Sets the shim of TimestampAttributeConvention.TimestampAttributeConvention()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTimestampAttributeConvention.AllInstances.ApplyConventionPrimitivePropertyConfigurationTimestampAttribute">
            <summary>Sets the shim of TimestampAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, TimestampAttribute attribute)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.#ctor(System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.Constructor">
            <summary>Sets the shim of TypeAttributeConfigurationConvention`1.TypeAttributeConfigurationConvention`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1._ctorb__0ConventionTypeConfigurationIEnumerableOfT0">
            <summary>Sets the shim of TypeAttributeConfigurationConvention`1.&lt;.ctor&gt;b__0(ConventionTypeConfiguration configuration, IEnumerable`1&lt;!0&gt; attributes)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1._ctorb__1Type">
            <summary>Sets the shim of TypeAttributeConfigurationConvention`1.&lt;.ctor&gt;b__1(Type t)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.AllInstances._ctorb__0ConventionTypeConfigurationIEnumerableOfT0">
            <summary>Sets the shim of TypeAttributeConfigurationConvention`1.&lt;.ctor&gt;b__0(ConventionTypeConfiguration configuration, IEnumerable`1&lt;!0&gt; attributes)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeAttributeConfigurationConvention`1.AllInstances._ctorb__1Type">
            <summary>Sets the shim of TypeAttributeConfigurationConvention`1.&lt;.ctor&gt;b__1(Type t)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.#ctor(System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.Bind(System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention{System.Data.Entity.Core.Metadata.Edm.AssociationType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.Constructor">
            <summary>Sets the shim of TypeNameForeignKeyDiscoveryConvention.TypeNameForeignKeyDiscoveryConvention()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of TypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.ShimTypeNameForeignKeyDiscoveryConvention.AllInstances.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the shim of TypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of AssociationInverseDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.ApplyEdmModelDbModel">
            <summary>Sets the stub of AssociationInverseDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubAssociationInverseDiscoveryConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubAssociationInverseDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.Schema.ColumnAttribute)">
            <summary>Sets the stub of ColumnAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ColumnAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.ApplyConventionPrimitivePropertyConfigurationColumnAttribute">
            <summary>Sets the stub of ColumnAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ColumnAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubColumnAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.InitializeStub">
            <summary>Initializes a new instance of type StubColumnOrderingConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.ValidateColumns(System.Data.Entity.Core.Metadata.Edm.EntityType,System.String)">
            <summary>Sets the stub of ColumnOrderingConvention.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.ValidateColumnsEntityTypeString">
            <summary>Sets the stub of ColumnOrderingConvention.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.ApplyEntityTypeDbModel">
            <summary>Sets the stub of ColumnOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.InitializeStub">
            <summary>Initializes a new instance of type StubColumnOrderingConventionStrict</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.ValidateColumns(System.Data.Entity.Core.Metadata.Edm.EntityType,System.String)">
            <summary>Sets the stub of ColumnOrderingConventionStrict.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.ValidateColumnsEntityTypeString">
            <summary>Sets the stub of ColumnOrderingConventionStrict.ValidateColumns(EntityType table, String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubColumnOrderingConventionStrict.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute)">
            <summary>Sets the stub of ComplexTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, ComplexTypeAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.ApplyConventionTypeConfigurationComplexTypeAttribute">
            <summary>Sets the stub of ComplexTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, ComplexTypeAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubComplexTypeAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ComplexTypeDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.ApplyEdmModelDbModel">
            <summary>Sets the stub of ComplexTypeDiscoveryConvention.Apply(EdmModel item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubComplexTypeDiscoveryConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubComplexTypeDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute)">
            <summary>Sets the stub of ConcurrencyCheckAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ConcurrencyCheckAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.ApplyConventionPrimitivePropertyConfigurationConcurrencyCheckAttribute">
            <summary>Sets the stub of ConcurrencyCheckAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, ConcurrencyCheckAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubConcurrencyCheckAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConcurrencyCheckAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.Convention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention.InitializeStub">
            <summary>Initializes a new instance of type StubConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute)">
            <summary>Sets the stub of DatabaseGeneratedAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, DatabaseGeneratedAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.ApplyConventionPrimitivePropertyConfigurationDatabaseGeneratedAttribute">
            <summary>Sets the stub of DatabaseGeneratedAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, DatabaseGeneratedAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseGeneratedAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDatabaseGeneratedAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.#ctor(System.Byte,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of DecimalPropertyConvention.Apply(EdmProperty item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.ApplyEdmPropertyDbModel">
            <summary>Sets the stub of DecimalPropertyConvention.Apply(EdmProperty item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.InitializeStub">
            <summary>Initializes a new instance of type StubDecimalPropertyConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDecimalPropertyConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of DeclaredPropertyOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of DeclaredPropertyOrderingConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.InitializeStub">
            <summary>Initializes a new instance of type StubDeclaredPropertyOrderingConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubDeclaredPropertyOrderingConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyAssociationMultiplicityConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of ForeignKeyAssociationMultiplicityConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyAssociationMultiplicityConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyAssociationMultiplicityConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.Apply(System.Data.Entity.Core.Metadata.Edm.NavigationProperty,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyNavigationPropertyAttributeConvention.Apply(NavigationProperty item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.ApplyNavigationPropertyDbModel">
            <summary>Sets the stub of ForeignKeyNavigationPropertyAttributeConvention.Apply(NavigationProperty item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyNavigationPropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute)">
            <summary>Sets the stub of ForeignKeyPrimitivePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, ForeignKeyAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationForeignKeyAttribute">
            <summary>Sets the stub of ForeignKeyPrimitivePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, ForeignKeyAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubForeignKeyPrimitivePropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConceptualModelConvention`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConceptualModelConvention`1.#ctor">
            <summary>Initializes a new instance of type StubIConceptualModelConvention</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConceptualModelConvention`1.ApplyT0DbModel">
            <summary>Sets the stub of IConceptualModelConvention`1.Apply(!0 item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConceptualModelConvention`1.ef::System#Data#Entity#ModelConfiguration#Conventions#IConceptualModelConvention{T}#Apply(`0,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of IConceptualModelConvention`1.Apply(!0 item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.IConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIConvention.#ctor">
            <summary>Initializes a new instance of type StubIConvention</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIStoreModelConvention`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIStoreModelConvention`1.#ctor">
            <summary>Initializes a new instance of type StubIStoreModelConvention</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIStoreModelConvention`1.ApplyT0DbModel">
            <summary>Sets the stub of IStoreModelConvention`1.Apply(!0 item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIStoreModelConvention`1.ef::System#Data#Entity#ModelConfiguration#Conventions#IStoreModelConvention{T}#Apply(`0,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of IStoreModelConvention`1.Apply(!0 item, DbModel model)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubIdKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.MatchKeyProperty(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
            <summary>Sets the stub of IdKeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.MatchKeyPropertyEntityTypeIEnumerableOfEdmProperty">
            <summary>Sets the stub of IdKeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubIdKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>Sets the stub of InversePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, InversePropertyAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationInversePropertyAttribute">
            <summary>Sets the stub of InversePropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, InversePropertyAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubInversePropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubInversePropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubKeyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of KeyDiscoveryConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.MatchKeyProperty(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
            <summary>Sets the stub of KeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.MatchKeyPropertyEntityTypeIEnumerableOfEdmProperty">
            <summary>Sets the stub of KeyDiscoveryConvention.MatchKeyProperty(EntityType entityType, IEnumerable`1&lt;EdmProperty&gt; primitiveProperties)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention.InitializeStub">
            <summary>Initializes a new instance of type StubManyToManyCascadeDeleteConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubManyToManyCascadeDeleteConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention.InitializeStub">
            <summary>Initializes a new instance of type StubMappingInheritedPropertiesSupportConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMappingInheritedPropertiesSupportConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
            <summary>Sets the stub of MaxLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, MaxLengthAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.ApplyConventionPrimitivePropertyConfigurationMaxLengthAttribute">
            <summary>Sets the stub of MaxLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, MaxLengthAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubMaxLengthAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubMaxLengthAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubNavigationPropertyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
            <summary>Sets the stub of NavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the stub of NavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the stub of NavigationPropertyNameForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNavigationPropertyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
            <summary>Sets the stub of NavigationPropertyNameForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
            <summary>Sets the stub of NotMappedPropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.ApplyPropertyInfoConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the stub of NotMappedPropertyAttributeConvention.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubNotMappedPropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedPropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
            <summary>Sets the stub of NotMappedTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.ApplyConventionTypeConfigurationNotMappedAttribute">
            <summary>Sets the stub of NotMappedTypeAttributeConvention.Apply(ConventionTypeConfiguration configuration, NotMappedAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubNotMappedTypeAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubNotMappedTypeAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of OneToManyCascadeDeleteConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of OneToManyCascadeDeleteConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.InitializeStub">
            <summary>Initializes a new instance of type StubOneToManyCascadeDeleteConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToManyCascadeDeleteConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of OneToOneConstraintIntroductionConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of OneToOneConstraintIntroductionConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.InitializeStub">
            <summary>Initializes a new instance of type StubOneToOneConstraintIntroductionConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubOneToOneConstraintIntroductionConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of PluralizingEntitySetNameConvention.Apply(EntitySet item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.ApplyEntitySetDbModel">
            <summary>Sets the stub of PluralizingEntitySetNameConvention.Apply(EntitySet item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.InitializeStub">
            <summary>Initializes a new instance of type StubPluralizingEntitySetNameConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingEntitySetNameConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of PluralizingTableNameConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of PluralizingTableNameConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.InitializeStub">
            <summary>Initializes a new instance of type StubPluralizingTableNameConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPluralizingTableNameConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubPrimaryKeyNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
            <summary>Sets the stub of PrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the stub of PrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimaryKeyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,`0)">
            <summary>Sets the stub of PrimitivePropertyAttributeConfigurationConvention`1.Apply(ConventionPrimitivePropertyConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.ApplyConventionPrimitivePropertyConfigurationT0">
            <summary>Sets the stub of PrimitivePropertyAttributeConfigurationConvention`1.Apply(ConventionPrimitivePropertyConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.InitializeStub">
            <summary>Initializes a new instance of type StubPrimitivePropertyAttributeConfigurationConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPrimitivePropertyAttributeConfigurationConvention`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0)">
            <summary>Sets the stub of PropertyAttributeConfigurationConvention`1.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.ApplyPropertyInfoConventionTypeConfigurationT0">
            <summary>Sets the stub of PropertyAttributeConfigurationConvention`1.Apply(PropertyInfo memberInfo, ConventionTypeConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyAttributeConfigurationConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyAttributeConfigurationConvention`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.ComplexType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.ApplyComplexTypeDbModel">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of PropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyMaxLengthConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubPropertyMaxLengthConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubRequiredNavigationPropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredNavigationPropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.RequiredAttribute)">
            <summary>Sets the stub of RequiredPrimitivePropertyAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, RequiredAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.ApplyConventionPrimitivePropertyConfigurationRequiredAttribute">
            <summary>Sets the stub of RequiredPrimitivePropertyAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, RequiredAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubRequiredPrimitivePropertyAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubRequiredPrimitivePropertyAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.ComplexType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of SqlCePropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of SqlCePropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.ApplyComplexTypeDbModel">
            <summary>Sets the stub of SqlCePropertyMaxLengthConvention.Apply(ComplexType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of SqlCePropertyMaxLengthConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.InitializeStub">
            <summary>Initializes a new instance of type StubSqlCePropertyMaxLengthConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubSqlCePropertyMaxLengthConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of StoreGeneratedIdentityKeyConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.ApplyEntityTypeDbModel">
            <summary>Sets the stub of StoreGeneratedIdentityKeyConvention.Apply(EntityType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.InitializeStub">
            <summary>Initializes a new instance of type StubStoreGeneratedIdentityKeyConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStoreGeneratedIdentityKeyConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
            <summary>Sets the stub of StringLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, StringLengthAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.ApplyConventionPrimitivePropertyConfigurationStringLengthAttribute">
            <summary>Sets the stub of StringLengthAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, StringLengthAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubStringLengthAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubStringLengthAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.TableAttribute)">
            <summary>Sets the stub of TableAttributeConvention.Apply(ConventionTypeConfiguration configuration, TableAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.ApplyConventionTypeConfigurationTableAttribute">
            <summary>Sets the stub of TableAttributeConvention.Apply(ConventionTypeConfiguration configuration, TableAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubTableAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTableAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.TimestampAttribute)">
            <summary>Sets the stub of TimestampAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, TimestampAttribute attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.ApplyConventionPrimitivePropertyConfigurationTimestampAttribute">
            <summary>Sets the stub of TimestampAttributeConvention.Apply(ConventionPrimitivePropertyConfiguration configuration, TimestampAttribute attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.InitializeStub">
            <summary>Initializes a new instance of type StubTimestampAttributeConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTimestampAttributeConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0)">
            <summary>Sets the stub of TypeAttributeConfigurationConvention`1.Apply(ConventionTypeConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.ApplyConventionTypeConfigurationT0">
            <summary>Sets the stub of TypeAttributeConfigurationConvention`1.Apply(ConventionTypeConfiguration configuration, !0 attribute)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.InitializeStub">
            <summary>Initializes a new instance of type StubTypeAttributeConfigurationConvention</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeAttributeConfigurationConvention`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.ApplyAssociationTypeDbModel">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.Apply(AssociationType item, DbModel model)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.InitializeStub">
            <summary>Initializes a new instance of type StubTypeNameForeignKeyDiscoveryConvention</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
            <summary>Sets the stub of TypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.MatchDependentKeyPropertyAssociationTypeAssociationEndMemberEdmPropertyEntityTypeEdmProperty">
            <summary>Sets the stub of TypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(AssociationType associationType, AssociationEndMember dependentAssociationEnd, EdmProperty dependentProperty, EntityType principalEntityType, EdmProperty principalKeyProperty)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.SupportsMultipleAssociationsGet">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Conventions.Fakes.StubTypeNameForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
            <summary>Sets the stub of ForeignKeyDiscoveryConvention.get_SupportsMultipleAssociations()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{`0}})">
            <summary>Sets the shim of ComplexTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.Constructor">
            <summary>Sets the shim of ComplexTypeConfiguration`1.ComplexTypeConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.EqualsObject">
            <summary>Sets the shim of ComplexTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.GetHashCode">
            <summary>Sets the shim of ComplexTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.GetType">
            <summary>Sets the shim of ComplexTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.ToString">
            <summary>Sets the shim of ComplexTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{`0}})">
            <summary>Sets the shim of ComplexTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ComplexTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ComplexTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of ComplexTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimComplexTypeConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of ComplexTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.#ctor(System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.HasKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.HasManyOf1ExpressionOfFuncOfT0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasMany(Expression`1&lt;Func`2&lt;!0,ICollection`1&lt;!!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.HasOptionalOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasOptional(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.HasRequiredOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasRequired(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.MapOf1ActionOfEntityMappingConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.Map(Action`1&lt;EntityMappingConfiguration`1&lt;!!0&gt;&gt; derivedTypeMapConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.Constructor">
            <summary>Sets the shim of EntityTypeConfiguration`1.EntityTypeConfiguration`1()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.EqualsObject">
            <summary>Sets the shim of EntityTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.GetHashCode">
            <summary>Sets the shim of EntityTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.GetType">
            <summary>Sets the shim of EntityTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.HasEntitySetNameString">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.MapActionOfEntityMappingConfigurationOfT0">
            <summary>Sets the shim of EntityTypeConfiguration`1.Map(Action`1&lt;EntityMappingConfiguration`1&lt;!0&gt;&gt; entityMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.MapToStoredProcedures">
            <summary>Sets the shim of EntityTypeConfiguration`1.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.MapToStoredProceduresActionOfModificationStoredProceduresConfigurationOfT0">
            <summary>Sets the shim of EntityTypeConfiguration`1.MapToStoredProcedures(Action`1&lt;ModificationStoredProceduresConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.ToString">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.ToTableString">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.ToTableStringString">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.HasKeyOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasKey(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.HasManyOf1ExpressionOfFuncOfT0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasMany(Expression`1&lt;Func`2&lt;!0,ICollection`1&lt;!!0&gt;&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.HasOptionalOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasOptional(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.HasRequiredOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration{`0,``0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasRequired(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; navigationPropertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.IgnoreOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.Ignore(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.MapOf1ActionOfEntityMappingConfigurationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0},System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{``0}},System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{`0}})">
            <summary>Sets the shim of EntityTypeConfiguration`1.Map(Action`1&lt;EntityMappingConfiguration`1&lt;!!0&gt;&gt; derivedTypeMapConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.EqualsObject">
            <summary>Sets the shim of EntityTypeConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of EntityTypeConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.GetType01">
            <summary>Sets the shim of EntityTypeConfiguration`1.GetType()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.HasEntitySetNameString">
            <summary>Sets the shim of EntityTypeConfiguration`1.HasEntitySetName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.MapActionOfEntityMappingConfigurationOfT0">
            <summary>Sets the shim of EntityTypeConfiguration`1.Map(Action`1&lt;EntityMappingConfiguration`1&lt;!0&gt;&gt; entityMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.MapToStoredProcedures">
            <summary>Sets the shim of EntityTypeConfiguration`1.MapToStoredProcedures()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.MapToStoredProceduresActionOfModificationStoredProceduresConfigurationOfT0">
            <summary>Sets the shim of EntityTypeConfiguration`1.MapToStoredProcedures(Action`1&lt;ModificationStoredProceduresConfiguration`1&lt;!0&gt;&gt; modificationStoredProcedureMappingConfigurationAction)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.ToString01">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.ToTableString">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToTable(String tableName)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimEntityTypeConfiguration`1.AllInstances.ToTableStringString">
            <summary>Sets the shim of EntityTypeConfiguration`1.ToTable(String tableName, String schemaName)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException">
            <summary>Shim type of System.Data.Entity.ModelConfiguration.ModelValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.#ctor(System.Data.Entity.ModelConfiguration.ModelValidationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.Constructor">
            <summary>Sets the shim of ModelValidationException.ModelValidationException()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.ConstructorIEnumerableOfDataModelErrorEventArgs">
            <summary>Sets the shim of ModelValidationException.ModelValidationException(IEnumerable`1&lt;DataModelErrorEventArgs&gt; validationErrors)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ModelValidationException.ModelValidationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.ConstructorString">
            <summary>Sets the shim of ModelValidationException.ModelValidationException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.ConstructorStringException">
            <summary>Sets the shim of ModelValidationException.ModelValidationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.ShimModelValidationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException">
            <summary>Stub type of System.Data.Entity.ModelConfiguration.ModelValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubModelValidationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubModelValidationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.InitializeStub">
            <summary>Initializes a new instance of type StubModelValidationException</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Fakes.StubModelValidationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeography">
            <summary>Shim type of System.Data.Entity.Spatial.DbGeography</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeography.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeography.#ctor(System.Data.Entity.Spatial.DbGeography)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeography.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeography.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AreaGet">
            <summary>Sets the shim of DbGeography.get_Area()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AsBinary">
            <summary>Sets the shim of DbGeography.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AsGml">
            <summary>Sets the shim of DbGeography.AsGml()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AsText">
            <summary>Sets the shim of DbGeography.AsText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeography.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeography.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.Constructor">
            <summary>Sets the shim of DbGeography.DbGeography()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ConstructorDbSpatialServicesObject">
            <summary>Sets the shim of DbGeography.DbGeography(DbSpatialServices spatialServices, Object spatialProviderValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.DefaultCoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_DefaultCoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.DifferenceDbGeography">
            <summary>Sets the shim of DbGeography.Difference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.DimensionGet">
            <summary>Sets the shim of DbGeography.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.DisjointDbGeography">
            <summary>Sets the shim of DbGeography.Disjoint(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.DistanceDbGeography">
            <summary>Sets the shim of DbGeography.Distance(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ElementAtInt32">
            <summary>Sets the shim of DbGeography.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ElementCountGet">
            <summary>Sets the shim of DbGeography.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ElevationGet">
            <summary>Sets the shim of DbGeography.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.EndPointGet">
            <summary>Sets the shim of DbGeography.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromBinaryByteArray">
            <summary>Sets the shim of DbGeography.FromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.FromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromGmlString">
            <summary>Sets the shim of DbGeography.FromGml(String geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromGmlStringInt32">
            <summary>Sets the shim of DbGeography.FromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromTextString">
            <summary>Sets the shim of DbGeography.FromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.FromTextStringInt32">
            <summary>Sets the shim of DbGeography.FromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.GeographyCollectionFromTextStringInt32">
            <summary>Sets the shim of DbGeography.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.IntersectionDbGeography">
            <summary>Sets the shim of DbGeography.Intersection(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.IntersectsDbGeography">
            <summary>Sets the shim of DbGeography.Intersects(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.IsClosedGet">
            <summary>Sets the shim of DbGeography.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.IsEmptyGet">
            <summary>Sets the shim of DbGeography.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.LatitudeGet">
            <summary>Sets the shim of DbGeography.get_Latitude()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.LengthGet">
            <summary>Sets the shim of DbGeography.get_Length()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.LineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.LineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.LineFromTextStringInt32">
            <summary>Sets the shim of DbGeography.LineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.LongitudeGet">
            <summary>Sets the shim of DbGeography.get_Longitude()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MeasureGet">
            <summary>Sets the shim of DbGeography.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiLineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiLineFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiPointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiPointFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.MultiPolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PointAtInt32">
            <summary>Sets the shim of DbGeography.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PointCountGet">
            <summary>Sets the shim of DbGeography.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.PointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PointFromTextStringInt32">
            <summary>Sets the shim of DbGeography.PointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.PolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.PolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeography.PolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ProviderGet">
            <summary>Sets the shim of DbGeography.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ProviderValueGet">
            <summary>Sets the shim of DbGeography.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.SpatialEqualsDbGeography">
            <summary>Sets the shim of DbGeography.SpatialEquals(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeography.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.StartPointGet">
            <summary>Sets the shim of DbGeography.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.SymmetricDifferenceDbGeography">
            <summary>Sets the shim of DbGeography.SymmetricDifference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.ToString">
            <summary>Sets the shim of DbGeography.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.UnionDbGeography">
            <summary>Sets the shim of DbGeography.Union(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.WellKnownValueGet">
            <summary>Sets the shim of DbGeography.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.WellKnownValueSetDbGeographyWellKnownValue">
            <summary>Sets the shim of DbGeography.set_WellKnownValue(DbGeographyWellKnownValue value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.AreaGet">
            <summary>Sets the shim of DbGeography.get_Area()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.AsBinary">
            <summary>Sets the shim of DbGeography.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.AsGml">
            <summary>Sets the shim of DbGeography.AsGml()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.AsText">
            <summary>Sets the shim of DbGeography.AsText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeography.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeography.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.DifferenceDbGeography">
            <summary>Sets the shim of DbGeography.Difference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.DimensionGet">
            <summary>Sets the shim of DbGeography.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.DisjointDbGeography">
            <summary>Sets the shim of DbGeography.Disjoint(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.DistanceDbGeography">
            <summary>Sets the shim of DbGeography.Distance(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ElementAtInt32">
            <summary>Sets the shim of DbGeography.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ElementCountGet">
            <summary>Sets the shim of DbGeography.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ElevationGet">
            <summary>Sets the shim of DbGeography.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.EndPointGet">
            <summary>Sets the shim of DbGeography.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.IntersectionDbGeography">
            <summary>Sets the shim of DbGeography.Intersection(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.IntersectsDbGeography">
            <summary>Sets the shim of DbGeography.Intersects(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.IsClosedGet">
            <summary>Sets the shim of DbGeography.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.IsEmptyGet">
            <summary>Sets the shim of DbGeography.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.LatitudeGet">
            <summary>Sets the shim of DbGeography.get_Latitude()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.LengthGet">
            <summary>Sets the shim of DbGeography.get_Length()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.LongitudeGet">
            <summary>Sets the shim of DbGeography.get_Longitude()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.MeasureGet">
            <summary>Sets the shim of DbGeography.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.PointAtInt32">
            <summary>Sets the shim of DbGeography.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.PointCountGet">
            <summary>Sets the shim of DbGeography.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ProviderGet">
            <summary>Sets the shim of DbGeography.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ProviderValueGet">
            <summary>Sets the shim of DbGeography.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.SpatialEqualsDbGeography">
            <summary>Sets the shim of DbGeography.SpatialEquals(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeography.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.StartPointGet">
            <summary>Sets the shim of DbGeography.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.SymmetricDifferenceDbGeography">
            <summary>Sets the shim of DbGeography.SymmetricDifference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.ToString01">
            <summary>Sets the shim of DbGeography.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.UnionDbGeography">
            <summary>Sets the shim of DbGeography.Union(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.WellKnownValueGet">
            <summary>Sets the shim of DbGeography.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeography.AllInstances.WellKnownValueSetDbGeographyWellKnownValue">
            <summary>Sets the shim of DbGeography.set_WellKnownValue(DbGeographyWellKnownValue value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue">
            <summary>Shim type of System.Data.Entity.Spatial.DbGeographyWellKnownValue</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.#ctor(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.Constructor">
            <summary>Sets the shim of DbGeographyWellKnownValue.DbGeographyWellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownTextGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownTextSetString">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownTextGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownTextSetString">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeometry">
            <summary>Shim type of System.Data.Entity.Spatial.DbGeometry</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.#ctor(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AreaGet">
            <summary>Sets the shim of DbGeometry.get_Area()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AsBinary">
            <summary>Sets the shim of DbGeometry.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AsGml">
            <summary>Sets the shim of DbGeometry.AsGml()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AsText">
            <summary>Sets the shim of DbGeometry.AsText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeometry.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.BoundaryGet">
            <summary>Sets the shim of DbGeometry.get_Boundary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeometry.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.CentroidGet">
            <summary>Sets the shim of DbGeometry.get_Centroid()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.Constructor">
            <summary>Sets the shim of DbGeometry.DbGeometry()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ConstructorDbSpatialServicesObject">
            <summary>Sets the shim of DbGeometry.DbGeometry(DbSpatialServices spatialServices, Object spatialProviderValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ContainsDbGeometry">
            <summary>Sets the shim of DbGeometry.Contains(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ConvexHullGet">
            <summary>Sets the shim of DbGeometry.get_ConvexHull()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.CrossesDbGeometry">
            <summary>Sets the shim of DbGeometry.Crosses(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.DefaultCoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_DefaultCoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.DifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.Difference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.DimensionGet">
            <summary>Sets the shim of DbGeometry.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.DisjointDbGeometry">
            <summary>Sets the shim of DbGeometry.Disjoint(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.DistanceDbGeometry">
            <summary>Sets the shim of DbGeometry.Distance(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ElementAtInt32">
            <summary>Sets the shim of DbGeometry.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ElementCountGet">
            <summary>Sets the shim of DbGeometry.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ElevationGet">
            <summary>Sets the shim of DbGeometry.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.EndPointGet">
            <summary>Sets the shim of DbGeometry.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.EnvelopeGet">
            <summary>Sets the shim of DbGeometry.get_Envelope()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ExteriorRingGet">
            <summary>Sets the shim of DbGeometry.get_ExteriorRing()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromBinaryByteArray">
            <summary>Sets the shim of DbGeometry.FromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.FromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromGmlString">
            <summary>Sets the shim of DbGeometry.FromGml(String geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromGmlStringInt32">
            <summary>Sets the shim of DbGeometry.FromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromTextString">
            <summary>Sets the shim of DbGeometry.FromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.FromTextStringInt32">
            <summary>Sets the shim of DbGeometry.FromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.GeometryCollectionFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.InteriorRingAtInt32">
            <summary>Sets the shim of DbGeometry.InteriorRingAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.InteriorRingCountGet">
            <summary>Sets the shim of DbGeometry.get_InteriorRingCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IntersectionDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersection(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IntersectsDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersects(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IsClosedGet">
            <summary>Sets the shim of DbGeometry.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IsEmptyGet">
            <summary>Sets the shim of DbGeometry.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IsRingGet">
            <summary>Sets the shim of DbGeometry.get_IsRing()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IsSimpleGet">
            <summary>Sets the shim of DbGeometry.get_IsSimple()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.IsValidGet">
            <summary>Sets the shim of DbGeometry.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.LengthGet">
            <summary>Sets the shim of DbGeometry.get_Length()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.LineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.LineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.LineFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.LineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MeasureGet">
            <summary>Sets the shim of DbGeometry.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiLineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiLineFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiPointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiPointFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.MultiPolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.OverlapsDbGeometry">
            <summary>Sets the shim of DbGeometry.Overlaps(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PointAtInt32">
            <summary>Sets the shim of DbGeometry.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PointCountGet">
            <summary>Sets the shim of DbGeometry.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.PointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PointFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.PointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PointOnSurfaceGet">
            <summary>Sets the shim of DbGeometry.get_PointOnSurface()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.PolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.PolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.PolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ProviderGet">
            <summary>Sets the shim of DbGeometry.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ProviderValueGet">
            <summary>Sets the shim of DbGeometry.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.RelateDbGeometryString">
            <summary>Sets the shim of DbGeometry.Relate(DbGeometry other, String matrix)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.SpatialEqualsDbGeometry">
            <summary>Sets the shim of DbGeometry.SpatialEquals(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeometry.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.StartPointGet">
            <summary>Sets the shim of DbGeometry.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.SymmetricDifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.SymmetricDifference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.ToString">
            <summary>Sets the shim of DbGeometry.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.TouchesDbGeometry">
            <summary>Sets the shim of DbGeometry.Touches(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.UnionDbGeometry">
            <summary>Sets the shim of DbGeometry.Union(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.WellKnownValueGet">
            <summary>Sets the shim of DbGeometry.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.WellKnownValueSetDbGeometryWellKnownValue">
            <summary>Sets the shim of DbGeometry.set_WellKnownValue(DbGeometryWellKnownValue value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.WithinDbGeometry">
            <summary>Sets the shim of DbGeometry.Within(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.XCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_XCoordinate()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.YCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_YCoordinate()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.AreaGet">
            <summary>Sets the shim of DbGeometry.get_Area()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.AsBinary">
            <summary>Sets the shim of DbGeometry.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.AsGml">
            <summary>Sets the shim of DbGeometry.AsGml()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.AsText">
            <summary>Sets the shim of DbGeometry.AsText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeometry.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.BoundaryGet">
            <summary>Sets the shim of DbGeometry.get_Boundary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeometry.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.CentroidGet">
            <summary>Sets the shim of DbGeometry.get_Centroid()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ContainsDbGeometry">
            <summary>Sets the shim of DbGeometry.Contains(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ConvexHullGet">
            <summary>Sets the shim of DbGeometry.get_ConvexHull()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.CrossesDbGeometry">
            <summary>Sets the shim of DbGeometry.Crosses(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.DifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.Difference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.DimensionGet">
            <summary>Sets the shim of DbGeometry.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.DisjointDbGeometry">
            <summary>Sets the shim of DbGeometry.Disjoint(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.DistanceDbGeometry">
            <summary>Sets the shim of DbGeometry.Distance(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ElementAtInt32">
            <summary>Sets the shim of DbGeometry.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ElementCountGet">
            <summary>Sets the shim of DbGeometry.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ElevationGet">
            <summary>Sets the shim of DbGeometry.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.EndPointGet">
            <summary>Sets the shim of DbGeometry.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.EnvelopeGet">
            <summary>Sets the shim of DbGeometry.get_Envelope()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ExteriorRingGet">
            <summary>Sets the shim of DbGeometry.get_ExteriorRing()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.InteriorRingAtInt32">
            <summary>Sets the shim of DbGeometry.InteriorRingAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.InteriorRingCountGet">
            <summary>Sets the shim of DbGeometry.get_InteriorRingCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IntersectionDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersection(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IntersectsDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersects(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IsClosedGet">
            <summary>Sets the shim of DbGeometry.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IsEmptyGet">
            <summary>Sets the shim of DbGeometry.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IsRingGet">
            <summary>Sets the shim of DbGeometry.get_IsRing()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IsSimpleGet">
            <summary>Sets the shim of DbGeometry.get_IsSimple()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.IsValidGet">
            <summary>Sets the shim of DbGeometry.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.LengthGet">
            <summary>Sets the shim of DbGeometry.get_Length()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.MeasureGet">
            <summary>Sets the shim of DbGeometry.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.OverlapsDbGeometry">
            <summary>Sets the shim of DbGeometry.Overlaps(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.PointAtInt32">
            <summary>Sets the shim of DbGeometry.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.PointCountGet">
            <summary>Sets the shim of DbGeometry.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.PointOnSurfaceGet">
            <summary>Sets the shim of DbGeometry.get_PointOnSurface()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ProviderGet">
            <summary>Sets the shim of DbGeometry.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ProviderValueGet">
            <summary>Sets the shim of DbGeometry.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.RelateDbGeometryString">
            <summary>Sets the shim of DbGeometry.Relate(DbGeometry other, String matrix)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.SpatialEqualsDbGeometry">
            <summary>Sets the shim of DbGeometry.SpatialEquals(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeometry.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.StartPointGet">
            <summary>Sets the shim of DbGeometry.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.SymmetricDifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.SymmetricDifference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.ToString01">
            <summary>Sets the shim of DbGeometry.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.TouchesDbGeometry">
            <summary>Sets the shim of DbGeometry.Touches(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.UnionDbGeometry">
            <summary>Sets the shim of DbGeometry.Union(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.WellKnownValueGet">
            <summary>Sets the shim of DbGeometry.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.WellKnownValueSetDbGeometryWellKnownValue">
            <summary>Sets the shim of DbGeometry.set_WellKnownValue(DbGeometryWellKnownValue value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.WithinDbGeometry">
            <summary>Sets the shim of DbGeometry.Within(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.XCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_XCoordinate()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometry.AllInstances.YCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_YCoordinate()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue">
            <summary>Shim type of System.Data.Entity.Spatial.DbGeometryWellKnownValue</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.#ctor(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.Constructor">
            <summary>Sets the shim of DbGeometryWellKnownValue.DbGeometryWellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownTextGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownTextSetString">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownTextGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownTextSetString">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader">
            <summary>Shim type of System.Data.Entity.Spatial.DbSpatialDataReader</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.#ctor(System.Data.Entity.Spatial.DbSpatialDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.Constructor">
            <summary>Sets the shim of DbSpatialDataReader.DbSpatialDataReader()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbSpatialDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices">
            <summary>Shim type of System.Data.Entity.Spatial.DbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.#ctor(System.Data.Entity.Spatial.DbSpatialServices)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.Constructor">
            <summary>Sets the shim of DbSpatialServices.DbSpatialServices()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.CreateGeographyDbSpatialServicesObject">
            <summary>Sets the shim of DbSpatialServices.CreateGeography(DbSpatialServices spatialServices, Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.CreateGeometryDbSpatialServicesObject">
            <summary>Sets the shim of DbSpatialServices.CreateGeometry(DbSpatialServices spatialServices, Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.DefaultGet">
            <summary>Sets the shim of DbSpatialServices.get_Default()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.NativeTypesAvailableGet">
            <summary>Sets the shim of DbSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.StaticConstructor">
            <summary>Sets the shim of DbSpatialServices.DbSpatialServices()</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices._cctorb__0">
            <summary>Sets the shim of DbSpatialServices.&lt;.cctor&gt;b__0()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.ShimDbSpatialServices.AllInstances.NativeTypesAvailableGet">
            <summary>Sets the shim of DbSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader">
            <summary>Stub type of System.Data.Entity.Spatial.DbSpatialDataReader</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.GetGeography(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.GetGeography(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.GetGeographyInt32">
            <summary>Sets the stub of DbSpatialDataReader.GetGeography(Int32 ordinal)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.GetGeometry(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.GetGeometry(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.GetGeometryInt32">
            <summary>Sets the stub of DbSpatialDataReader.GetGeometry(Int32 ordinal)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.InitializeStub">
            <summary>Initializes a new instance of type StubDbSpatialDataReader</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.IsGeographyColumn(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.IsGeographyColumn(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.IsGeographyColumnInt32">
            <summary>Sets the stub of DbSpatialDataReader.IsGeographyColumn(Int32 ordinal)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.IsGeometryColumn(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.IsGeometryColumn(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.IsGeometryColumnInt32">
            <summary>Sets the stub of DbSpatialDataReader.IsGeometryColumn(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialDataReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices">
            <summary>Stub type of System.Data.Entity.Spatial.DbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsBinaryDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsBinaryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsGmlDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsGmlDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsText(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsText(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeography,System.Double)">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeometry,System.Double)">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.BufferDbGeographyDouble">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.BufferDbGeometryDouble">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Contains(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.ContainsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateProviderValueDbGeographyWellKnownValue">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateProviderValueDbGeometryWellKnownValue">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValueDbGeography">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValueDbGeometry">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Crosses(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CrossesDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Difference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Difference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DifferenceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DifferenceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DisjointDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DisjointDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Distance(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Distance(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DistanceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.DistanceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.ElementAtDbGeographyInt32">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.ElementAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinary(System.Byte[])">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinaryByteArray">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromGml(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromGml(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromGmlString">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromGmlStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromProviderValue(System.Object)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromProviderValueObject">
            <summary>Sets the stub of DbSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromText(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromTextString">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinary(System.Byte[])">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinaryByteArray">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromGml(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromGml(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromGmlString">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromGmlStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromProviderValue(System.Object)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromProviderValueObject">
            <summary>Sets the stub of DbSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromText(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromTextString">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetAreaDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetAreaDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetBoundary(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetBoundaryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCentroid(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCentroidDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetConvexHull(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetConvexHullDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemIdDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemIdDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetDimensionDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetDimensionDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElementCountDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElementCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElevationDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetElevationDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEndPointDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEndPointDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEnvelope(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetEnvelopeDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetExteriorRing(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetExteriorRingDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetInteriorRingCount(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetInteriorRingCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsClosedDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsClosedDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsEmptyDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsEmptyDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsRing(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsRingDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsSimple(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsSimpleDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsValid(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetIsValidDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLatitude(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLatitudeDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLengthDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLengthDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLongitude(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetLongitudeDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetMeasureDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetMeasureDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointCountDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointOnSurface(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetPointOnSurfaceDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeNameDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeNameDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetStartPointDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetStartPointDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetXCoordinate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetXCoordinateDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetYCoordinate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.GetYCoordinateDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.InitializeStub">
            <summary>Initializes a new instance of type StubDbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.InteriorRingAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.InteriorRingAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.IntersectionDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.IntersectionDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.IntersectsDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.IntersectsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.NativeTypesAvailableGet">
            <summary>Sets the stub of DbSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Overlaps(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.OverlapsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.PointAtDbGeographyInt32">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.PointAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Relate(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry,System.String)">
            <summary>Sets the stub of DbSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.RelateDbGeometryDbGeometryString">
            <summary>Sets the stub of DbSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SpatialEqualsDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SpatialEqualsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SymmetricDifferenceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.SymmetricDifferenceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Touches(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.TouchesDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Union(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Union(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.UnionDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.UnionDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.Within(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.WithinDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Spatial.Fakes.StubDbSpatialServices.NativeTypesAvailable">
            <summary>Sets the stub of DbSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException">
            <summary>Shim type of System.Data.Entity.Validation.DbEntityValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.#ctor(System.Data.Entity.Validation.DbEntityValidationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.Constructor">
            <summary>Sets the shim of DbEntityValidationException.DbEntityValidationException()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.ConstructorString">
            <summary>Sets the shim of DbEntityValidationException.DbEntityValidationException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.ConstructorStringException">
            <summary>Sets the shim of DbEntityValidationException.DbEntityValidationException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.ConstructorStringIEnumerableOfDbEntityValidationResult">
            <summary>Sets the shim of DbEntityValidationException.DbEntityValidationException(String message, IEnumerable`1&lt;DbEntityValidationResult&gt; entityValidationResults)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.ConstructorStringIEnumerableOfDbEntityValidationResultException">
            <summary>Sets the shim of DbEntityValidationException.DbEntityValidationException(String message, IEnumerable`1&lt;DbEntityValidationResult&gt; entityValidationResults, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.EntityValidationErrorsGet">
            <summary>Sets the shim of DbEntityValidationException.get_EntityValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.SubscribeToSerializeObjectState">
            <summary>Sets the shim of DbEntityValidationException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of DbEntityValidationException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object exception, SafeSerializationEventArgs eventArgs)</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.AllInstances.EntityValidationErrorsGet">
            <summary>Sets the shim of DbEntityValidationException.get_EntityValidationErrors()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.AllInstances.SubscribeToSerializeObjectState">
            <summary>Sets the shim of DbEntityValidationException.SubscribeToSerializeObjectState()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationException.AllInstances._SubscribeToSerializeObjectStateb__0ObjectSafeSerializationEventArgs">
            <summary>Sets the shim of DbEntityValidationException.&lt;SubscribeToSerializeObjectState&gt;b__0(Object exception, SafeSerializationEventArgs eventArgs)</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult">
            <summary>Shim type of System.Data.Entity.Validation.DbEntityValidationResult</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.#ctor(System.Data.Entity.Validation.DbEntityValidationResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.ConstructorDbEntityEntryIEnumerableOfDbValidationError">
            <summary>Sets the shim of DbEntityValidationResult.DbEntityValidationResult(DbEntityEntry entry, IEnumerable`1&lt;DbValidationError&gt; validationErrors)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.EntryGet">
            <summary>Sets the shim of DbEntityValidationResult.get_Entry()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.IsValidGet">
            <summary>Sets the shim of DbEntityValidationResult.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.ValidationErrorsGet">
            <summary>Sets the shim of DbEntityValidationResult.get_ValidationErrors()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.AllInstances.EntryGet">
            <summary>Sets the shim of DbEntityValidationResult.get_Entry()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.AllInstances.IsValidGet">
            <summary>Sets the shim of DbEntityValidationResult.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbEntityValidationResult.AllInstances.ValidationErrorsGet">
            <summary>Sets the shim of DbEntityValidationResult.get_ValidationErrors()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException">
            <summary>Shim type of System.Data.Entity.Validation.DbUnexpectedValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.#ctor(System.Data.Entity.Validation.DbUnexpectedValidationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.Constructor">
            <summary>Sets the shim of DbUnexpectedValidationException.DbUnexpectedValidationException()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of DbUnexpectedValidationException.DbUnexpectedValidationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.ConstructorString">
            <summary>Sets the shim of DbUnexpectedValidationException.DbUnexpectedValidationException(String message)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.ConstructorStringException">
            <summary>Sets the shim of DbUnexpectedValidationException.DbUnexpectedValidationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbUnexpectedValidationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbValidationError">
            <summary>Shim type of System.Data.Entity.Validation.DbValidationError</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbValidationError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbValidationError.#ctor(System.Data.Entity.Validation.DbValidationError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbValidationError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.ShimDbValidationError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.ConstructorStringString">
            <summary>Sets the shim of DbValidationError.DbValidationError(String propertyName, String errorMessage)</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.ErrorMessageGet">
            <summary>Sets the shim of DbValidationError.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.PropertyNameGet">
            <summary>Sets the shim of DbValidationError.get_PropertyName()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.ShimDbValidationError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of DbValidationError.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.ShimDbValidationError.AllInstances.PropertyNameGet">
            <summary>Sets the shim of DbValidationError.get_PropertyName()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException">
            <summary>Stub type of System.Data.Entity.Validation.DbEntityValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult},System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDbEntityValidationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDbEntityValidationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.InitializeStub">
            <summary>Initializes a new instance of type StubDbEntityValidationException</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult">
            <summary>Stub type of System.Data.Entity.Validation.DbEntityValidationResult</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbValidationError})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult.InitializeStub">
            <summary>Initializes a new instance of type StubDbEntityValidationResult</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbEntityValidationResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException">
            <summary>Stub type of System.Data.Entity.Validation.DbUnexpectedValidationException</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDbUnexpectedValidationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDbUnexpectedValidationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.InitializeStub">
            <summary>Initializes a new instance of type StubDbUnexpectedValidationException</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbUnexpectedValidationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Entity.Validation.Fakes.StubDbValidationError">
            <summary>Stub type of System.Data.Entity.Validation.DbValidationError</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbValidationError.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Entity.Validation.Fakes.StubDbValidationError.InitializeStub">
            <summary>Initializes a new instance of type StubDbValidationError</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbValidationError.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbValidationError.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Entity.Validation.Fakes.StubDbValidationError.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
