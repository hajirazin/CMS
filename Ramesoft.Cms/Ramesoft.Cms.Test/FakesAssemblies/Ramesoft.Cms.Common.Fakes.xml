<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ramesoft.Cms.Common.Fakes</name>
    </assembly>
    <members>
        <member name="T:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig">
            <summary>Shim type of Ramesoft.Cms.Common.Config.MapConfig</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig.CreateMaps">
            <summary>Sets the shim of MapConfig.CreateMaps()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig._CreateMapsb__0IMemberConfigurationExpressionOfProduct">
            <summary>Sets the shim of MapConfig.&lt;CreateMaps&gt;b__0(IMemberConfigurationExpression`1&lt;Product&gt; m)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig._CreateMapsb__1IMemberConfigurationExpressionOfProduct">
            <summary>Sets the shim of MapConfig.&lt;CreateMaps&gt;b__1(IMemberConfigurationExpression`1&lt;Product&gt; m)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMapConfig._CreateMapsb__2IMemberConfigurationExpressionOfProduct">
            <summary>Sets the shim of MapConfig.&lt;CreateMaps&gt;b__2(IMemberConfigurationExpression`1&lt;Product&gt; m)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration">
            <summary>Shim type of Ramesoft.Cms.Common.Config.MigrationConfiguration</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.#ctor(Ramesoft.Cms.Common.Config.MigrationConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.Constructor">
            <summary>Sets the shim of MigrationConfiguration.MigrationConfiguration()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Config.Fakes.ShimMigrationConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig">
            <summary>Shim type of Ramesoft.Cms.Common.Config.UnityConfig</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of UnityConfig.Resolve()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.ResolveOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets the shim of UnityConfig.Resolve(IDictionary arguments)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.Configure">
            <summary>Sets the shim of UnityConfig.Configure()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.ContainerGet">
            <summary>Sets the shim of UnityConfig.get_Container()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.ResolveAllType">
            <summary>Sets the shim of UnityConfig.ResolveAll(Type type)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.ShimUnityConfig.ResolveType">
            <summary>Sets the shim of UnityConfig.Resolve(Type type)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration">
            <summary>Stub type of Ramesoft.Cms.Common.Config.MigrationConfiguration</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.Equals(System.Object)">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.EqualsObject">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.GetHashCode">
            <summary>Sets the stub of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.GetHashCode01">
            <summary>Sets the stub of DbMigrationsConfiguration`1.GetHashCode()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubMigrationConfiguration</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.Seed(Ramesoft.Cms.Common.Entity.EntityContext)">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.SeedEntityContext">
            <summary>Sets the stub of DbMigrationsConfiguration`1.Seed(!0 context)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.ToString">
            <summary>Sets the stub of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.ToString01">
            <summary>Sets the stub of DbMigrationsConfiguration`1.ToString()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Config.Fakes.StubMigrationConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1">
            <summary>Shim type of Ramesoft.Cms.Common.DAL.Factory.BaseRepository`1</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.#ctor(Ramesoft.Cms.Common.DAL.Factory.BaseRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.Bind(Ramesoft.Cms.Common.DAL.Factory.IRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AddT0">
            <summary>Sets the shim of BaseRepository`1.Add(!0 item)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.ConstructorIEntityContext">
            <summary>Sets the shim of BaseRepository`1.BaseRepository`1(IEntityContext dataContextObject)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.Dispose">
            <summary>Sets the shim of BaseRepository`1.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.FindExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of BaseRepository`1.Find(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; id)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.FindFuncOfT0Boolean">
            <summary>Sets the shim of BaseRepository`1.Find(Func`2&lt;!0,Boolean&gt; id)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.GetAllGet">
            <summary>Sets the shim of BaseRepository`1.get_GetAll()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.RemoveT0">
            <summary>Sets the shim of BaseRepository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.Save">
            <summary>Sets the shim of BaseRepository`1.Save()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.AddT0">
            <summary>Sets the shim of BaseRepository`1.Add(!0 item)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.Dispose">
            <summary>Sets the shim of BaseRepository`1.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.FindExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of BaseRepository`1.Find(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; id)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.FindFuncOfT0Boolean">
            <summary>Sets the shim of BaseRepository`1.Find(Func`2&lt;!0,Boolean&gt; id)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.GetAllGet">
            <summary>Sets the shim of BaseRepository`1.get_GetAll()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.RemoveT0">
            <summary>Sets the shim of BaseRepository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimBaseRepository`1.AllInstances.Save">
            <summary>Sets the shim of BaseRepository`1.Save()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory">
            <summary>Shim type of Ramesoft.Cms.Common.DAL.Factory.RepositoryFactory</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.AddNewValueToDictionaryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Ramesoft.Cms.Common.Entity.IEntityContext,System.Object}})">
            <summary>Sets the shim of RepositoryFactory.AddNewValueToDictionary()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.GetRepositoryFactoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Ramesoft.Cms.Common.Entity.IEntityContext,System.Object}})">
            <summary>Sets the shim of RepositoryFactory.GetRepositoryFactory()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Ramesoft.Cms.Common.Entity.IEntityContext,Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}}})">
            <summary>Sets the shim of RepositoryFactory.GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory._AddNewValueToDictionaryb__2Of1IEntityContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.Entity.IEntityContext,System.Object})">
            <summary>Sets the shim of RepositoryFactory.&lt;AddNewValueToDictionary&gt;b__2(IEntityContext i)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory._GetStanderdRepositoryb__0Of1IEntityContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.Entity.IEntityContext,Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of RepositoryFactory.&lt;GetStanderdRepository&gt;b__0(IEntityContext c)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryFactory.StaticConstructor">
            <summary>Sets the shim of RepositoryFactory.RepositoryFactory()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider">
            <summary>Shim type of Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.#ctor(Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.Bind(Ramesoft.Cms.Common.DAL.Factory.IRepositoryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of RepositoryProvider.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of RepositoryProvider.GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.MakeRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of RepositoryProvider.MakeRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.MakeStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of RepositoryProvider.MakeStanderdRepository()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.Constructor">
            <summary>Sets the shim of RepositoryProvider.RepositoryProvider()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.DataContextGet">
            <summary>Sets the shim of RepositoryProvider.get_DataContext()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.DataContextSetIEntityContext">
            <summary>Sets the shim of RepositoryProvider.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider,``0})">
            <summary>Sets the shim of RepositoryProvider.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider,Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of RepositoryProvider.GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.MakeRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider,``0})">
            <summary>Sets the shim of RepositoryProvider.MakeRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.MakeStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider,Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of RepositoryProvider.MakeStanderdRepository()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.DataContextGet">
            <summary>Sets the shim of RepositoryProvider.get_DataContext()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.ShimRepositoryProvider.AllInstances.DataContextSetIEntityContext">
            <summary>Sets the shim of RepositoryProvider.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Factory.BaseRepository`1</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.#ctor(Ramesoft.Cms.Common.Entity.IEntityContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.Add(`0)">
            <summary>Sets the stub of BaseRepository`1.Add(!0 item)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.AddT0">
            <summary>Sets the stub of BaseRepository`1.Add(!0 item)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.GetAllGet">
            <summary>Sets the stub of BaseRepository`1.get_GetAll()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubBaseRepository</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.GetAll">
            <summary>Sets the stub of BaseRepository`1.get_GetAll()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubBaseRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Factory.IRepository`1</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.AddT0">
            <summary>Sets the stub of IRepository`1.Add(!0 log)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.FindFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`1.Find(Func`2&lt;!0,Boolean&gt; id)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.GetAllGet">
            <summary>Sets the stub of IRepository`1.get_GetAll()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepository{T}#Add(`0)">
            <summary>Sets the stub of IRepository`1.Add(!0 log)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepository{T}#Find(System.Func{`0,System.Boolean})">
            <summary>Sets the stub of IRepository`1.Find(Func`2&lt;!0,Boolean&gt; id)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepository{T}#Remove(`0)">
            <summary>Sets the stub of IRepository`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepository{T}#Save">
            <summary>Sets the stub of IRepository`1.Save()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.RemoveT0">
            <summary>Sets the stub of IRepository`1.Remove(!0 item)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.Save">
            <summary>Sets the stub of IRepository`1.Save()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepository`1.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepository{T}#GetAll">
            <summary>Sets the stub of IRepository`1.get_GetAll()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Factory.IRepositoryProvider</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.#ctor">
            <summary>Initializes a new instance of type StubIRepositoryProvider</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.AttachBackingFieldToDataContext">
            <summary>Attaches delegates to emulate StubIRepositoryProvider.DataContext as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.DataContextGet">
            <summary>Sets the stub of IRepositoryProvider.get_DataContext()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.DataContextSetIEntityContext">
            <summary>Sets the stub of IRepositoryProvider.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets stubs of GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepositoryProvider#GetRepository``1">
            <summary>Sets the stub of IRepositoryProvider.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepositoryProvider#GetStanderdRepository``1">
            <summary>Sets the stub of IRepositoryProvider.GetStanderdRepository()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubIRepositoryProvider.rcc::Ramesoft#Cms#Common#DAL#Factory#IRepositoryProvider#DataContext">
            <summary>Sets the stub of IRepositoryProvider.get_DataContext()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Factory.RepositoryProvider</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider.InitializeStub">
            <summary>Initializes a new instance of type StubRepositoryProvider</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Factory.Fakes.StubRepositoryProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories">
            <summary>Shim type of Ramesoft.Cms.Common.DAL.Implementation.CommonRepositories</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.#ctor(Ramesoft.Cms.Common.DAL.Implementation.CommonRepositories)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.ConstructorIEntityContext">
            <summary>Sets the shim of CommonRepositories.CommonRepositories(IEntityContext db)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.Dispose">
            <summary>Sets the shim of CommonRepositories.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.ExecuteCommandString">
            <summary>Sets the shim of CommonRepositories.ExecuteCommand(String command)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.AllInstances.Dispose">
            <summary>Sets the shim of CommonRepositories.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimCommonRepositories.AllInstances.ExecuteCommandString">
            <summary>Sets the shim of CommonRepositories.ExecuteCommand(String command)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork">
            <summary>Shim type of Ramesoft.Cms.Common.DAL.Implementation.UnitOfWork</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.#ctor(Ramesoft.Cms.Common.DAL.Implementation.UnitOfWork)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.Bind(Ramesoft.Cms.Common.DAL.Repository.IUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of UnitOfWork.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of UnitOfWork.GetStanderdRepository()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.ConstructorIRepositoryProviderIEntityContext">
            <summary>Sets the shim of UnitOfWork.UnitOfWork(IRepositoryProvider repositoryProvider, IEntityContext dataContext)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.DataContextGet">
            <summary>Sets the shim of UnitOfWork.get_DataContext()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.DataContextSetIEntityContext">
            <summary>Sets the shim of UnitOfWork.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.Save">
            <summary>Sets the shim of UnitOfWork.Save()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Implementation.UnitOfWork,``0})">
            <summary>Sets the shim of UnitOfWork.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Implementation.UnitOfWork,Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets the shim of UnitOfWork.GetStanderdRepository()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances.DataContextGet">
            <summary>Sets the shim of UnitOfWork.get_DataContext()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances.DataContextSetIEntityContext">
            <summary>Sets the shim of UnitOfWork.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.ShimUnitOfWork.AllInstances.Save">
            <summary>Sets the shim of UnitOfWork.Save()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Implementation.CommonRepositories</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.#ctor(Ramesoft.Cms.Common.Entity.IEntityContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.Dispose">
            <summary>Sets the stub of CommonRepositories.Dispose()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.Dispose01">
            <summary>Sets the stub of CommonRepositories.Dispose()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.ExecuteCommand(System.String)">
            <summary>Sets the stub of CommonRepositories.ExecuteCommand(String command)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.ExecuteCommandString">
            <summary>Sets the stub of CommonRepositories.ExecuteCommand(String command)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.InitializeStub">
            <summary>Initializes a new instance of type StubCommonRepositories</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubCommonRepositories.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Implementation.UnitOfWork</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork.#ctor(Ramesoft.Cms.Common.DAL.Factory.IRepositoryProvider,Ramesoft.Cms.Common.Entity.IEntityContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWork</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Implementation.Fakes.StubUnitOfWork.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork">
            <summary>Stub type of Ramesoft.Cms.Common.DAL.Repository.IUnitOfWork</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWork</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.AttachBackingFieldToDataContext">
            <summary>Attaches delegates to emulate StubIUnitOfWork.DataContext as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.DataContextGet">
            <summary>Sets the stub of IUnitOfWork.get_DataContext()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.DataContextSetIEntityContext">
            <summary>Sets the stub of IUnitOfWork.set_DataContext(IEntityContext value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.GetRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.GetStanderdRepositoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.DAL.Factory.IRepository{``0}})">
            <summary>Sets stubs of GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.rcc::Ramesoft#Cms#Common#DAL#Repository#IUnitOfWork#GetRepository``1">
            <summary>Sets the stub of IUnitOfWork.GetRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.rcc::Ramesoft#Cms#Common#DAL#Repository#IUnitOfWork#GetStanderdRepository``1">
            <summary>Sets the stub of IUnitOfWork.GetStanderdRepository()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.rcc::Ramesoft#Cms#Common#DAL#Repository#IUnitOfWork#Save">
            <summary>Sets the stub of IUnitOfWork.Save()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.Save">
            <summary>Sets the stub of IUnitOfWork.Save()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.DAL.Repository.Fakes.StubIUnitOfWork.rcc::Ramesoft#Cms#Common#DAL#Repository#IUnitOfWork#DataContext">
            <summary>Sets the stub of IUnitOfWork.get_DataContext()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.Category</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.#ctor(Ramesoft.Cms.Common.Entity.Category)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.CategoryIdGet">
            <summary>Sets the shim of Category.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.CategoryIdSetInt32">
            <summary>Sets the shim of Category.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.CategoryNameGet">
            <summary>Sets the shim of Category.get_CategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.CategoryNameSetString">
            <summary>Sets the shim of Category.set_CategoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.Constructor">
            <summary>Sets the shim of Category.Category()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.SubCategoriesGet">
            <summary>Sets the shim of Category.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.SubCategoriesSetICollectionOfSubCategory">
            <summary>Sets the shim of Category.set_SubCategories(ICollection`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.CategoryIdGet">
            <summary>Sets the shim of Category.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.CategoryIdSetInt32">
            <summary>Sets the shim of Category.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.CategoryNameGet">
            <summary>Sets the shim of Category.get_CategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.CategoryNameSetString">
            <summary>Sets the shim of Category.set_CategoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.SubCategoriesGet">
            <summary>Sets the shim of Category.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCategory.AllInstances.SubCategoriesSetICollectionOfSubCategory">
            <summary>Sets the shim of Category.set_SubCategories(ICollection`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.Company</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.#ctor(Ramesoft.Cms.Common.Entity.Company)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.CompanyIdGet">
            <summary>Sets the shim of Company.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.CompanyIdSetInt32">
            <summary>Sets the shim of Company.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.CompanyNameGet">
            <summary>Sets the shim of Company.get_CompanyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.CompanyNameSetString">
            <summary>Sets the shim of Company.set_CompanyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.Constructor">
            <summary>Sets the shim of Company.Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.HistoriesGet">
            <summary>Sets the shim of Company.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.HistoriesSetICollectionOfHistory">
            <summary>Sets the shim of Company.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.ProductsGet">
            <summary>Sets the shim of Company.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.ProductsSetICollectionOfProduct">
            <summary>Sets the shim of Company.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.CompanyIdGet">
            <summary>Sets the shim of Company.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.CompanyIdSetInt32">
            <summary>Sets the shim of Company.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.CompanyNameGet">
            <summary>Sets the shim of Company.get_CompanyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.CompanyNameSetString">
            <summary>Sets the shim of Company.set_CompanyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.HistoriesGet">
            <summary>Sets the shim of Company.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.HistoriesSetICollectionOfHistory">
            <summary>Sets the shim of Company.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.ProductsGet">
            <summary>Sets the shim of Company.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimCompany.AllInstances.ProductsSetICollectionOfProduct">
            <summary>Sets the shim of Company.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.EntityContext</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.#ctor(Ramesoft.Cms.Common.Entity.EntityContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.Bind(Ramesoft.Cms.Common.Entity.IEntityContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextEntryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Entry(!!0 )</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Set()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.Constructor">
            <summary>Sets the shim of EntityContext.EntityContext()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextEntryObject">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Entry(Object )</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextGetValidationErrors">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.GetValidationErrors()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextSetType">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Set(Type )</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextget_ChangeTracker">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_ChangeTracker()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextget_Configuration">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_Configuration()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.RamesoftCmsCommonEntityIEntityContextget_Database">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_Database()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextEntryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.Entity.EntityContext,``0,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Entry(!!0 )</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Ramesoft.Cms.Common.Entity.EntityContext,System.Data.Entity.DbSet{``0}})">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Set()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextEntryObject">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Entry(Object )</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextGetValidationErrors">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.GetValidationErrors()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextSetType">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.Set(Type )</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextget_ChangeTracker">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_ChangeTracker()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextget_Configuration">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_Configuration()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimEntityContext.AllInstances.RamesoftCmsCommonEntityIEntityContextget_Database">
            <summary>Sets the shim of EntityContext.Ramesoft.Cms.Common.Entity.IEntityContext.get_Database()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.History</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.#ctor(Ramesoft.Cms.Common.Entity.History)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.CompanyGet">
            <summary>Sets the shim of History.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.CompanyIdGet">
            <summary>Sets the shim of History.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.CompanyIdSetNullableOfInt32">
            <summary>Sets the shim of History.set_CompanyId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.CompanySetCompany">
            <summary>Sets the shim of History.set_Company(Company value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.Constructor">
            <summary>Sets the shim of History.History()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.HistoryIdGet">
            <summary>Sets the shim of History.get_HistoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.HistoryIdSetInt32">
            <summary>Sets the shim of History.set_HistoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModificationTimeGet">
            <summary>Sets the shim of History.get_ModificationTime()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModificationTimeSetDateTime">
            <summary>Sets the shim of History.set_ModificationTime(DateTime value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModificationTypeGet">
            <summary>Sets the shim of History.get_ModificationType()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModificationTypeSetString">
            <summary>Sets the shim of History.set_ModificationType(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModuleNameGet">
            <summary>Sets the shim of History.get_ModuleName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.ModuleNameSetString">
            <summary>Sets the shim of History.set_ModuleName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.NewValueGet">
            <summary>Sets the shim of History.get_NewValue()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.NewValueSetString">
            <summary>Sets the shim of History.set_NewValue(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.OldValueGet">
            <summary>Sets the shim of History.get_OldValue()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.OldValueSetString">
            <summary>Sets the shim of History.set_OldValue(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.PropertyNameGet">
            <summary>Sets the shim of History.get_PropertyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.PropertyNameSetString">
            <summary>Sets the shim of History.set_PropertyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.UserIdGet">
            <summary>Sets the shim of History.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.UserIdSetNullableOfInt32">
            <summary>Sets the shim of History.set_UserId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.UserProfileGet">
            <summary>Sets the shim of History.get_UserProfile()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.UserProfileSetUserProfile">
            <summary>Sets the shim of History.set_UserProfile(UserProfile value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.CompanyGet">
            <summary>Sets the shim of History.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.CompanyIdGet">
            <summary>Sets the shim of History.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.CompanyIdSetNullableOfInt32">
            <summary>Sets the shim of History.set_CompanyId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.CompanySetCompany">
            <summary>Sets the shim of History.set_Company(Company value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.HistoryIdGet">
            <summary>Sets the shim of History.get_HistoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.HistoryIdSetInt32">
            <summary>Sets the shim of History.set_HistoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModificationTimeGet">
            <summary>Sets the shim of History.get_ModificationTime()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModificationTimeSetDateTime">
            <summary>Sets the shim of History.set_ModificationTime(DateTime value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModificationTypeGet">
            <summary>Sets the shim of History.get_ModificationType()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModificationTypeSetString">
            <summary>Sets the shim of History.set_ModificationType(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModuleNameGet">
            <summary>Sets the shim of History.get_ModuleName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.ModuleNameSetString">
            <summary>Sets the shim of History.set_ModuleName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.NewValueGet">
            <summary>Sets the shim of History.get_NewValue()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.NewValueSetString">
            <summary>Sets the shim of History.set_NewValue(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.OldValueGet">
            <summary>Sets the shim of History.get_OldValue()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.OldValueSetString">
            <summary>Sets the shim of History.set_OldValue(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.PropertyNameGet">
            <summary>Sets the shim of History.get_PropertyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.PropertyNameSetString">
            <summary>Sets the shim of History.set_PropertyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.UserIdGet">
            <summary>Sets the shim of History.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.UserIdSetNullableOfInt32">
            <summary>Sets the shim of History.set_UserId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.UserProfileGet">
            <summary>Sets the shim of History.get_UserProfile()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimHistory.AllInstances.UserProfileSetUserProfile">
            <summary>Sets the shim of History.set_UserProfile(UserProfile value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimLog">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.Log</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.#ctor(Ramesoft.Cms.Common.Entity.Log)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Constructor">
            <summary>Sets the shim of Log.Log()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.CreateDateGet">
            <summary>Sets the shim of Log.get_CreateDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.CreateDateSetDateTime">
            <summary>Sets the shim of Log.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.ExceptionGet">
            <summary>Sets the shim of Log.get_Exception()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.ExceptionSetString">
            <summary>Sets the shim of Log.set_Exception(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.InnerExceptionGet">
            <summary>Sets the shim of Log.get_InnerException()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.InnerExceptionSetNullableOfInt32">
            <summary>Sets the shim of Log.set_InnerException(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Log1Get">
            <summary>Sets the shim of Log.get_Log1()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Log1SetICollectionOfLog">
            <summary>Sets the shim of Log.set_Log1(ICollection`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Log2Get">
            <summary>Sets the shim of Log.get_Log2()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.Log2SetLog">
            <summary>Sets the shim of Log.set_Log2(Log value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.LogIdGet">
            <summary>Sets the shim of Log.get_LogId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.LogIdSetInt32">
            <summary>Sets the shim of Log.set_LogId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.LogLevelGet">
            <summary>Sets the shim of Log.get_LogLevel()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.LogLevelSetString">
            <summary>Sets the shim of Log.set_LogLevel(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.MessageGet">
            <summary>Sets the shim of Log.get_Message()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.MessageSetString">
            <summary>Sets the shim of Log.set_Message(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.StackTraceGet">
            <summary>Sets the shim of Log.get_StackTrace()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.StackTraceSetString">
            <summary>Sets the shim of Log.set_StackTrace(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.CreateDateGet">
            <summary>Sets the shim of Log.get_CreateDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.CreateDateSetDateTime">
            <summary>Sets the shim of Log.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.ExceptionGet">
            <summary>Sets the shim of Log.get_Exception()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.ExceptionSetString">
            <summary>Sets the shim of Log.set_Exception(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.InnerExceptionGet">
            <summary>Sets the shim of Log.get_InnerException()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.InnerExceptionSetNullableOfInt32">
            <summary>Sets the shim of Log.set_InnerException(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.Log1Get">
            <summary>Sets the shim of Log.get_Log1()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.Log1SetICollectionOfLog">
            <summary>Sets the shim of Log.set_Log1(ICollection`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.Log2Get">
            <summary>Sets the shim of Log.get_Log2()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.Log2SetLog">
            <summary>Sets the shim of Log.set_Log2(Log value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.LogIdGet">
            <summary>Sets the shim of Log.get_LogId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.LogIdSetInt32">
            <summary>Sets the shim of Log.set_LogId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.LogLevelGet">
            <summary>Sets the shim of Log.get_LogLevel()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.LogLevelSetString">
            <summary>Sets the shim of Log.set_LogLevel(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.MessageGet">
            <summary>Sets the shim of Log.get_Message()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.MessageSetString">
            <summary>Sets the shim of Log.set_Message(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.StackTraceGet">
            <summary>Sets the shim of Log.get_StackTrace()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimLog.AllInstances.StackTraceSetString">
            <summary>Sets the shim of Log.set_StackTrace(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.Product</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.#ctor(Ramesoft.Cms.Common.Entity.Product)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.CompanyGet">
            <summary>Sets the shim of Product.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.CompanyIdGet">
            <summary>Sets the shim of Product.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.CompanyIdSetInt32">
            <summary>Sets the shim of Product.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.CompanySetCompany">
            <summary>Sets the shim of Product.set_Company(Company value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.Constructor">
            <summary>Sets the shim of Product.Product()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.ProductIdGet">
            <summary>Sets the shim of Product.get_ProductId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.ProductIdSetInt32">
            <summary>Sets the shim of Product.set_ProductId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.ProductNameGet">
            <summary>Sets the shim of Product.get_ProductName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.ProductNameSetString">
            <summary>Sets the shim of Product.set_ProductName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.SubCategoryGet">
            <summary>Sets the shim of Product.get_SubCategory()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.SubCategoryIdGet">
            <summary>Sets the shim of Product.get_SubCategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.SubCategoryIdSetInt32">
            <summary>Sets the shim of Product.set_SubCategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.SubCategorySetSubCategory">
            <summary>Sets the shim of Product.set_SubCategory(SubCategory value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.CompanyGet">
            <summary>Sets the shim of Product.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.CompanyIdGet">
            <summary>Sets the shim of Product.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.CompanyIdSetInt32">
            <summary>Sets the shim of Product.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.CompanySetCompany">
            <summary>Sets the shim of Product.set_Company(Company value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.ProductIdGet">
            <summary>Sets the shim of Product.get_ProductId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.ProductIdSetInt32">
            <summary>Sets the shim of Product.set_ProductId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.ProductNameGet">
            <summary>Sets the shim of Product.get_ProductName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.ProductNameSetString">
            <summary>Sets the shim of Product.set_ProductName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.SubCategoryGet">
            <summary>Sets the shim of Product.get_SubCategory()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.SubCategoryIdGet">
            <summary>Sets the shim of Product.get_SubCategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.SubCategoryIdSetInt32">
            <summary>Sets the shim of Product.set_SubCategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimProduct.AllInstances.SubCategorySetSubCategory">
            <summary>Sets the shim of Product.set_SubCategory(SubCategory value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.RamesoftEntities</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.#ctor(Ramesoft.Cms.Common.Entity.RamesoftEntities)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.CategoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.CategoriesSetDbSetOfCategory">
            <summary>Sets the shim of RamesoftEntities.set_Categories(DbSet`1&lt;Category&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.CompaniesGet">
            <summary>Sets the shim of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.CompaniesSetDbSetOfCompany">
            <summary>Sets the shim of RamesoftEntities.set_Companies(DbSet`1&lt;Company&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.Constructor">
            <summary>Sets the shim of RamesoftEntities.RamesoftEntities()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.HistoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.HistoriesSetDbSetOfHistory">
            <summary>Sets the shim of RamesoftEntities.set_Histories(DbSet`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.LogsGet">
            <summary>Sets the shim of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.LogsSetDbSetOfLog">
            <summary>Sets the shim of RamesoftEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.ProductsGet">
            <summary>Sets the shim of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.ProductsSetDbSetOfProduct">
            <summary>Sets the shim of RamesoftEntities.set_Products(DbSet`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.SubCategoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.SubCategoriesSetDbSetOfSubCategory">
            <summary>Sets the shim of RamesoftEntities.set_SubCategories(DbSet`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.UserProfilesGet">
            <summary>Sets the shim of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.UserProfilesSetDbSetOfUserProfile">
            <summary>Sets the shim of RamesoftEntities.set_UserProfiles(DbSet`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_MembershipGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_MembershipSetDbSetOfwebpages_Membership">
            <summary>Sets the shim of RamesoftEntities.set_webpages_Membership(DbSet`1&lt;webpages_Membership&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_OAuthMembershipGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_OAuthMembershipSetDbSetOfwebpages_OAuthMembership">
            <summary>Sets the shim of RamesoftEntities.set_webpages_OAuthMembership(DbSet`1&lt;webpages_OAuthMembership&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_RolesGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.webpages_RolesSetDbSetOfwebpages_Roles">
            <summary>Sets the shim of RamesoftEntities.set_webpages_Roles(DbSet`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.CategoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.CategoriesSetDbSetOfCategory">
            <summary>Sets the shim of RamesoftEntities.set_Categories(DbSet`1&lt;Category&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.CompaniesGet">
            <summary>Sets the shim of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.CompaniesSetDbSetOfCompany">
            <summary>Sets the shim of RamesoftEntities.set_Companies(DbSet`1&lt;Company&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.HistoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.HistoriesSetDbSetOfHistory">
            <summary>Sets the shim of RamesoftEntities.set_Histories(DbSet`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.LogsGet">
            <summary>Sets the shim of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.LogsSetDbSetOfLog">
            <summary>Sets the shim of RamesoftEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.ProductsGet">
            <summary>Sets the shim of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.ProductsSetDbSetOfProduct">
            <summary>Sets the shim of RamesoftEntities.set_Products(DbSet`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.SubCategoriesGet">
            <summary>Sets the shim of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.SubCategoriesSetDbSetOfSubCategory">
            <summary>Sets the shim of RamesoftEntities.set_SubCategories(DbSet`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.UserProfilesGet">
            <summary>Sets the shim of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.UserProfilesSetDbSetOfUserProfile">
            <summary>Sets the shim of RamesoftEntities.set_UserProfiles(DbSet`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_MembershipGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_MembershipSetDbSetOfwebpages_Membership">
            <summary>Sets the shim of RamesoftEntities.set_webpages_Membership(DbSet`1&lt;webpages_Membership&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_OAuthMembershipGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_OAuthMembershipSetDbSetOfwebpages_OAuthMembership">
            <summary>Sets the shim of RamesoftEntities.set_webpages_OAuthMembership(DbSet`1&lt;webpages_OAuthMembership&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_RolesGet">
            <summary>Sets the shim of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimRamesoftEntities.AllInstances.webpages_RolesSetDbSetOfwebpages_Roles">
            <summary>Sets the shim of RamesoftEntities.set_webpages_Roles(DbSet`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.SubCategory</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.#ctor(Ramesoft.Cms.Common.Entity.SubCategory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.CategoryGet">
            <summary>Sets the shim of SubCategory.get_Category()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.CategoryIdGet">
            <summary>Sets the shim of SubCategory.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.CategoryIdSetInt32">
            <summary>Sets the shim of SubCategory.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.CategorySetCategory">
            <summary>Sets the shim of SubCategory.set_Category(Category value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.Constructor">
            <summary>Sets the shim of SubCategory.SubCategory()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.ProductsGet">
            <summary>Sets the shim of SubCategory.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.ProductsSetICollectionOfProduct">
            <summary>Sets the shim of SubCategory.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.SubCategoryIdGet">
            <summary>Sets the shim of SubCategory.get_SubCategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.SubCategoryIdSetInt32">
            <summary>Sets the shim of SubCategory.set_SubCategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.SubCategoryNameGet">
            <summary>Sets the shim of SubCategory.get_SubCategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.SubCategoryNameSetString">
            <summary>Sets the shim of SubCategory.set_SubCategoryName(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.CategoryGet">
            <summary>Sets the shim of SubCategory.get_Category()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.CategoryIdGet">
            <summary>Sets the shim of SubCategory.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.CategoryIdSetInt32">
            <summary>Sets the shim of SubCategory.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.CategorySetCategory">
            <summary>Sets the shim of SubCategory.set_Category(Category value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.ProductsGet">
            <summary>Sets the shim of SubCategory.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.ProductsSetICollectionOfProduct">
            <summary>Sets the shim of SubCategory.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.SubCategoryIdGet">
            <summary>Sets the shim of SubCategory.get_SubCategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.SubCategoryIdSetInt32">
            <summary>Sets the shim of SubCategory.set_SubCategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.SubCategoryNameGet">
            <summary>Sets the shim of SubCategory.get_SubCategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimSubCategory.AllInstances.SubCategoryNameSetString">
            <summary>Sets the shim of SubCategory.set_SubCategoryName(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.UserProfile</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.#ctor(Ramesoft.Cms.Common.Entity.UserProfile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.Constructor">
            <summary>Sets the shim of UserProfile.UserProfile()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.HistoriesGet">
            <summary>Sets the shim of UserProfile.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.HistoriesSetICollectionOfHistory">
            <summary>Sets the shim of UserProfile.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.UserIdGet">
            <summary>Sets the shim of UserProfile.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.UserIdSetInt32">
            <summary>Sets the shim of UserProfile.set_UserId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.UserNameGet">
            <summary>Sets the shim of UserProfile.get_UserName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.UserNameSetString">
            <summary>Sets the shim of UserProfile.set_UserName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.webpages_RolesGet">
            <summary>Sets the shim of UserProfile.get_webpages_Roles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.webpages_RolesSetICollectionOfwebpages_Roles">
            <summary>Sets the shim of UserProfile.set_webpages_Roles(ICollection`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.HistoriesGet">
            <summary>Sets the shim of UserProfile.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.HistoriesSetICollectionOfHistory">
            <summary>Sets the shim of UserProfile.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.UserIdGet">
            <summary>Sets the shim of UserProfile.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of UserProfile.set_UserId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.UserNameGet">
            <summary>Sets the shim of UserProfile.get_UserName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.UserNameSetString">
            <summary>Sets the shim of UserProfile.set_UserName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.webpages_RolesGet">
            <summary>Sets the shim of UserProfile.get_webpages_Roles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.ShimUserProfile.AllInstances.webpages_RolesSetICollectionOfwebpages_Roles">
            <summary>Sets the shim of UserProfile.set_webpages_Roles(ICollection`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.webpages_Membership</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.#ctor(Ramesoft.Cms.Common.Entity.webpages_Membership)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.ConfirmationTokenGet">
            <summary>Sets the shim of webpages_Membership.get_ConfirmationToken()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.ConfirmationTokenSetString">
            <summary>Sets the shim of webpages_Membership.set_ConfirmationToken(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.Constructor">
            <summary>Sets the shim of webpages_Membership.webpages_Membership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.CreateDateGet">
            <summary>Sets the shim of webpages_Membership.get_CreateDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.CreateDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_CreateDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.IsConfirmedGet">
            <summary>Sets the shim of webpages_Membership.get_IsConfirmed()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.IsConfirmedSetNullableOfBoolean">
            <summary>Sets the shim of webpages_Membership.set_IsConfirmed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.LastPasswordFailureDateGet">
            <summary>Sets the shim of webpages_Membership.get_LastPasswordFailureDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.LastPasswordFailureDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_LastPasswordFailureDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordChangedDateGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordChangedDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordChangedDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_PasswordChangedDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordFailuresSinceLastSuccessGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordFailuresSinceLastSuccess()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordFailuresSinceLastSuccessSetInt32">
            <summary>Sets the shim of webpages_Membership.set_PasswordFailuresSinceLastSuccess(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordGet">
            <summary>Sets the shim of webpages_Membership.get_Password()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordSaltGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordSalt()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordSaltSetString">
            <summary>Sets the shim of webpages_Membership.set_PasswordSalt(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordSetString">
            <summary>Sets the shim of webpages_Membership.set_Password(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordVerificationTokenExpirationDateGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordVerificationTokenExpirationDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordVerificationTokenExpirationDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_PasswordVerificationTokenExpirationDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordVerificationTokenGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordVerificationToken()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.PasswordVerificationTokenSetString">
            <summary>Sets the shim of webpages_Membership.set_PasswordVerificationToken(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.UserIdGet">
            <summary>Sets the shim of webpages_Membership.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.UserIdSetInt32">
            <summary>Sets the shim of webpages_Membership.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.ConfirmationTokenGet">
            <summary>Sets the shim of webpages_Membership.get_ConfirmationToken()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.ConfirmationTokenSetString">
            <summary>Sets the shim of webpages_Membership.set_ConfirmationToken(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.CreateDateGet">
            <summary>Sets the shim of webpages_Membership.get_CreateDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.CreateDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_CreateDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.IsConfirmedGet">
            <summary>Sets the shim of webpages_Membership.get_IsConfirmed()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.IsConfirmedSetNullableOfBoolean">
            <summary>Sets the shim of webpages_Membership.set_IsConfirmed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.LastPasswordFailureDateGet">
            <summary>Sets the shim of webpages_Membership.get_LastPasswordFailureDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.LastPasswordFailureDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_LastPasswordFailureDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordChangedDateGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordChangedDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordChangedDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_PasswordChangedDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordFailuresSinceLastSuccessGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordFailuresSinceLastSuccess()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordFailuresSinceLastSuccessSetInt32">
            <summary>Sets the shim of webpages_Membership.set_PasswordFailuresSinceLastSuccess(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordGet">
            <summary>Sets the shim of webpages_Membership.get_Password()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordSaltGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordSalt()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordSaltSetString">
            <summary>Sets the shim of webpages_Membership.set_PasswordSalt(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordSetString">
            <summary>Sets the shim of webpages_Membership.set_Password(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordVerificationTokenExpirationDateGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordVerificationTokenExpirationDate()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordVerificationTokenExpirationDateSetNullableOfDateTime">
            <summary>Sets the shim of webpages_Membership.set_PasswordVerificationTokenExpirationDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordVerificationTokenGet">
            <summary>Sets the shim of webpages_Membership.get_PasswordVerificationToken()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.PasswordVerificationTokenSetString">
            <summary>Sets the shim of webpages_Membership.set_PasswordVerificationToken(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.UserIdGet">
            <summary>Sets the shim of webpages_Membership.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Membership.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of webpages_Membership.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.webpages_OAuthMembership</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.#ctor(Ramesoft.Cms.Common.Entity.webpages_OAuthMembership)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.Constructor">
            <summary>Sets the shim of webpages_OAuthMembership.webpages_OAuthMembership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.ProviderGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_Provider()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.ProviderSetString">
            <summary>Sets the shim of webpages_OAuthMembership.set_Provider(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.ProviderUserIdGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_ProviderUserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.ProviderUserIdSetString">
            <summary>Sets the shim of webpages_OAuthMembership.set_ProviderUserId(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.UserIdGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.UserIdSetInt32">
            <summary>Sets the shim of webpages_OAuthMembership.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.ProviderGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_Provider()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.ProviderSetString">
            <summary>Sets the shim of webpages_OAuthMembership.set_Provider(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.ProviderUserIdGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_ProviderUserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.ProviderUserIdSetString">
            <summary>Sets the shim of webpages_OAuthMembership.set_ProviderUserId(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.UserIdGet">
            <summary>Sets the shim of webpages_OAuthMembership.get_UserId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_OAuthMembership.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of webpages_OAuthMembership.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles">
            <summary>Shim type of Ramesoft.Cms.Common.Entity.webpages_Roles</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.#ctor(Ramesoft.Cms.Common.Entity.webpages_Roles)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.Constructor">
            <summary>Sets the shim of webpages_Roles.webpages_Roles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.RoleIdGet">
            <summary>Sets the shim of webpages_Roles.get_RoleId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.RoleIdSetInt32">
            <summary>Sets the shim of webpages_Roles.set_RoleId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.RoleNameGet">
            <summary>Sets the shim of webpages_Roles.get_RoleName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.RoleNameSetString">
            <summary>Sets the shim of webpages_Roles.set_RoleName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.UserProfilesGet">
            <summary>Sets the shim of webpages_Roles.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.UserProfilesSetICollectionOfUserProfile">
            <summary>Sets the shim of webpages_Roles.set_UserProfiles(ICollection`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.RoleIdGet">
            <summary>Sets the shim of webpages_Roles.get_RoleId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.RoleIdSetInt32">
            <summary>Sets the shim of webpages_Roles.set_RoleId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.RoleNameGet">
            <summary>Sets the shim of webpages_Roles.get_RoleName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.RoleNameSetString">
            <summary>Sets the shim of webpages_Roles.set_RoleName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.UserProfilesGet">
            <summary>Sets the shim of webpages_Roles.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Shimwebpages_Roles.AllInstances.UserProfilesSetICollectionOfUserProfile">
            <summary>Sets the shim of webpages_Roles.set_UserProfiles(ICollection`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubCategory">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.Category</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.AttachBackingFieldToSubCategories">
            <summary>Attaches delegates to emulate StubCategory.SubCategories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.InitializeStub">
            <summary>Initializes a new instance of type StubCategory</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.SubCategoriesGet">
            <summary>Sets the stub of Category.get_SubCategories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.SubCategoriesSetICollectionOfSubCategory">
            <summary>Sets the stub of Category.set_SubCategories(ICollection`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCategory.SubCategories">
            <summary>Sets the stub of Category.get_SubCategories()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubCompany">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.Company</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.AttachBackingFieldToHistories">
            <summary>Attaches delegates to emulate StubCompany.Histories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.AttachBackingFieldToProducts">
            <summary>Attaches delegates to emulate StubCompany.Products as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.HistoriesGet">
            <summary>Sets the stub of Company.get_Histories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.HistoriesSetICollectionOfHistory">
            <summary>Sets the stub of Company.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.InitializeStub">
            <summary>Initializes a new instance of type StubCompany</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.ProductsGet">
            <summary>Sets the stub of Company.get_Products()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.ProductsSetICollectionOfProduct">
            <summary>Sets the stub of Company.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.Histories">
            <summary>Sets the stub of Company.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubCompany.Products">
            <summary>Sets the stub of Company.get_Products()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.EntityContext</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToCategories">
            <summary>Attaches delegates to emulate StubEntityContext.Categories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToCompanies">
            <summary>Attaches delegates to emulate StubEntityContext.Companies as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToHistories">
            <summary>Attaches delegates to emulate StubEntityContext.Histories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToLogs">
            <summary>Attaches delegates to emulate StubEntityContext.Logs as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToProducts">
            <summary>Attaches delegates to emulate StubEntityContext.Products as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToSubCategories">
            <summary>Attaches delegates to emulate StubEntityContext.SubCategories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldToUserProfiles">
            <summary>Attaches delegates to emulate StubEntityContext.UserProfiles as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldTowebpages_Membership">
            <summary>Attaches delegates to emulate StubEntityContext.webpages_Membership as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldTowebpages_OAuthMembership">
            <summary>Attaches delegates to emulate StubEntityContext.webpages_OAuthMembership as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.AttachBackingFieldTowebpages_Roles">
            <summary>Attaches delegates to emulate StubEntityContext.webpages_Roles as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.CategoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.CategoriesSetDbSetOfCategory">
            <summary>Sets the stub of RamesoftEntities.set_Categories(DbSet`1&lt;Category&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.CompaniesGet">
            <summary>Sets the stub of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.CompaniesSetDbSetOfCompany">
            <summary>Sets the stub of RamesoftEntities.set_Companies(DbSet`1&lt;Company&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.HistoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.HistoriesSetDbSetOfHistory">
            <summary>Sets the stub of RamesoftEntities.set_Histories(DbSet`1&lt;History&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.InitializeStub">
            <summary>Initializes a new instance of type StubEntityContext</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.LogsGet">
            <summary>Sets the stub of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.LogsSetDbSetOfLog">
            <summary>Sets the stub of RamesoftEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.MembershipGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.MembershipSetWebpagesDbSetOfwebpages_Membership">
            <summary>Sets the stub of RamesoftEntities.set_webpages_Membership(DbSet`1&lt;webpages_Membership&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.OAuthMembershipGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.OAuthMembershipSetWebpagesDbSetOfwebpages_OAuthMembership">
            <summary>Sets the stub of RamesoftEntities.set_webpages_OAuthMembership(DbSet`1&lt;webpages_OAuthMembership&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ProductsGet">
            <summary>Sets the stub of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ProductsSetDbSetOfProduct">
            <summary>Sets the stub of RamesoftEntities.set_Products(DbSet`1&lt;Product&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.RolesGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.RolesSetWebpagesDbSetOfwebpages_Roles">
            <summary>Sets the stub of RamesoftEntities.set_webpages_Roles(DbSet`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.SubCategoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.SubCategoriesSetDbSetOfSubCategory">
            <summary>Sets the stub of RamesoftEntities.set_SubCategories(DbSet`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.UserProfilesGet">
            <summary>Sets the stub of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.UserProfilesSetDbSetOfUserProfile">
            <summary>Sets the stub of RamesoftEntities.set_UserProfiles(DbSet`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Categories">
            <summary>Sets the stub of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Companies">
            <summary>Sets the stub of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Histories">
            <summary>Sets the stub of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Logs">
            <summary>Sets the stub of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.Products">
            <summary>Sets the stub of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.SubCategories">
            <summary>Sets the stub of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.UserProfiles">
            <summary>Sets the stub of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.webpages_Membership">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.webpages_OAuthMembership">
            <summary>Sets the stub of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubEntityContext.webpages_Roles">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubHistory">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.History</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.AttachBackingFieldToCompany">
            <summary>Attaches delegates to emulate StubHistory.Company as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.AttachBackingFieldToUserProfile">
            <summary>Attaches delegates to emulate StubHistory.UserProfile as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.CompanyGet">
            <summary>Sets the stub of History.get_Company()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.CompanySetCompany">
            <summary>Sets the stub of History.set_Company(Company value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.InitializeStub">
            <summary>Initializes a new instance of type StubHistory</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.UserProfileGet">
            <summary>Sets the stub of History.get_UserProfile()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.UserProfileSetUserProfile">
            <summary>Sets the stub of History.set_UserProfile(UserProfile value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.Company">
            <summary>Sets the stub of History.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubHistory.UserProfile">
            <summary>Sets the stub of History.get_UserProfile()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.IEntityContext</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.#ctor">
            <summary>Initializes a new instance of type StubIEntityContext</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.ChangeTrackerGet">
            <summary>Sets the stub of IEntityContext.get_ChangeTracker()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.ConfigurationGet">
            <summary>Sets the stub of IEntityContext.get_Configuration()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.DatabaseGet">
            <summary>Sets the stub of IEntityContext.get_Database()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.EntryObject">
            <summary>Sets the stub of IEntityContext.Entry(Object entity)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.EntryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Entity.Infrastructure.DbEntityEntry{``0}})">
            <summary>Sets stubs of Entry(!!0 entity)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.GetValidationErrors">
            <summary>Sets the stub of IEntityContext.GetValidationErrors()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.ObjectContextGet">
            <summary>Sets the stub of IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Entry(System.Object)">
            <summary>Sets the stub of IEntityContext.Entry(Object entity)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Entry``1(``0)">
            <summary>Sets the stub of IEntityContext.Entry(!!0 entity)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#GetValidationErrors">
            <summary>Sets the stub of IEntityContext.GetValidationErrors()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#SaveChanges">
            <summary>Sets the stub of IEntityContext.SaveChanges()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Set(System.Type)">
            <summary>Sets the stub of IEntityContext.Set(Type entityType)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Set``1">
            <summary>Sets the stub of IEntityContext.Set()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.SaveChanges">
            <summary>Sets the stub of IEntityContext.SaveChanges()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets stubs of Set()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.SetType">
            <summary>Sets the stub of IEntityContext.Set(Type entityType)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#ChangeTracker">
            <summary>Sets the stub of IEntityContext.get_ChangeTracker()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Configuration">
            <summary>Sets the stub of IEntityContext.get_Configuration()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.rcc::Ramesoft#Cms#Common#Entity#IEntityContext#Database">
            <summary>Sets the stub of IEntityContext.get_Database()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubIEntityContext.ef::System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
            <summary>Sets the stub of IObjectContextAdapter.get_ObjectContext()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubLog">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.Log</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubLog.AttachBackingFieldToLog1">
            <summary>Attaches delegates to emulate StubLog.Log1 as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubLog.AttachBackingFieldToLog2">
            <summary>Attaches delegates to emulate StubLog.Log2 as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubLog.InitializeStub">
            <summary>Initializes a new instance of type StubLog</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log1Get">
            <summary>Sets the stub of Log.get_Log1()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log1SetICollectionOfLog">
            <summary>Sets the stub of Log.set_Log1(ICollection`1&lt;Log&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log2Get">
            <summary>Sets the stub of Log.get_Log2()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log2SetLog">
            <summary>Sets the stub of Log.set_Log2(Log value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubLog.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log1">
            <summary>Sets the stub of Log.get_Log1()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubLog.Log2">
            <summary>Sets the stub of Log.get_Log2()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubProduct">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.Product</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.AttachBackingFieldToCompany">
            <summary>Attaches delegates to emulate StubProduct.Company as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.AttachBackingFieldToSubCategory">
            <summary>Attaches delegates to emulate StubProduct.SubCategory as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.CompanyGet">
            <summary>Sets the stub of Product.get_Company()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.CompanySetCompany">
            <summary>Sets the stub of Product.set_Company(Company value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.InitializeStub">
            <summary>Initializes a new instance of type StubProduct</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.SubCategoryGet">
            <summary>Sets the stub of Product.get_SubCategory()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.SubCategorySetSubCategory">
            <summary>Sets the stub of Product.set_SubCategory(SubCategory value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.Company">
            <summary>Sets the stub of Product.get_Company()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubProduct.SubCategory">
            <summary>Sets the stub of Product.get_SubCategory()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.RamesoftEntities</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToCategories">
            <summary>Attaches delegates to emulate StubRamesoftEntities.Categories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToCompanies">
            <summary>Attaches delegates to emulate StubRamesoftEntities.Companies as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToHistories">
            <summary>Attaches delegates to emulate StubRamesoftEntities.Histories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToLogs">
            <summary>Attaches delegates to emulate StubRamesoftEntities.Logs as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToProducts">
            <summary>Attaches delegates to emulate StubRamesoftEntities.Products as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToSubCategories">
            <summary>Attaches delegates to emulate StubRamesoftEntities.SubCategories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldToUserProfiles">
            <summary>Attaches delegates to emulate StubRamesoftEntities.UserProfiles as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldTowebpages_Membership">
            <summary>Attaches delegates to emulate StubRamesoftEntities.webpages_Membership as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldTowebpages_OAuthMembership">
            <summary>Attaches delegates to emulate StubRamesoftEntities.webpages_OAuthMembership as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.AttachBackingFieldTowebpages_Roles">
            <summary>Attaches delegates to emulate StubRamesoftEntities.webpages_Roles as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.CategoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.CategoriesSetDbSetOfCategory">
            <summary>Sets the stub of RamesoftEntities.set_Categories(DbSet`1&lt;Category&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.CompaniesGet">
            <summary>Sets the stub of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.CompaniesSetDbSetOfCompany">
            <summary>Sets the stub of RamesoftEntities.set_Companies(DbSet`1&lt;Company&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.HistoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.HistoriesSetDbSetOfHistory">
            <summary>Sets the stub of RamesoftEntities.set_Histories(DbSet`1&lt;History&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.InitializeStub">
            <summary>Initializes a new instance of type StubRamesoftEntities</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.LogsGet">
            <summary>Sets the stub of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.LogsSetDbSetOfLog">
            <summary>Sets the stub of RamesoftEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.MembershipGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.MembershipSetWebpagesDbSetOfwebpages_Membership">
            <summary>Sets the stub of RamesoftEntities.set_webpages_Membership(DbSet`1&lt;webpages_Membership&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.OAuthMembershipGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.OAuthMembershipSetWebpagesDbSetOfwebpages_OAuthMembership">
            <summary>Sets the stub of RamesoftEntities.set_webpages_OAuthMembership(DbSet`1&lt;webpages_OAuthMembership&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of RamesoftEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ProductsGet">
            <summary>Sets the stub of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ProductsSetDbSetOfProduct">
            <summary>Sets the stub of RamesoftEntities.set_Products(DbSet`1&lt;Product&gt; value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.RolesGetWebpages">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.RolesSetWebpagesDbSetOfwebpages_Roles">
            <summary>Sets the stub of RamesoftEntities.set_webpages_Roles(DbSet`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.SubCategoriesGet">
            <summary>Sets the stub of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.SubCategoriesSetDbSetOfSubCategory">
            <summary>Sets the stub of RamesoftEntities.set_SubCategories(DbSet`1&lt;SubCategory&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.UserProfilesGet">
            <summary>Sets the stub of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.UserProfilesSetDbSetOfUserProfile">
            <summary>Sets the stub of RamesoftEntities.set_UserProfiles(DbSet`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Categories">
            <summary>Sets the stub of RamesoftEntities.get_Categories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Companies">
            <summary>Sets the stub of RamesoftEntities.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Histories">
            <summary>Sets the stub of RamesoftEntities.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Logs">
            <summary>Sets the stub of RamesoftEntities.get_Logs()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.Products">
            <summary>Sets the stub of RamesoftEntities.get_Products()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.SubCategories">
            <summary>Sets the stub of RamesoftEntities.get_SubCategories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.UserProfiles">
            <summary>Sets the stub of RamesoftEntities.get_UserProfiles()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.webpages_Membership">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Membership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.webpages_OAuthMembership">
            <summary>Sets the stub of RamesoftEntities.get_webpages_OAuthMembership()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubRamesoftEntities.webpages_Roles">
            <summary>Sets the stub of RamesoftEntities.get_webpages_Roles()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.SubCategory</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.AttachBackingFieldToCategory">
            <summary>Attaches delegates to emulate StubSubCategory.Category as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.AttachBackingFieldToProducts">
            <summary>Attaches delegates to emulate StubSubCategory.Products as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.CategoryGet">
            <summary>Sets the stub of SubCategory.get_Category()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.CategorySetCategory">
            <summary>Sets the stub of SubCategory.set_Category(Category value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.InitializeStub">
            <summary>Initializes a new instance of type StubSubCategory</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.ProductsGet">
            <summary>Sets the stub of SubCategory.get_Products()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.ProductsSetICollectionOfProduct">
            <summary>Sets the stub of SubCategory.set_Products(ICollection`1&lt;Product&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.Category">
            <summary>Sets the stub of SubCategory.get_Category()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubSubCategory.Products">
            <summary>Sets the stub of SubCategory.get_Products()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.UserProfile</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.AttachBackingFieldToHistories">
            <summary>Attaches delegates to emulate StubUserProfile.Histories as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.AttachBackingFieldTowebpages_Roles">
            <summary>Attaches delegates to emulate StubUserProfile.webpages_Roles as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.HistoriesGet">
            <summary>Sets the stub of UserProfile.get_Histories()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.HistoriesSetICollectionOfHistory">
            <summary>Sets the stub of UserProfile.set_Histories(ICollection`1&lt;History&gt; value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.InitializeStub">
            <summary>Initializes a new instance of type StubUserProfile</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.RolesGetWebpages">
            <summary>Sets the stub of UserProfile.get_webpages_Roles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.RolesSetWebpagesICollectionOfwebpages_Roles">
            <summary>Sets the stub of UserProfile.set_webpages_Roles(ICollection`1&lt;webpages_Roles&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.Histories">
            <summary>Sets the stub of UserProfile.get_Histories()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.StubUserProfile.webpages_Roles">
            <summary>Sets the stub of UserProfile.get_webpages_Roles()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.webpages_Membership</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership.InitializeStub">
            <summary>Initializes a new instance of type Stubwebpages_Membership</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Membership.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.webpages_OAuthMembership</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership.InitializeStub">
            <summary>Initializes a new instance of type Stubwebpages_OAuthMembership</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_OAuthMembership.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles">
            <summary>Stub type of Ramesoft.Cms.Common.Entity.webpages_Roles</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.AttachBackingFieldToUserProfiles">
            <summary>Attaches delegates to emulate Stubwebpages_Roles.UserProfiles as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.InitializeStub">
            <summary>Initializes a new instance of type Stubwebpages_Roles</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.UserProfilesGet">
            <summary>Sets the stub of webpages_Roles.get_UserProfiles()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.UserProfilesSetICollectionOfUserProfile">
            <summary>Sets the stub of webpages_Roles.set_UserProfiles(ICollection`1&lt;UserProfile&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Entity.Fakes.Stubwebpages_Roles.UserProfiles">
            <summary>Sets the stub of webpages_Roles.get_UserProfiles()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger">
            <summary>Shim type of Ramesoft.Cms.Common.Logging.Logger</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.InitializeLogsString">
            <summary>Sets the shim of Logger.InitializeLogs(String path)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.LogExceptionExceptionString">
            <summary>Sets the shim of Logger.LogException(Exception e, String extraInformation)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.LogInfoString">
            <summary>Sets the shim of Logger.LogInfo(String info)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Logging.Fakes.ShimLogger.StaticConstructor">
            <summary>Sets the shim of Logger.Logger()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable">
            <summary>Stub type of Ramesoft.Cms.Common.Models.Contract.ISelectable</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable.#ctor">
            <summary>Initializes a new instance of type StubISelectable</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable.TextGet">
            <summary>Sets the stub of ISelectable.get_Text()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable.ValueGet">
            <summary>Sets the stub of ISelectable.get_Value()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable.rcc::Ramesoft#Cms#Common#Models#Contract#ISelectable#Text">
            <summary>Sets the stub of ISelectable.get_Text()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Contract.Fakes.StubISelectable.rcc::Ramesoft#Cms#Common#Models#Contract#ISelectable#Value">
            <summary>Sets the stub of ISelectable.get_Value()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel">
            <summary>Shim type of Ramesoft.Cms.Common.Models.CategoryModel</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.#ctor(Ramesoft.Cms.Common.Models.CategoryModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.Bind(Ramesoft.Cms.Common.Models.Contract.ISelectable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.CategoryIdGet">
            <summary>Sets the shim of CategoryModel.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.CategoryIdSetInt32">
            <summary>Sets the shim of CategoryModel.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.CategoryNameGet">
            <summary>Sets the shim of CategoryModel.get_CategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.CategoryNameSetString">
            <summary>Sets the shim of CategoryModel.set_CategoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.Constructor">
            <summary>Sets the shim of CategoryModel.CategoryModel()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.TextRamesoftCmsCommonModelsContractISelectableget">
            <summary>Sets the shim of CategoryModel.Ramesoft.Cms.Common.Models.Contract.ISelectable.get_Text()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.ValueRamesoftCmsCommonModelsContractISelectableget">
            <summary>Sets the shim of CategoryModel.Ramesoft.Cms.Common.Models.Contract.ISelectable.get_Value()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.CategoryIdGet">
            <summary>Sets the shim of CategoryModel.get_CategoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.CategoryIdSetInt32">
            <summary>Sets the shim of CategoryModel.set_CategoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.CategoryNameGet">
            <summary>Sets the shim of CategoryModel.get_CategoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.CategoryNameSetString">
            <summary>Sets the shim of CategoryModel.set_CategoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.TextRamesoftCmsCommonModelsContractISelectableget">
            <summary>Sets the shim of CategoryModel.Ramesoft.Cms.Common.Models.Contract.ISelectable.get_Text()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimCategoryModel.AllInstances.ValueRamesoftCmsCommonModelsContractISelectableget">
            <summary>Sets the shim of CategoryModel.Ramesoft.Cms.Common.Models.Contract.ISelectable.get_Value()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimProductList">
            <summary>Shim type of Ramesoft.Cms.Common.Models.ProductList</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.#ctor(Ramesoft.Cms.Common.Models.ProductList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.ComponentModel.DataAnnotations.IValidatableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.Generic.ICollection{Ramesoft.Cms.Common.Models.ProductModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.Generic.IEnumerable{Ramesoft.Cms.Common.Models.ProductModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Bind(System.Collections.Generic.IList{Ramesoft.Cms.Common.Models.ProductModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.Constructor">
            <summary>Sets the shim of ProductList.ProductList()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.ConstructorIEnumerableOfProductModel">
            <summary>Sets the shim of ProductList.ProductList(IEnumerable`1&lt;ProductModel&gt; value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.ValidateValidationContext">
            <summary>Sets the shim of ProductList.Validate(ValidationContext validationContext)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductList.AllInstances.ValidateValidationContext">
            <summary>Sets the shim of ProductList.Validate(ValidationContext validationContext)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel">
            <summary>Shim type of Ramesoft.Cms.Common.Models.ProductModel</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.#ctor(Ramesoft.Cms.Common.Models.ProductModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CatagoryIdGet">
            <summary>Sets the shim of ProductModel.get_CatagoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CatagoryIdSetInt32">
            <summary>Sets the shim of ProductModel.set_CatagoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CatagoryNameGet">
            <summary>Sets the shim of ProductModel.get_CatagoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CatagoryNameSetString">
            <summary>Sets the shim of ProductModel.set_CatagoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CompanyIdGet">
            <summary>Sets the shim of ProductModel.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CompanyIdSetInt32">
            <summary>Sets the shim of ProductModel.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CompanyNameGet">
            <summary>Sets the shim of ProductModel.get_CompanyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.CompanyNameSetString">
            <summary>Sets the shim of ProductModel.set_CompanyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.Constructor">
            <summary>Sets the shim of ProductModel.ProductModel()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.ProductIdGet">
            <summary>Sets the shim of ProductModel.get_ProductId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.ProductIdSetInt32">
            <summary>Sets the shim of ProductModel.set_ProductId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.ProductNameGet">
            <summary>Sets the shim of ProductModel.get_ProductName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.ProductNameSetString">
            <summary>Sets the shim of ProductModel.set_ProductName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.SubCatagoryIdGet">
            <summary>Sets the shim of ProductModel.get_SubCatagoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.SubCatagoryIdSetInt32">
            <summary>Sets the shim of ProductModel.set_SubCatagoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.SubCatagoryNameGet">
            <summary>Sets the shim of ProductModel.get_SubCatagoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.SubCatagoryNameSetString">
            <summary>Sets the shim of ProductModel.set_SubCatagoryName(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CatagoryIdGet">
            <summary>Sets the shim of ProductModel.get_CatagoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CatagoryIdSetInt32">
            <summary>Sets the shim of ProductModel.set_CatagoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CatagoryNameGet">
            <summary>Sets the shim of ProductModel.get_CatagoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CatagoryNameSetString">
            <summary>Sets the shim of ProductModel.set_CatagoryName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CompanyIdGet">
            <summary>Sets the shim of ProductModel.get_CompanyId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CompanyIdSetInt32">
            <summary>Sets the shim of ProductModel.set_CompanyId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CompanyNameGet">
            <summary>Sets the shim of ProductModel.get_CompanyName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.CompanyNameSetString">
            <summary>Sets the shim of ProductModel.set_CompanyName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.ProductIdGet">
            <summary>Sets the shim of ProductModel.get_ProductId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.ProductIdSetInt32">
            <summary>Sets the shim of ProductModel.set_ProductId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.ProductNameGet">
            <summary>Sets the shim of ProductModel.get_ProductName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.ProductNameSetString">
            <summary>Sets the shim of ProductModel.set_ProductName(String value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.SubCatagoryIdGet">
            <summary>Sets the shim of ProductModel.get_SubCatagoryId()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.SubCatagoryIdSetInt32">
            <summary>Sets the shim of ProductModel.set_SubCatagoryId(Int32 value)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.SubCatagoryNameGet">
            <summary>Sets the shim of ProductModel.get_SubCatagoryName()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.ShimProductModel.AllInstances.SubCatagoryNameSetString">
            <summary>Sets the shim of ProductModel.set_SubCatagoryName(String value)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel">
            <summary>Stub type of Ramesoft.Cms.Common.Models.CategoryModel</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel.InitializeStub">
            <summary>Initializes a new instance of type StubCategoryModel</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubCategoryModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.StubProductList">
            <summary>Stub type of Ramesoft.Cms.Common.Models.ProductList</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubProductList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubProductList.#ctor(System.Collections.Generic.IEnumerable{Ramesoft.Cms.Common.Models.ProductModel})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubProductList.InitializeStub">
            <summary>Initializes a new instance of type StubProductList</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Models.Fakes.StubProductModel">
            <summary>Stub type of Ramesoft.Cms.Common.Models.ProductModel</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubProductModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Models.Fakes.StubProductModel.InitializeStub">
            <summary>Initializes a new instance of type StubProductModel</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Models.Fakes.StubProductModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService">
            <summary>Stub type of Ramesoft.Cms.Common.Services.Contract.IProductService</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.#ctor">
            <summary>Initializes a new instance of type StubIProductService</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.AddIEnumerableOfProductModel">
            <summary>Sets the stub of IProductService.Add(IEnumerable`1&lt;ProductModel&gt; products)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.AddProductModel">
            <summary>Sets the stub of IProductService.Add(ProductModel product)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.CompaniesGet">
            <summary>Sets the stub of IProductService.get_Companies()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.FindFuncOfProductModelBoolean">
            <summary>Sets the stub of IProductService.Find(Func`2&lt;ProductModel,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.GetProductsGet">
            <summary>Sets the stub of IProductService.get_GetProducts()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#Add(Ramesoft.Cms.Common.Models.ProductModel)">
            <summary>Sets the stub of IProductService.Add(ProductModel product)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#Add(System.Collections.Generic.IEnumerable{Ramesoft.Cms.Common.Models.ProductModel})">
            <summary>Sets the stub of IProductService.Add(IEnumerable`1&lt;ProductModel&gt; products)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#Find(System.Func{Ramesoft.Cms.Common.Models.ProductModel,System.Boolean})">
            <summary>Sets the stub of IProductService.Find(Func`2&lt;ProductModel,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#Remove(Ramesoft.Cms.Common.Models.ProductModel)">
            <summary>Sets the stub of IProductService.Remove(ProductModel product)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.RemoveProductModel">
            <summary>Sets the stub of IProductService.Remove(ProductModel product)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#Companies">
            <summary>Sets the stub of IProductService.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Contract.Fakes.StubIProductService.rcc::Ramesoft#Cms#Common#Services#Contract#IProductService#GetProducts">
            <summary>Sets the stub of IProductService.get_GetProducts()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService">
            <summary>Shim type of Ramesoft.Cms.Common.Services.Service.ProductService</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.#ctor(Ramesoft.Cms.Common.Services.Service.ProductService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.Bind(Ramesoft.Cms.Common.Services.Contract.IProductService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AddIEnumerableOfProductModel">
            <summary>Sets the shim of ProductService.Add(IEnumerable`1&lt;ProductModel&gt; products)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AddProductModel">
            <summary>Sets the shim of ProductService.Add(ProductModel product)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.CompaniesGet">
            <summary>Sets the shim of ProductService.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.ConstructorIUnitOfWork">
            <summary>Sets the shim of ProductService.ProductService(IUnitOfWork unitOfWork)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.Dispose">
            <summary>Sets the shim of ProductService.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.FindFuncOfProductModelBoolean">
            <summary>Sets the shim of ProductService.Find(Func`2&lt;ProductModel,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.GetProductsGet">
            <summary>Sets the shim of ProductService.get_GetProducts()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.RemoveProductModel">
            <summary>Sets the shim of ProductService.Remove(ProductModel product)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.AddIEnumerableOfProductModel">
            <summary>Sets the shim of ProductService.Add(IEnumerable`1&lt;ProductModel&gt; products)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.AddProductModel">
            <summary>Sets the shim of ProductService.Add(ProductModel product)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.CompaniesGet">
            <summary>Sets the shim of ProductService.get_Companies()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.Dispose">
            <summary>Sets the shim of ProductService.Dispose()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.FindFuncOfProductModelBoolean">
            <summary>Sets the shim of ProductService.Find(Func`2&lt;ProductModel,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.GetProductsGet">
            <summary>Sets the shim of ProductService.get_GetProducts()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.ShimProductService.AllInstances.RemoveProductModel">
            <summary>Sets the shim of ProductService.Remove(ProductModel product)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService">
            <summary>Stub type of Ramesoft.Cms.Common.Services.Service.ProductService</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService.#ctor(Ramesoft.Cms.Common.DAL.Repository.IUnitOfWork)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService.InitializeStub">
            <summary>Initializes a new instance of type StubProductService</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Services.Service.Fakes.StubProductService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException">
            <summary>Shim type of Ramesoft.Cms.Common.Utility.Exceptions.InvalidSqlCommandException</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.#ctor(Ramesoft.Cms.Common.Utility.Exceptions.InvalidSqlCommandException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.ConstructorException">
            <summary>Sets the shim of InvalidSqlCommandException.InvalidSqlCommandException(Exception ex)</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.ShimInvalidSqlCommandException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException">
            <summary>Stub type of Ramesoft.Cms.Common.Utility.Exceptions.InvalidSqlCommandException</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidSqlCommandException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidSqlCommandException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidSqlCommandException</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Exceptions.Fakes.StubInvalidSqlCommandException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Ramesoft.Cms.Common.Utility.Fakes.ShimExtensions">
            <summary>Shim type of Ramesoft.Cms.Common.Utility.Extensions</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Fakes.ShimExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Ramesoft.Cms.Common.Utility.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Ramesoft.Cms.Common.Utility.Fakes.ShimExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
    </members>
</doc>
